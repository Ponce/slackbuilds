#!/bin/sh

# Slackware build script for yafaray

# Copyright (c) 2010 Alan Alberghini <414N@slacky.it>
# All rights reserved.
#
#   Permission to use, copy, modify, and distribute this software for
#   any purpose with or without fee is hereby granted, provided that
#   the above copyright notice and this permission notice appear in all
#   copies.
#
#   THIS SOFTWARE IS PROVIDED AS IS'' AND ANY EXPRESSED OR IMPLIED
#   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#   IN NO EVENT SHALL THE AUTHORS AND COPYRIGHT HOLDERS AND THEIR
#   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#   SUCH DAMAGE.
# -----------------------------------------------------------------------------
#
# Build history:
#
# 1.0 - Initial release.
# 1.1 - Removed a bashism (==) to become ash-compatible.

PRGNAM=yafaray
VERSION=${VERSION:-0.1.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

DOCS="LICENSE CODING INSTALL"
# Set to yes to build the qt4 gui (needs qt4)
USEQT=${USEQT:-yes}
# Set to yes to build python bindings too (needs swig)
BUILDPYTHON=${BUILDPYTHON:-no}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM
unzip "$CWD/YafaRay.${VERSION}.zip"
cd $PRGNAM
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

if [ ${USEQT} = yes ]; then
  QTTARGET="YF_QTDIR=/usr WITH_YF_QT=true"
else
  QTTARGET=""
fi

# The build system is kinda 'naive': it hardcodes the PREFIX and other
# directories specified at configure-time into the final libs, so we can't
# specify PREFIX=${PKG}/usr, YF_LIBOUT=${PKG}/usr/lib.. because, when the
# package will be installed, the program will try to find its libraries in a
# /tmp path, and not in /usr/lib/yafaray as it should.
# An easy workaround is to exploit the included debian package creator to
# install all the files in a temporary location without having to specify a
# "fake" PREFIX location. However, this seems to be glitchy too, as specifying
# a different YF_PACKPATH doesn't seem to work fine, so we have to manually
# copy the files from the temporary debian build path to $PKG in the end.

if [ ${BUILDPYTHON} = no ]; then
  scons debian $QTTARGET PREFIX=/usr \
  YF_LIBOUT=/usr/lib${LIBDIRSUFFIX} \
  YF_PLUGINPATH=/usr/lib${LIBDIRSUFFIX}/yafaray \
  REL_CCFLAGS="${SLKCFLAGS}" || echo "Don't worry about the dpkg error"
else
  scons swig debian $QTTARGET PREFIX=/usr \
  YF_LIBOUT=/usr/lib${LIBDIRSUFFIX} \
  YF_PLUGINPATH=/usr/lib${LIBDIRSUFFIX}/yafaray \
  REL_CCFLAGS="${SLKCFLAGS}" || echo "Don't worry about the dpkg error"
  # Install also python bindings (manually T_T)
  mkdir -p ${PKG}/usr/lib${LIBDIRSUFFIX}/python2.6/site-packages
  mv bindings/python/* ${PKG}/usr/lib${LIBDIRSUFFIX}/python2.6/site-packages/
fi

# Copy "debian" package root to our package root.
# mv may complain if the python bindings have already been
# moved to their new home, hence we use cp + rm.
cp -r debian/${PRGNAM}/* ${PKG}
rm -rf debian/${PRGNAM}

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  $DOCS \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
