diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/diargpxt.h aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/diargpxt.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/diargpxt.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/diargpxt.h	2012-09-25 20:11:29.881757648 +0200
@@ -95,7 +95,7 @@
                  const unsigned long planeSize,
                  const int bits)
     {                                             // not very much optimized, but no one really uses ARGB !!
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             register T2 value;
             const T1 offset = OFstatic_cast(T1, DicomImageClass::maxval(bits - 1));
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dicmypxt.h aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dicmypxt.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dicmypxt.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dicmypxt.h	2012-09-25 20:14:32.593745320 +0200
@@ -91,7 +91,7 @@
                  const unsigned long planeSize,
                  const int bits)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             // use the number of input pixels derived from the length of the 'PixelData'
             // attribute), but not more than the size of the intermediate buffer
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dicocpt.h aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dicocpt.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dicocpt.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dicocpt.h	2012-09-25 20:07:57.968771948 +0200
@@ -90,7 +90,7 @@
     inline void copy(const T *pixel[3],
                      const unsigned long offset)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             for (int j = 0; j < 3; j++)
                 OFBitmanipTemplate<T>::copyMem(pixel[j] + offset, this->Data[j], this->getCount());
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dicoflt.h aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dicoflt.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dicoflt.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dicoflt.h	2012-09-25 20:06:58.548775958 +0200
@@ -107,14 +107,14 @@
                      const int horz,
                      const int vert)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             if (horz && vert)
-                flipHorzVert(pixel, this->Data);
+                this->flipHorzVert(pixel, this->Data);
             else if (horz)
-                flipHorz(pixel, this->Data);
+                this->flipHorz(pixel, this->Data);
             else if (vert)
-                flipVert(pixel, this->Data);
+                this->flipVert(pixel, this->Data);
         }
     }
 };
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dicorot.h aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dicorot.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dicorot.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dicorot.h	2012-09-25 20:05:34.961781601 +0200
@@ -107,14 +107,14 @@
     inline void rotate(const T *pixel[3],
                        const int degree)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             if (degree == 90)
-                rotateRight(pixel, this->Data);
+                this->rotateRight(pixel, this->Data);
             else if (degree == 180)
-                rotateTopDown(pixel, this->Data);
+                this->rotateTopDown(pixel, this->Data);
             else  if (degree == 270)
-                rotateLeft(pixel, this->Data);
+                this->rotateLeft(pixel, this->Data);
         }
     }
 };
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dicosct.h aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dicosct.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dicosct.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dicosct.h	2012-09-25 20:07:14.648774873 +0200
@@ -116,8 +116,8 @@
     inline void scale(const T *pixel[3],
                       const int interpolate)
     {
-        if (Init(pixel))
-            scaleData(pixel, this->Data, interpolate);
+        if (this->Init(pixel))
+            this->scaleData(pixel, this->Data, interpolate);
     }
 };
 
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dihsvpxt.h aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dihsvpxt.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dihsvpxt.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dihsvpxt.h	2012-09-25 20:18:17.936730111 +0200
@@ -92,7 +92,7 @@
                  const unsigned long planeSize,
                  const int bits)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             register T2 *r = this->Data[0];
             register T2 *g = this->Data[1];
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dipalpxt.h aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dipalpxt.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dipalpxt.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dipalpxt.h	2012-09-25 20:22:18.771713860 +0200
@@ -103,7 +103,7 @@
     void convert(const T1 *pixel,
                  DiLookupTable *palette[3])
     {                                                                // can be optimized if necessary !
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             register const T1 *p = pixel;
             register T2 value = 0;
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dirgbpxt.h aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dirgbpxt.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/dirgbpxt.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/dirgbpxt.h	2012-09-25 21:11:27.952514832 +0200
@@ -91,7 +91,7 @@
                  const unsigned long planeSize,
                  const int bits)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             // use the number of input pixels derived from the length of the 'PixelData'
             // attribute), but not more than the size of the intermediate buffer
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/diybrpxt.h aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/diybrpxt.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/diybrpxt.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/diybrpxt.h	2012-09-25 21:18:03.026488172 +0200
@@ -96,7 +96,7 @@
                  const int bits,
                  const OFBool rgb)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             const T1 offset = OFstatic_cast(T1, DicomImageClass::maxval(bits - 1));
             // use the number of input pixels derived from the length of the 'PixelData'
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/diyf2pxt.h aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/diyf2pxt.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/diyf2pxt.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/diyf2pxt.h	2012-09-25 21:27:04.284451644 +0200
@@ -105,7 +105,7 @@
                  const int bits,
                  const OFBool rgb)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             const T1 offset = OFstatic_cast(T1, DicomImageClass::maxval(bits - 1));
             register unsigned long i;
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/diyp2pxt.h aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/diyp2pxt.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimage/include/dcmtk/dcmimage/diyp2pxt.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimage/include/dcmtk/dcmimage/diyp2pxt.h	2012-09-25 21:30:20.158438426 +0200
@@ -101,7 +101,7 @@
     void convert(const T1 *pixel,
                  const int bits)
     {
-        if (Init(pixel))
+        if (this->Init(pixel))
         {
             register T2 *r = this->Data[0];
             register T2 *g = this->Data[1];
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimgle/include/dcmtk/dcmimgle/diflipt.h aeskulap-0.2.2-beta1/dcmtk/dcmimgle/include/dcmtk/dcmimgle/diflipt.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimgle/include/dcmtk/dcmimgle/diflipt.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimgle/include/dcmtk/dcmimgle/diflipt.h	2012-09-25 19:59:57.991804341 +0200
@@ -139,7 +139,7 @@
             else if (vert)
                 flipVert(src, dest);
             else
-                copyPixel(src, dest);
+                this->copyPixel(src, dest);
         }
     }
 
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimoflt.h aeskulap-0.2.2-beta1/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimoflt.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimoflt.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimoflt.h	2012-09-25 19:54:07.636827983 +0200
@@ -114,11 +114,11 @@
             if (this->Data != NULL)
             {
                 if (horz && vert)
-                    flipHorzVert(&pixel, &this->Data);
+                    this->flipHorzVert(&pixel, &this->Data);
                 else if (horz)
-                    flipHorz(&pixel, &this->Data);
+                    this->flipHorz(&pixel, &this->Data);
                 else if (vert)
-                    flipVert(&pixel, &this->Data);
+                    this->flipVert(&pixel, &this->Data);
             }
         }
     }
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimoipxt.h aeskulap-0.2.2-beta1/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimoipxt.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimoipxt.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimoipxt.h	2012-09-25 19:52:42.383833738 +0200
@@ -79,10 +79,10 @@
             else if ((this->Modality != NULL) && this->Modality->hasRescaling())
             {
                 rescale(pixel, this->Modality->getRescaleSlope(), this->Modality->getRescaleIntercept());
-                determineMinMax(OFstatic_cast(T3, this->Modality->getMinValue()), OFstatic_cast(T3, this->Modality->getMaxValue()));
+                this->determineMinMax(OFstatic_cast(T3, this->Modality->getMinValue()), OFstatic_cast(T3, this->Modality->getMaxValue()));
             } else {
                 rescale(pixel);                     // "copy" or reference pixel data
-                determineMinMax(OFstatic_cast(T3, this->Modality->getMinValue()), OFstatic_cast(T3, this->Modality->getMaxValue()));
+                this->determineMinMax(OFstatic_cast(T3, this->Modality->getMinValue()), OFstatic_cast(T3, this->Modality->getMaxValue()));
             }
         }
     }
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimorot.h aeskulap-0.2.2-beta1/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimorot.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimorot.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimorot.h	2012-09-25 19:54:35.497826106 +0200
@@ -114,11 +114,11 @@
             if (this->Data != NULL)
             {
                 if (degree == 90)
-                    rotateRight(&pixel, &(this->Data));
+                    this->rotateRight(&pixel, &(this->Data));
                 else if (degree == 180)
-                    rotateTopDown(&pixel, &(this->Data));
+                    this->rotateTopDown(&pixel, &(this->Data));
                 else if (degree == 270)
-                    rotateLeft(&pixel, &(this->Data));
+                    this->rotateLeft(&pixel, &(this->Data));
             }
         }
     }
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimosct.h aeskulap-0.2.2-beta1/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimosct.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimosct.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dimosct.h	2012-09-25 19:52:51.411833127 +0200
@@ -130,7 +130,7 @@
             {
                 const T value = OFstatic_cast(T, OFstatic_cast(double, DicomImageClass::maxval(bits)) *
                     OFstatic_cast(double, pvalue) / OFstatic_cast(double, DicomImageClass::maxval(WIDTH_OF_PVALUES)));
-                scaleData(&pixel, &this->Data, interpolate, value);
+                this->scaleData(&pixel, &this->Data, interpolate, value);
              }
         }
     }
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dirotat.h aeskulap-0.2.2-beta1/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dirotat.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dirotat.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimgle/include/dcmtk/dcmimgle/dirotat.h	2012-09-25 20:00:16.761803074 +0200
@@ -141,7 +141,7 @@
         else if (degree == 270)
             rotateLeft(src, dest);
         else
-            copyPixel(src, dest);
+             this->copyPixel(src, dest);
     }
 
 
diff -Naur aeskulap-0.2.2-beta1.orig/dcmtk/dcmimgle/include/dcmtk/dcmimgle/discalet.h aeskulap-0.2.2-beta1/dcmtk/dcmimgle/include/dcmtk/dcmimgle/discalet.h
--- aeskulap-0.2.2-beta1.orig/dcmtk/dcmimgle/include/dcmtk/dcmimgle/discalet.h	2007-05-24 21:20:41.000000000 +0200
+++ aeskulap-0.2.2-beta1/dcmtk/dcmimgle/include/dcmtk/dcmimgle/discalet.h	2012-09-25 19:55:53.419820846 +0200
@@ -201,12 +201,12 @@
                     ofConsole.unlockCerr();
                 }
 #endif
-                fillPixel(dest, value);                                         // ... fill bitmap
+                this->fillPixel(dest, value);                                         // ... fill bitmap
             }
             else if ((this->Src_X == this->Dest_X) && (this->Src_Y == this->Dest_Y))                    // no scaling
             {
                 if ((Left == 0) && (Top == 0) && (Columns == this->Src_X) && (Rows == this->Src_Y))
-                    copyPixel(src, dest);                                       // copying
+                    this->copyPixel(src, dest);                                       // copying
                 else if ((Left >= 0) && (OFstatic_cast(Uint16, Left + this->Src_X) <= Columns) &&
                          (Top >= 0) && (OFstatic_cast(Uint16, Top + this->Src_Y) <= Rows))
                     clipPixel(src, dest);                                       // clipping
