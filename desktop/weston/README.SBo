Weston:  reference implementation of a Wayland compositor.
==========================================================

This README is current as of Weston 9.0.0.

Introduction
------------

Weston is the reference implementation of a Wayland compositor, as well
as a useful environment in and of itself.

Out of the box, Weston provides a very basic desktop, or a full-featured
environment for non-desktop uses such as automotive, embedded,
in-flight, industrial, kiosks, set-top boxes and TVs. It also provides a
library allowing other projects to build their own full-featured
environments on top of Weston's core.

A small suite of example or demo clients are also provided: though they
can be useful in themselves, their main purpose is to be an example or
test case for others building compositors or clients.


Slackware-specific Information
------------------------------

*****************************************
IMPORTANT:  MANUAL INTERVENTION REQUIRED.
*****************************************

This SlackBuild of Weston takes a fairly "hands off" approach, and there
are a few things users need to be aware of.

To launch Weston, here are some required steps.

Please note that setting weston-launch suid root is NOT required any longer
under PAM-ified Slackware Current.

1. If you do not have another script exporting XDG_RUNTIME_DIR, you
should enable the one that comes with this SlackBuild:

	# chmod +x /etc/profile.d/weston.sh
		(or .csh, depending on your shell)

2. Logout (if necessary) and re-login as root.

Once you've logged out and back in as root, run:

	`exec weston-launch -u $USER`

where $USER is the username of the normal user you would like to launch Weston
as.

To launch with Xwayland support, run:

	`exec weston-launch -u $USER -- --xwayland`

You can use the Ctrl+Alt+Backspace keyboard combination to kill Weston.


Optional Dependencies
---------------------

At the present time, the only optional dependency for this SlackBuild is
colord, which is disabled by default. That is because colord pulls in many
dependencies, while building Weston without colord requires no dependencies at
all on Slackware current, which may be more desirable for users that just want
to quickly test out Wayland by getting Weston up and running.

If you would like to enable colord functionality in this SlackBuild,
set the USE_COLORD variable to "true" before running the SlackBuild.


Known Issues
------------

* I have not had success getting Weston to launch with the proprietary nvidia
drivers in use. YMMV. I have had the best luck with the Intel KMS drivers.

* In testing 8.0.0 on the newly PAM-ified Slackware current, I have found that
after running Ctrl+Alt+Backspace to quit, I am brought back to a blank,
black screen. If this happens, try waiting a few seconds and then hit
Ctrl+Alt+F2 (for instance) followed by Ctrl+Alt+F1 to get back to the console.

* I want to stress and emphasize that this is still relatively experimental
software, that talks to your hardware at a fairly low level. For the most
part, I have not had any major issues, but I have seen some odd bugs and
behaviour, including Weston hard-locking my system upon exit and having to
reboot. I have also returned to my shell to find that some keystrokes I had
inputted while using Weston had been inputted into my console with a series of
"Command not found" errors. I do not believe Weston has been widely tested on
non-systemd/logind systems such as Slackware. Use at your own risk.
