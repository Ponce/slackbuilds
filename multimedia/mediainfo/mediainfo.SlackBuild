#!/bin/bash

# Slackware build script for mediainfo

# Copyright 2010-2012  Binh Nguyen <binhvng@gmail.com>
# Copyright 2012-2017 Ryan P.C. McQuen | Everett, WA | ryanpcmcquen@member.fsf.org
# Copyright 2017-2022  Jeremy Hansen <jebrhansen+SBo -at- gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=mediainfo
VERSION=${VERSION:-21.09}
SRCNAM=MediaInfo
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

# CLI is built by default, GUI is optional
CLI=${CLI:-yes}
GUI=${GUI:-no}

# Clear the document variables to make sure it works
CLIDOC=""
GUIDOC=""

# Let's make sure that at least one of the interfaces will be built
if [ "${CLI}" != "yes" ] && [ "${GUI}" != "yes" ]; then
  echo -e "\n\n\t=========================================================\n"
  echo -e "\tYou must choose either the CLI or GUI (or both) to be built."
  echo -e "\n\t=========================================================\n\n"
  exit 1
fi

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -eu

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf ${SRCNAM}-${VERSION}
tar xvf $CWD/${SRCNAM}-${VERSION}.tar.gz
cd $SRCNAM-${VERSION}
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Patch to force using system libzen and error out if not present
patch -p1 < $CWD/remove-internal-libzen-support.patch

# Make compiling the CLI version optional
if [ "$CLI" == "yes" ]; then

  cd Project/GNU/CLI
  ./autogen.sh

  CFLAGS="$SLKCFLAGS" \
  CXXFLAGS="$SLKCFLAGS" \

  ./configure \
    --prefix=/usr \
    --libdir=/usr/lib${LIBDIRSUFFIX} \
    --sysconfdir=/etc \
    --localstatedir=/var \
    --mandir=/usr/man \
    --infodir=/usr/info \
    --docdir=/usr/doc/$PRGNAM-$VERSION \
    --localedir=/usr/share/locale \
    --disable-static \
    --enable-shared \
    --build=$ARCH-slackware-linux

  make
  make install DESTDIR=$PKG
  cd -

  CLIDOC=History_CLI.txt
fi

# Make compiling the GUI optional -- requires wxWidgets/wxPython
if [ "$GUI" == "yes" ]; then

  # Error out if missing WxWidgets/wxPython rather than try downloading and compiling it
  cd Project/GNU/GUI
  sed -i 's|WxWidgets not yet compiled, try to compile|wxPython not found. Please install first.|' configure.ac
  sed -i 's|WxBuiltInCompile$|with_wxwidgets="no"|g' configure.ac

  ./autogen.sh

  ./configure \
    --prefix=/usr \
    --libdir=/usr/lib${LIBDIRSUFFIX} \
    --sysconfdir=/etc \
    --localstatedir=/var \
    --mandir=/usr/man \
    --infodir=/usr/info \
    --docdir=/usr/doc/$PRGNAM-$VERSION \
    --localedir=/usr/share/locale \
    --disable-static \
    --enable-shared \
    --build=$ARCH-slackware-linux

  make
  make install DESTDIR=$PKG
  cd -

  # We need an icon file
  install -D -m 0644 Source/Resource/Image/MediaInfo.png \
                     $PKG/usr/share/pixmaps/mediainfo.png

  # Manually install the .desktop file
  install -D -m 0644 Project/GNU/GUI/mediainfo-gui.desktop \
                     $PKG/usr/share/applications/mediainfo-gui.desktop

  GUIDOC=History_GUI.txt
fi

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a ${CLIDOC} ${GUIDOC} License.html LICENSE README.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
chmod 0644 $PKG/usr/doc/$PRGNAM-$VERSION/*

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
