#!/bin/bash

# Slackware build script for dolphin-emu

# Copyright 2022-2023 Steven Voges <Oregon, USA>
# Copyright 2013-2017 Larry Hajali <larryhaja[at]gmail[dot]com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=dolphin-emu
SRCNAM=dolphin
VERSION=${VERSION:-5.0.19115}
COMMIT=$(echo $VERSION | cut -c 5-)
SRCVER=${SRCVER:-806ea59d77809aa7c6c17a4b61ae304b0f19e284}
IMPLOT=${IMPLOT:-d87512353495e7760e7fda7566a05beef7627d8f}
LIBSPNG=${LIBSPNG:-dc5b1032c08efac68ad30170f7ccbf0aa8dd55c9}
MGBA=${MGBA:-89f8873df366a99dfdf40347f72e68763fb50bd9}
SPIRVCROSS=${SPIRVCROSS:-50b4d5389b6a06f86fb63a2848e1a7da6d9755ca}
VULKANMEMORYALLOCATOR=${VULKANMEMORYALLOCATOR:-c351692490513cdb0e5a2c925aaf7ea4a9b672f4}
ZLIBNG=${ZLIBNG:-ce01b1e41da298334f8214389cc9369540a7560f}
ANALYTICS=${ANALYTICS:-ON}
DISCORD=${DISCORD:-OFF}
USEMGBA=${USEMGBA:-ON}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}
DEPS=$TMP/$SRCNAM-$SRCVER/Externals

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-$SRCVER
tar xvf $CWD/$SRCNAM-$SRCVER.tar.gz
cd $SRCNAM-$SRCVER

tar xvf $CWD/SPIRV-Cross-$SPIRVCROSS.tar.gz -C \
  $DEPS/spirv_cross/SPIRV-Cross --strip-components 1
tar xvf $CWD/VulkanMemoryAllocator-$VULKANMEMORYALLOCATOR.tar.gz -C \
  $DEPS/VulkanMemoryAllocator --strip-components 1
tar xvf $CWD/implot-$IMPLOT.tar.gz -C \
  $DEPS/implot/implot --strip-components 1
tar xvf $CWD/libspng-$LIBSPNG.tar.gz -C \
  $DEPS/libspng/libspng --strip-components 1
if [ ${USEMGBA} = "ON" ]; then
  tar xvf $CWD/mgba-$MGBA.tar.gz -C \
    $DEPS/mGBA/mgba --strip-components 1
fi
tar xvf $CWD/zlib-ng-$ZLIBNG.tar.gz -C \
  $DEPS/zlib-ng/zlib-ng --strip-components 1

sed -i "s/ (no further info)/-$COMMIT/g" CMakeLists.txt

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# fmt in current is incompatible
sed -i 's|^find_package(fmt 8)|unset(fmt_FOUND)|' CMakeLists.txt

mkdir -p build
cd build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLIB_INSTALL_DIR=/usr/lib${LIBDIRSUFFIX} \
    -Dmandir=/usr/man \
    -DDISTRIBUTOR=SlackBuilds.org \
    -DENABLE_ANALYTICS=$ANALYTICS \
    -DENABLE_LTO=ON \
    -DENABLE_SDL=ON \
    -DENABLE_TESTS=OFF \
    -DUSE_DISCORD_PRESENCE=$DISCORD \
    -DUSE_MGBA=$USEMGBA \
    -DCMAKE_BUILD_TYPE=Release ..
  make
  make install/strip DESTDIR=$PKG
cd ..

mv $PKG/usr/share/man $PKG/usr/man

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  docs LICENSES/* *.md COPYING \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
