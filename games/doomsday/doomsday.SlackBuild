#!/bin/bash

# Slackware build script for doomsday

# Copyright 2014-2016  Dimitris Zlatanidis  Orestiada, Greece
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Now maintained by B. Watson.

# 20211102 bkw: someone else updated this for v2.3.1 BUILD=1.
# - BUILD=2.
# - new-style icons.
# - binaries in /usr/games.

# 20170207 bkw:
# - Take over maintenance, BUILD=2
# - Remove OpenAL and fmodapi from REQUIRES, since they are not
#   only not required, but actually not enabled in the build.
# - TODO: get rid of libpng sRGB profile warnings, especially in
#         doomsday-launcher where they cause a modal dialog.
# - TODO: get rid of "can't initialize FMOD" warnings, when fmodapi
#         isn't even built in.
# - TODO: install binaries to /usr/games, not /usr/bin
# - TODO: possibly have .desktop file start doomsday, not launch-doomsday,
#         since doomsday automagically locates the game resources instead
#         of forcing the user to manually navigate to the IWAD paths. Not
#         sure about this: what else does launch-doomsday do?
# - TODO: enable OpenAL and fmodapi as optional dependencies. Think this
#         is done in config_user.pri.
# - TODO: figure out how to decrease the detail level or something, so
#         the game runs faster than a slideshow on my system. Failing
#         that, do all of the above, then hand off maintenance to someone
#         who can afford a shinier newer video card than I can.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=doomsday
VERSION=${VERSION:-2.3.1}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L .  -perm /111 -a \! -perm 755 -a -exec chmod 755 {} \+ -o \
        \! -perm /111 -a \! -perm 644 -a -exec chmod 644 {} \+

# build amethyst
mkdir -p build-amethyst
cd build-amethyst
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=Release \
    ../doomsday/tools/amethyst
  make
  make install/strip DESTDIR=$PKG
cd ..

mkdir -p build
cd build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=Release ..
  make
  make install/strip DESTDIR=$PKG
cd ..

mv $PKG/usr/bin $PKG/usr/games

DESKDIR=$PKG/usr/share/applications
chmod -x $DESKDIR/*
sed -i -e 's,/bin/,/games/,g' \
       -e '/^Encoding/d' \
       $DESKDIR/*

mkdir -p $PKG/usr/share/pixmaps
convert -resize 48x48 \
  $PKG/usr/share/icons/hicolor/256x256/apps/net.dengine.Doomsday.png \
  $PKG/usr/share/pixmaps/$PRGNAM.png

# duplicate PNG files
rm -f $PKG/usr/share/doomsday/deng-logo-256.png
ln -s ../icons/hicolor/256x256/apps/net.dengine.Doomsday.png \
      $PKG/usr/share/doomsday/deng-logo-256.png

# already provided by the assimp package
rm -fR $PKG/usr/include/assimp

# manually install man pages
rm -rf $PKG/usr/share/man
mkdir -p $PKG/usr/man/man6
for i in doomsday/doc/*.6; do
  gzip -9c < $i > $PKG/usr/man/man6/$( basename $i ).gz
done

mkdir -p $PKG/usr/doc
mv $PKG/usr/share/doc $PKG/usr/doc/$PRGNAM-$VERSION
cp -a README.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
