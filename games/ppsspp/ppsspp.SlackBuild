#!/bin/bash

# Slackware build script for ppsspp

# Copyright 2016  Hunter Sezen California, USA
# Copyright 2019-2020  Ruoh-Shoei LIN
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# 20210218 bkw: modified by SlackBuilds.org. Use correct filenames
# in the github URLs for the 'submodules'. This is needed because
# we don't get to decide what user-agent the user downloads files
# with. If the Content-Disposition header is honored (e.g. files
# downloaded with a web browser), this build failed.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=ppsspp
VERSION=${VERSION:-1.10.3}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION

# The submodules are in a separate archive. This is equivalent to
# git submodule update --init --recursive
tar -xvf $CWD/glslang-d0850f8*.tar.gz \
    -C ext/glslang --strip-components=1
tar -xvf $CWD/ppsspp-lang-1c64b8f*.tar.gz \
    -C assets/lang --strip-components=1
tar -xvf $CWD/SPIRV-Cross-a1f7c8d*.tar.gz \
    -C ext/SPIRV-Cross --strip-components=1
tar -xvf $CWD/armips-7885552*.tar.gz \
    -C ext/armips --strip-components=1
tar -xvf $CWD/ppsspp-ffmpeg-55147e5*.tar.gz \
    --exclude '*/Windows*' --exclude '*/android' \
    --exclude '*/ios' --exclude '*/blackberry'\
    --exclude '*/macosx' --exclude '*/wiiu' \
    --exclude '*/symbian' \
    -C ffmpeg --strip-components=1

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# This does build with Slackware 14.2's CMake.
sed -i 's/VERSION 3.6/VERSION 3.5.2/' CMakeLists.txt

# Don't force explicit ccache invocation.
sed -i -e '/include(ccache)/d' CMakeLists.txt

# set git-version
sed -i "s/unknown/${VERSION}/" git-version.cmake

mkdir -p build-qt build-sdl

QT=${QT:-off}
if [ "$QT" = "on" ]; then
    cd build-qt
    cmake \
	-DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
	-DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
	-DCMAKE_INSTALL_PREFIX=/usr \
	-DCMAKE_SKIP_RPATH=TRUE \
	-Wno-dev \
	-DUSING_QT_UI=ON \
	-DUSE_SYSTEM_LIBZIP=ON \
	-DUSE_DISCORD=OFF \
	-DCMAKE_BUILD_TYPE=Release ..
    make
    cd ..
    install -Dm755 build-qt/PPSSPPQt $PKG/usr/games/ppsspp-qt
    install -Dm644 $CWD/ppsspp-qt.desktop $PKG/usr/share/applications/ppsspp-qt.desktop
fi

cd build-sdl
cmake \
  -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DCMAKE_SKIP_RPATH=TRUE \
  -Wno-dev \
  -DUSING_QT_UI=OFF \
  -DHEADLESS='ON' \
  -DUSE_SYSTEM_LIBZIP=ON \
  -DUSE_DISCORD=OFF \
  -DCMAKE_BUILD_TYPE=Release ..
make
cd ..
install -Dm755 build-sdl/PPSSPPHeadless $PKG/usr/games/ppsspp-headless
install -Dm755 build-sdl/PPSSPPSDL $PKG/usr/games/ppsspp-sdl

mkdir -p $PKG/usr/{games,share/{applications,icons/hicolor,pixmaps,ppsspp}}
install -Dm644 $CWD/ppsspp.desktop $PKG/usr/share/applications/ppsspp.desktop
cp -r assets $PKG/usr/share/ppsspp
cp -r icons/hicolor/* $PKG/usr/share/icons/hicolor
cp icons/icon-512.svg $PKG/usr/share/pixmaps/ppsspp.svg

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -v LICENSE.TXT README.md history.md headless/headless.txt $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
