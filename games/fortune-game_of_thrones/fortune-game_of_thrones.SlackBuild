#!/bin/bash

# Slackware build script for fortune-game_of_thrones

# Written by B. Watson (yalhcru@gmail.com)

# Licensed under the WTFPL. See http://www.wtfpl.net/txt/copying/ for details.

# VERSION is the date given on the upstream site, and also the timestamp
# of the zip file.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=fortune-game_of_thrones
VERSION=${VERSION:-20210128}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}
ARCH=noarch

set -e

# This build doesn't even have an extracted source directory. All files
# are created in $PKG with correct permissions, no need for a find/chmod.

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP

FORTUNEDIR=$PKG/usr/share/games/fortunes
FORTUNEFILE=game_of_thrones
ZIPFILE=$CWD/Game_of_Thrones-quotes.zip

# The unzip|fmt pipeline below "succeeds" even if the source is missing, so:
if [ ! -s $ZIPFILE ]; then
  echo "*** You forgot to download the source, no soup for you!" 1>&2
  exit 1
fi

# The "fmt -s" splits long lines, since the file is full of lines that
# will wrap in a reasonably-sized terminal.
mkdir -p $FORTUNEDIR
unzip -aa -c $ZIPFILE | \
  fmt -s > $FORTUNEDIR/$FORTUNEFILE
strfile $FORTUNEDIR/$FORTUNEFILE $FORTUNEDIR/$FORTUNEFILE.dat

# Include my own README since upstream provides no docs at all.
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/README > $PKG/usr/doc/$PRGNAM-$VERSION/README
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
