#!/bin/sh

# Slackware build script for nodejs
# Thanks to Audrius Ka≈æukauskas

# Ryan P.C. McQuen | Everett, WA | ryanpcmcquen@member.fsf.org
# Willy Sudiarto Raharjo <willysr@slackbuilds.org>

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version, with the following exception:
# the text of the GPL license may be omitted.

# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose. Compiling,
# interpreting, executing or merely reading the text of the program
# may result in lapses of consciousness and/or very being, up to and
# including the end of all existence and the Universe as we know it.
# See the GNU General Public License for more details.

# You may have received a copy of the GNU General Public License
# along with this program (most likely, a file named COPYING). If
# not, see <https://www.gnu.org/licenses/>.

PRGNAM=nodejs
SRCNAM=node
VERSION=${VERSION:-6.10.3}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -eu

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-v$VERSION
tar xvf $CWD/$SRCNAM-v$VERSION.tar.xz
cd $SRCNAM-v$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

## Fix man page path.
sed -i 's|share/||' tools/install.py
sed -i '/var manRoot/ s/"share",//' deps/npm/lib/{,un}build.js

## Fix libdir for 64-bit.
sed -i "s|lib/|lib${LIBDIRSUFFIX}/|g" tools/install.py
sed -i "s/'lib'/'lib${LIBDIRSUFFIX}'/" lib/module.js
sed -i "s|\"lib\"|\"lib${LIBDIRSUFFIX}\"|" deps/npm/lib/npm.js

cd deps
patch -p1 < $CWD/chromium-v8-gcc7.patch
cd ..
./configure \
  --prefix=/usr \
  --shared-zlib \
  --shared-openssl \
  --with-intl=system-icu

make CFLAGS="$SLKCFLAGS" CXXFLAGS="$SLKCFLAGS"
make install DESTDIR=$PKG

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

## Add bash completion file for npm.
install -D -m 644 $CWD/npm.sh $PKG/usr/share/bash-completion/completions/npm

## Remove unneeded files.
find $PKG/usr \( -name '.git*' \) -exec rm -f {} \;

## Set NODE_PATH to look for globally installed modules.
mkdir -p $PKG/etc/profile.d
cat > $PKG/etc/profile.d/${SRCNAM}.csh << EOF
#!/bin/csh
setenv NODE_PATH /usr/lib${LIBDIRSUFFIX}/node_modules
EOF
cat > $PKG/etc/profile.d/${SRCNAM}.sh << EOF
#!/bin/sh
export NODE_PATH=/usr/lib${LIBDIRSUFFIX}/node_modules
EOF
chmod 0755 $PKG/etc/profile.d/*

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a AUTHORS LICENSE *.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
