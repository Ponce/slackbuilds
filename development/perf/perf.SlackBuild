#!/bin/bash

# Slackware build script for perf

# Copyright 2014, Andreas Guldstrand <andreas.guldstrand@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# 20210202 bkw: Modified by SlackBuilds.org, autodetect the kernel
# version and allow the user to override it. Avoids having this build
# break every time Pat releases a new kernel in patches/.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=perf

# This VERSION is actually a dummy. Use KERNEL to set the version.
VERSION=${VERSION:-5.15.16}

BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

die() {
  echo "$0: fatal: $@" 1>&2
  cat 1>&2 <<EOF

Please make sure the correct version of the kernel source is
installed, and/or set the KERNEL environment variable to one of:

- The full path to the kernel source, e.g. KERNEL="/usr/src/linux-4.4.227"
- Or, the kernel version e.g. KERNEL="4.4.227"
EOF
  exit 1
}

case "$KERNEL" in
  # if unset, use the running kernel:
  "") SRCDIR="/usr/src/linux-$( uname -r )" ;;
  # if it's an absolute path, use it as-is:
  /*) SRCDIR="$KERNEL" ;;
  # otherwise assume it's a version number:
  *)  SRCDIR="/usr/src/linux-$KERNEL" ;;
esac

[ -f "$SRCDIR/Makefile" ] || die "Can't find kernel source in \"$SRCDIR\""

# get the kernel version number from the top-level Makefile. This
# allows cases where the kernel source directory isn't named after the
# version number. It also verifies that the Makefile actually exists
# (because after upgrading/removing a kernel-source package, the
# directory might still exist, with the .config and other generated
# files, but no kernel source!)
cd $SRCDIR
VERSION="$( make kernelversion | tail -1 )"
[ -z "$VERSION" ] && die "Can't get kernel version (source corrupted?)"
echo "=== VERSION=\"$VERSION\""

SRCDIR="$SRCDIR/tools/perf"
[ -d "$SRCDIR" ] || die "Kernel source missing tools/perf directory"

BUILDDIR=$TMP/$PRGNAM-$VERSION

rm -rf $PKG $BUILDDIR
mkdir -p $TMP $PKG $BUILDDIR $OUTPUT

cd $SRCDIR

make \
  O=$BUILDDIR \
  DESTDIR=$PKG/ \
  prefix=/usr \
  EXTRA_CFLAGS="$SLKCFLAGS" \
  install

# Tidy up the source tree :-(
rm -f $SRCDIR/.config-detected

# Fixup paths (sysconfdir= and mandir= don't work)
mv $PKG/usr/share/man $PKG/usr/man
# if perf is built with optional deps, $PKG/usr/share/perf-core exists
rmdir --ignore-fail-on-non-empty $PKG/usr/share

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

DOCDIR=$PKG/usr/doc/$PRGNAM-$VERSION
mkdir -p $DOCDIR/Documentation
cp -a command-list.txt design.txt \
    CREDITS ../../COPYING \
    $DOCDIR
cp -a Documentation/*.txt $DOCDIR/Documentation
cat $CWD/$PRGNAM.SlackBuild > $DOCDIR/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
