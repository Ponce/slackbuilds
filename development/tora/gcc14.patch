--- a/extlibs/dtl/dtl/Diff.hpp	2020-04-04 05:42:48.000000000 -0500
+++ b/extlibs/dtl/dtl/Diff.hpp	2025-04-01 22:48:48.029602018 -0500
@@ -162,7 +162,7 @@
             return trivial;
         }
         
-        void enableTrivial () const {
+        void enableTrivial () {
             this->trivial = true;
         }
         
--- a/extlibs/libantlr3cpp-3.5.3/include/antlr3cyclicdfa.hpp	2020-04-04 05:42:48.000000000 -0500
+++ b/extlibs/libantlr3cpp-3.5.3/include/antlr3cyclicdfa.hpp	2025-04-02 22:38:54.580011846 -0500
@@ -52,18 +52,18 @@
     /// Decision number that a particular static structure
     ///  represents.
     ///
-    const ANTLR_INT32		m_decisionNumber;
+    ANTLR_INT32		m_decisionNumber;
 
     /// What this decision represents
     ///
     const ANTLR_UCHAR*			m_description;
-	const ANTLR_INT32* const	m_eot;
-    const ANTLR_INT32* const	m_eof;
-    const ANTLR_INT32* const	m_min;
-    const ANTLR_INT32* const	m_max;
-    const ANTLR_INT32* const	m_accept;
-    const ANTLR_INT32* const	m_special;
-    const ANTLR_INT32* const *const	m_transition;
+    const ANTLR_INT32* 	m_eot;
+    const ANTLR_INT32* 	m_eof;
+    const ANTLR_INT32* 	m_min;
+    const ANTLR_INT32* 	m_max;
+    const ANTLR_INT32* 	m_accept;
+    const ANTLR_INT32* 	m_special;
+    const ANTLR_INT32** 	m_transition;
 
 public:
 	CyclicDFA( ANTLR_INT32	decisionNumber

--- a/extlibs/libantlr3cpp-3.5.3/include/antlr3cyclicdfa.inl	2020-04-04 05:42:48.000000000 -0500
+++ b/extlibs/libantlr3cpp-3.5.3/include/antlr3cyclicdfa.inl	2025-04-02 22:53:27.867669706 -0500
@@ -17,7 +17,7 @@
 				, m_max(max)
 				, m_accept(accept)
 				, m_special(special)
-				, m_transition(transition)
+				, m_transition(const_cast<const ANTLR_INT32**>(transition))
 {
 	m_description = description;
 }
