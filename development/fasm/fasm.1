.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "FASM" 1 "2022-01-17" "1.73.29" "SlackBuilds.org"
.SH NAME
fasm \- fast assembler for the x86 and x86-64 architectures
.\" RST source for fasm(1) man page. Convert with:
.
.\" rst2man.py fasm.rst > fasm.1
.
.\" rst2man.py comes from the SBo development/docutils package.
.
.SH SYNOPSIS
.sp
fasm [\fB\-d\fP \fIname=value\fP ...] [\fB\-m\fP \fImem\-limit\fP] [\fB\-p\fP \fIpass\-limit\fP] [\fB\-s\fP \fIsymbol\-file\fP] \fIsource\-file\fP [\fIoutput\-file\fP]
.SH DESCRIPTION
.sp
\fBfasm\fP (aka flat assembler) is a fast assembler for the x86 and
x86\-64 architectures.  When executed, it will assemble the given
source file.
.sp
If no \fIoutput\-file\fP is given, the output filename will be the
\fIsource\-file\fP name with the extension replaced with \fI\&.o\fP\&.
.SH OPTIONS
.sp
The space between an option and its argument is optional (\fB\-m10\fP and
\fB\-m 10\fP are both acceptable).
.INDENT 0.0
.TP
.B \fB\-d\fP \fIname=value\fP
Predefine a symbol (variable). May be given multiple times, as needed.
.TP
.B \fB\-m\fP \fImem\-limit\fP
Set the limit in \fI1024\-byte\fP kilobytes for the amount of memory \fBfasm\fP can
use. If the limit is exceeded, \fBfasm\fP will exit with an "out of
memory" error and nonzero exit status. Default is 16384 (aka 16MB),
minimum is 1, maximum allowed is 4194303 (~4GB)... but values ~4000000 and up
can cause \fBfasm\fP to segfault.
.TP
.B \fB\-p\fP \fIpass\-limit\fP
Set the maximum number of passes \fBfasm\fP will make over the source. Default
is 100; maximum is 65536.
.TP
.B \fB\-s\fP \fIsymbol\-file\fP
Dump symbolic information for debugging to \fIsymbol\-file\fP\&. This file
can be processed with the \fBlisting\fP, \fBsymbols\fP, or \fBprepsrc\fP tools:
see /usr/doc/fasm\-1.73.29/tools\-readme.txt for details.
.UNINDENT
.SH EXIT STATUS
.sp
Zero for successful completion, 1 for invalid command\-line option(s),
or non\-zero (apparently always 255) for any fatal assembly error.
.SH COPYRIGHT
.sp
See the file /usr/doc/fasm\-1.73.29/license.txt for license information.
.SH AUTHORS
.sp
\fBfasm\fP was written by Tomasz Grysztar.
.sp
This man page written for the SlackBuilds.org project
by B. Watson, and is licensed under the WTFPL.
.SH SEE ALSO
.sp
The full documentation: /usr/doc/fasm\-1.73.29/fasm.txt
.sp
The fasm homepage: \fI\%https://flatassembler.net\fP
.\" Generated by docutils manpage writer.
.
