#!/bin/bash

# Slackware build script for mrustc

# Copyright 2017-2020 Andrew Clemons, Wellington New Zealand
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=mrustc
VERSION=${VERSION:-0.9}
RUSTCVERSION=${RUSTCVERSION:-1.19.0}
MRUSTCTARGETVERSION=${MRUSTCTARGETVERSION:-1.19}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  RUSTC_TARGET="i586-unknown-linux-gnu"
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  RUSTC_TARGET="i686-unknown-linux-gnu"
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  RUSTC_TARGET="x86_64-unknown-linux-gnu"
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "arm" ] ; then
  if readelf -h /bin/bash | grep Flags | grep hard > /dev/null 2>&1 ; then
    # hardfloat
    RUSTC_TARGET="armv7-unknown-linux-gnueabihf"
    SLKCFLAGS="-O2 -march=armv7-a -mfpu=vfpv3-d16 -mfloat-abi=hard"
  else
    # softfloat
    RUSTC_TARGET="arm-unknown-linux-gnueabi"
    SLKCFLAGS="-O2 -march=armv5te"
  fi

  LIBDIRSUFFIX=""
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION

tar -xf "$CWD/rustc-$RUSTCVERSION-src.tar.xz"

(
  cd "rustc-$RUSTCVERSION-src"
  patch -p0 < ../"rustc-$RUSTCVERSION-src.patch"
  echo "$RUSTCVERSION" > dl-version
)

sed -i 's/\(TargetVersion.*TargetVersion.*=.*\)TargetVersion::Rustc1_29/\1TargetVersion::Rustc1_19/' src/main.cpp

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
RUSTC_VERSION="$RUSTCVERSION" \
MRUSTC_TARGET_VER="$MRUSTCTARGETVERSION" \
OUTDIR_SUF="" \
CC=gcc \
CXX=g++ \
make RUSTC_TARGET="$RUSTC_TARGET"

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
RUSTC_VERSION="$RUSTCVERSION" \
MRUSTC_TARGET_VER="$MRUSTCTARGETVERSION" \
OUTDIR_SUF="" \
CC=gcc \
CXX=g++ \
make -f minicargo.mk LIBS RUSTC_TARGET="$RUSTC_TARGET"

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
RUSTC_VERSION="$RUSTCVERSION" \
MRUSTC_TARGET_VER="$MRUSTCTARGETVERSION" \
OUTDIR_SUF="" \
CC=gcc \
CXX=g++ \
make -C tools/minicargo RUSTC_TARGET="$RUSTC_TARGET"

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
RUSTC_VERSION="$RUSTCVERSION" \
MRUSTC_TARGET_VER="$MRUSTCTARGETVERSION" \
OUTDIR_SUF="" \
CC=gcc \
CXX=g++ \
make test RUSTC_TARGET="$RUSTC_TARGET"

mkdir -p $PKG/usr/bin
install -m 0755 bin/mrustc $PKG/usr/bin/mrustc
install -m 0755 tools/bin/minicargo $PKG/usr/bin/minicargo

mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/
cp -a output $PKG/usr/lib$LIBDIRSUFFIX/mrust

find $PKG/usr/lib$LIBDIRSUFFIX -name '*.txt' -print0 | xargs -0 rm

mkdir -p $PKG/usr/share/mrustc/run_rustc

install -m 0644 run_rustc/Makefile $PKG/usr/share/mrustc/run_rustc/Makefile

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/etc/profile.d
cat << EOF > $PKG/etc/profile.d/$PRGNAM.csh
#!/bin/csh
setenv MRUSTC_PATH=/usr/bin/mrustc
EOF

cat << EOF > $PKG/etc/profile.d/$PRGNAM.sh
#!/bin/sh
export MRUSTC_PATH=/usr/bin/mrustc
EOF

chmod 0755 $PKG/etc/profile.d/*

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  LICENCE-MIT README.md \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
