#!/bin/bash

# SlackBuild script for neovim

# Copyright 2014-2021 Benjamin Trigona-Harany <slackbuilds@jaxartes.net>
# Copyright 2021-2022 Ruben Schuller <sb@rbn.im>
# Copyright 2023-2024 Alexander Verbovetsky, Moscow, Russia
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=neovim
VERSION=${VERSION:-0.10.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz

mkdir -p $PRGNAM-$VERSION/.deps/build/src

cd $PRGNAM-$VERSION/.deps/build/src
for d in LuaJIT-*.tar.gz luv-*.tar.gz lua-compat-5.3-*.tar.gz \
  tree-sitter-c-*.tar.gz tree-sitter-lua-*.tar.gz \
  tree-sitter-markdown-*.tar.gz tree-sitter-query-*.tar.gz \
  tree-sitter-vimdoc-*.tar.gz tree-sitter-vim-*.tar.gz \
  lpeg-*.tar.gz
do
  tar xvf $CWD/$d
done
mv LuaJIT-* luajit
mv luv-* luv
mv lua-compat-5.3-* lua_compat53
mv tree-sitter-c-* treesitter_c
mv tree-sitter-lua-* treesitter_lua
mv tree-sitter-markdown-* treesitter_markdown
mv tree-sitter-query-* treesitter_query
mv tree-sitter-vimdoc-* treesitter_vimdoc
mv tree-sitter-vim-* treesitter_vim
mv lpeg-* lpeg

cd $TMP/$PRGNAM-$VERSION

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

export NVIM_LOG_FILE=$TMP/$PRGNAM-$VERSION/log
make \
  CMAKE_INSTALL_PREFIX=/usr \
  CMAKE_EXTRA_FLAGS=" \
    -DCMAKE_INSTALL_MANDIR=/usr/man \
    -DCMAKE_C_FLAGS:STRING=\"$SLKCFLAGS\"" \
  BUNDLED_CMAKE_FLAG=" \
    -DUSE_EXISTING_SRC_DIR=ON \
    -DUSE_BUNDLED=OFF \
    -DUSE_BUNDLED_LUV=ON \
    -DUSE_BUNDLED_LUAJIT=ON \
    -DUSE_BUNDLED_LPEG=ON \
    -DUSE_BUNDLED_TS_PARSERS=ON" \
  CMAKE_BUILD_TYPE=Release
make install DESTDIR=$PKG

rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a CONTRIBUTING.md README.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
