#!/bin/bash

# Slackware build script for bazel

# Copyright 2022-2023 Isaac Yu <isaacyu@protonmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=bazel
VERSION=${VERSION:-5.4.0}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
unzip $CWD/$PRGNAM-$VERSION-dist.zip -d $PRGNAM-$VERSION
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Missing include.
patch -p0 < $CWD/apply-abseil-stdint.patch
cp $CWD/abseil-missing-stdint.patch .

# Export environmental variables
# Please change JAVA_HOME if not using zulu-openjdk11
export JAVA_HOME=/usr/lib$LIBDIRSUFFIX/zulu-openjdk11
export EMBED_LABEL=$VERSION
export EXTRA_BAZEL_ARGS="--java_runtime_version=local_jdk --tool_java_runtime_version=local_jdk"

# Compile bazel
./compile.sh
./scripts/generate_bash_completion.sh \
  --bazel=output/bazel \
  --output=bazel-complete.bash \
  --prepend=scripts/bazel-complete-header.bash \
  --prepend=scripts/bazel-complete-template.bash
cd output
./bazel shutdown
cd ../

# Create new folders
mkdir -p $PKG/usr/bin
mkdir -p $PKG/usr/share/bash-completion/completions/bazel
mkdir -p $PKG/usr/share/zsh/site-functions/_bazel
mkdir -p $PKG/opt/bazel

# Move the bazel binary (It alone is 33MB).
# /usr/bin/bazel should not be stripped - otherwise, bazel becomes unusable:
# https://github.com/bazelbuild/bazel/issues/600
mv $TMP/$PRGNAM-$VERSION/output/bazel $PKG/usr/bin

# Copy scripts
cp $TMP/$PRGNAM-$VERSION/scripts/packages/bazel.sh $PKG/usr/bin
cp $TMP/$PRGNAM-$VERSION/bazel-complete.bash $PKG/usr/share/bash-completion/completions/bazel
cp $TMP/$PRGNAM-$VERSION/scripts/zsh_completion/_bazel $PKG/usr/share/zsh/site-functions/_bazel
for d in examples third_party tools; do
    cp -r $TMP/$PRGNAM-$VERSION/$d $PKG/opt/bazel/
done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a --no-preserve=mode \
  AUTHORS CODE_OF_CONDUCT.md CHANGELOG.md CONTRIBUTING.md CONTRIBUTORS LICENSE README.md \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
