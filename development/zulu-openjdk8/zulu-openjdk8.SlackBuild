#!/bin/bash

# Slackware build script for zulu-openjdk8

# Copyright (c) 2017-2018, SÃ©bastien Ballet <slacker6896 at gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=zulu-openjdk8
VERSION=${VERSION:-8.0.322}
ZULUVERSION=${ZULUVERSION:-8.60.0.21}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i686 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=${TMP}/package-${PRGNAM}
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i686" ]; then
  ZULU_ARCH=i686
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  ZULU_ARCH=x64
  LIBDIRSUFFIX="64"
else
  echo "Architecture ${ARCH} is not supported."
  exit 1
fi

SRCNAM=zulu${ZULUVERSION}-ca-jdk${VERSION}-linux_$ZULU_ARCH

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/
cd $PKG/usr/lib${LIBDIRSUFFIX}/
tar xvf ${CWD}/${SRCNAM}.tar.gz
mv ${SRCNAM} ${PRGNAM}
ln -sf ${PRGNAM} ${SRCNAM}

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Define whether or not a symlink to libjvm.so library must
# be created into /usr/lib${LIBDIRSUFFIX}. Can be set to "yes"
# or "no". Default to "yes"
#
if [ "${CREATE_LIBJVM_SYMLINK:-yes}" = "yes" ] ; then
  ln -sf \
    ${PRGNAM}/jre/lib/${LIB_ARCH}/server/libjvm.so \
    $PKG/usr/lib${LIBDIRSUFFIX}/libjvm.so
fi

mkdir -p ${PKG}/etc/profile.d
for SCRIPT in ${PRGNAM}.sh ${PRGNAM}.csh ; do
  cat ${CWD}/${SCRIPT} \
    | sed -e "s;lib/${PRGNAM};lib${LIBDIRSUFFIX}/${PRGNAM};" \
    > ${PKG}/etc/profile.d/${SCRIPT}
  chmod 755 ${PKG}/etc/profile.d/${SCRIPT}
done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
for DOCFILE in \
  ASSEMBLY_EXCEPTION \
  LICENSE \
  Welcome.html \
  release \
  DISCLAIMER \
  THIRD_PARTY_README \
  readme.txt ; do
    cp -a ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/${DOCFILE} \
  ${PKG}/usr/doc/${PRGNAM}-${VERSION}
done
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
