#!/bin/bash

# Slackware build script for subsurface

# Copyright 2014-2019 Larry Hajali <larryhaja[at]gmail[dot]com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=subsurface
SRCNAM=Subsurface
VERSION=${VERSION:-4.9.3}
GOOGLEMAPSVER=${MD5LONG:-0.0.0.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-$VERSION
tar xvf $CWD/$SRCNAM-$VERSION.tgz
cd $SRCNAM-$VERSION
tar xvf $CWD/libdivecomputer-$PRGNAM-branch-$VERSION.tgz
tar xvf $CWD/googlemaps-v.${GOOGLEMAPSVER}.tar.gz
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Fix building against newer versions of libgit2
patch -p1 < $CWD/libgit2-version.patch

# Ugly hack to avoid header collision between grantlee and grantlee-qt5.
# https://mail.kde.org/pipermail/release-team/2015-August/008911.html
sed -i 's|#include <grantlee_templates.h>|#include "grantlee_templates_local.h"|' \
  desktop-widgets/templatelayout.h
sed -e 's|grantlee/|Grantlee5/grantlee/|' \
  /usr/include/Grantlee5/grantlee_templates.h \
  > grantlee_templates_local.h

# Fix the location detection of googlemaps
sed -i "s|../install-root|googlemaps-v.${GOOGLEMAPSVER}|" CMakeLists.txt

# We already have packages for libdivecomputer and marble on the system.
# Subsurface requires newer (custom) packages then what is currently available,
# so we're going to compile them into the Subsurface package.
# Similar to packaging/ubuntu/debian/rules.
cd libdivecomputer-$PRGNAM-branch-$VERSION
  if [ ! -f configure ]; then
    autoreconf -ivf
  fi
  CFLAGS="$SLKCFLAGS" \
  CXXFLAGS="$SLKCFLAGS" \
  ./configure \
    --prefix=/usr \
    --libdir=/usr/lib${LIBDIRSUFFIX} \
    --enable-static=yes \
    --enable-shared=no \
    --enable-logging=no \
    --disable-silent-rules

  make
  make install DESTDIR="$PWD/.."
cd -

# Build qt5 locations googlemaps plugin
cd googlemaps-v.${GOOGLEMAPSVER}
  qmake-qt5 QMAKE_CFLAGS+="$SLKCFLAGS" QMAKE_CXXLAGS+="$SLKCFLAGS" \
    -o Makefile googlemaps.pro

  make
  make install INSTALL_ROOT=$PKG
cd -

# Build subsurface with libftdi support. Default is no.
if [ "${FTDI:-no}" == "yes" ]; then
  FTDISUPPORT="ON"
else
  FTDISUPPORT="OFF"
fi

# Build subsurface with QWebEngine instead of QWebKit. Defualt is QWebKit.
if [ "${QWEBENGINE:-no}" == "yes" ]; then
  QWEBSUPPORT="ON"
else
  QWEBSUPPORT="OFF"
fi

mkdir build
cd build
  cmake -G "Unix Makefiles" \
    -DCMAKE_INSTALL_PREFIX:PATH="/usr" \
    -DFTDISUPPORT:BOOL="$FTDISUPPORT" \
    -DUSE_WEBENGINE:BOOL="$QWEBSUPPORT" \
    -DMAKE_TESTS:BOOL=OFF \
    -DLIBGIT2_DYNAMIC:BOOL=ON \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DLIBDIVECOMPUTER_INCLUDE_DIR="../usr/include" \
    -DLIBDIVECOMPUTER_LIBRARIES="../usr/lib${LIBDIRSUFFIX}/libdivecomputer.a" \
    -DCMAKE_BUILD_TYPE=Release ..

  make VERBOSE=1
  make install DESTDIR=$PKG
cd -

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a gpl-2.0.txt INSTALL README.md SupportedDivecomputers.* TODO.CCR \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
