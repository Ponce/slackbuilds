#!/bin/bash

# Slackware build script for bsdmainutils

# Copyright 2017 mid-kid
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=bsdmainutils
VERSION=${VERSION:-9.0.12+nmu1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

HDATE_PRGNAM=libhdate
HDATE_VERSION=${HDATE_VERSION:-1.6.02}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

# Build hdate with python bindings to be able to build the judaic calendar
(
    cd $TMP
    rm -rf $HDATE_PRGNAM-$HDATE_VERSION
    tar xvf $CWD/$HDATE_PRGNAM-$HDATE_VERSION.tar.bz2
    cd $HDATE_PRGNAM-$HDATE_VERSION
    chown -R root:root .
    find -L . \
     \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
      -o -perm 511 \) -exec chmod 755 {} \; -o \
     \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
      -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

    ./configure \
        --prefix=$PWD/install \
        --with-python-sitelib-dir=$PWD/install/lib/python2.7/dist-packages \
        --disable-fpc \
        --disable-gpc \
        --disable-ruby \
        --disable-php \
        --disable-perl
    make
    make install
)
# Set environment to find the libraries
export LD_LIBRARY_PATH=$TMP/$HDATE_PRGNAM-$HDATE_VERSION/install/lib:$LD_LIBRARY_PATH
export PYTHONPATH=$TMP/$HDATE_PRGNAM-$HDATE_VERSION/install/lib/python2.7/dist-packages:$PYTHONPATH

cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/${PRGNAM}_$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Apply debian patches
cat debian/patches/series | xargs -I% patch -p1 -i debian/patches/%

# Build
make

# Build judaic calendar (as per debian/rules)
currentyear=2017  # Year of the latest entry in debian/changelog
year=`expr $currentyear + 5`
while [ ${year} -ne ${currentyear} ] ; do
    year=`expr $year - 1`
    python debian/calendarJudaic.py $year > debian/calendars/calendar.judaic.$year
done
( cd debian/calendars
    [ -L calendar.judaic ] || ln -s calendar.judaic.$year calendar.judaic
)

# Install the main programs
make DESTDIR=$PKG install

# Install additional files
while IFS=$'\n' read -r entry; do
    file="$(echo "$entry" | xargs | cut -d' ' -f1)"
    dest="$(echo "$entry" | xargs | cut -d' ' -f2)"
    if [ "$file" -a "$dest" ]; then
        mkdir -p $PKG/$dest
        cp -a $file $PKG/$dest
    fi
done < debian/install

# Move misplaced directories
mkdir -p $PKG/usr/doc
mv $PKG/usr/share/man $PKG/usr/man
mv $PKG/usr/share/doc/bsdmainutils $PKG/usr/doc/$PRGNAM-$VERSION
rmdir $PKG/usr/share/doc

# Install additional documentation
while IFS=$'\n' read -r entry; do
    cp -a $entry $PKG/usr/doc/$PRGNAM-$VERSION
done < debian/docs

# Remove Debian-specific files
rm -rf $PKG/usr/share/lintian

# Remove conflicting files (available in util-linux)
for prg in cal ul look hexdump col column colcrt colrm; do
    rm -f $PKG/usr/bin/$prg $PKG/usr/man/man1/$prg.1
done

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

cp -a \
    debian/changelog \
    debian/copyright \
    debian/cron.daily \
    debian/bsdmainutils.default \
    $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
gzip -9 $PKG/usr/doc/$PRGNAM-$VERSION/calendarJudaic.py
gzip -9 $PKG/usr/doc/$PRGNAM-$VERSION/changelog
gzip -9 $PKG/usr/doc/$PRGNAM-$VERSION/source.data

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
