#!/bin/sh

# Slackware build script for paml

# Copyright 2013-2016 Petar Petrov slackalaxy@gmail.com
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=paml
VERSION=${VERSION:-4.8a}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

MAINVER=4.8

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf ${PRGNAM}${VERSION}
tar xvf $CWD/${PRGNAM}${VERSION}.tgz
cd ${PRGNAM}${MAINVER}
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Use our CFLAGS
sed -i "/^C.*.*FLAGS/s/=/+=/" src/Makefile

# These are the main components, and most likely this will be all you
# need. Check the next sections if you need some optional components.
# They will be installed to /usr/libexec/paml in case you want them.
cd src
CFLAGS="$SLKCFLAGS" \
make -f Makefile

install -D -m755 baseml		$PKG/usr/bin/baseml
install -D -m755 basemlg	$PKG/usr/bin/basemlg
install -D -m755 chi2		$PKG/usr/bin/chi2
install -D -m755 codeml		$PKG/usr/bin/codeml
install -D -m755 evolver	$PKG/usr/bin/evolver
install -D -m755 mcmctree	$PKG/usr/bin/mcmctree
install -D -m755 pamp		$PKG/usr/bin/pamp
install -D -m755 yn00		$PKG/usr/bin/yn00

# Compile and install Evolver variations
cc $SLKCFLAGS -DCodonNSbranches    -o evolverNSbranches evolver.c tools.c -lm
cc $SLKCFLAGS -DCodonNSsites       -o evolverNSsites evolver.c tools.c -lm
cc $SLKCFLAGS -DCodonNSbranchsites -o evolverNSbranchsites evolver.c tools.c -lm

install -D -m755 evolverNSbranches 	$PKG/usr/libexec/$PRGNAM/evolverNSbranches
install -D -m755 evolverNSbranchsites 	$PKG/usr/libexec/$PRGNAM/evolverNSbranchsites
install -D -m755 evolverNSsites 	$PKG/usr/libexec/$PRGNAM/evolverNSsites

# Compile and install TreeTime
cc $SLKCFLAGS -o TreeTimeJeff TreeTimeJeff.c tools.c -lm
install -D -m755 TreeTimeJeff 	$PKG/usr/libexec/$PRGNAM/TreeTimeJeff

# Rename the local README, so we include it in the package.
mv README.txt README-compiling.txt

# Compile and install NEB, BEB and BranchSite
cd ../Technical/Simulation/Codon
cc $SLKCFLAGS -DNEB        -o PositiveSitesNEB PositiveSites.c -lm
cc $SLKCFLAGS -DBEB        -o PositiveSitesBEB PositiveSites.c -lm
cc $SLKCFLAGS -DBranchSite -o PositiveSitesBS  PositiveSites.c -lm

install -D -m755 PositiveSitesBEB 	$PKG/usr/libexec/$PRGNAM/PositiveSitesBEB
install -D -m755 PositiveSitesBS 	$PKG/usr/libexec/$PRGNAM/PositiveSitesBS
install -D -m755 PositiveSitesNEB 	$PKG/usr/libexec/$PRGNAM/PositiveSitesNEB

# Rename this README too so we include it in the package.
mv README.txt README-codon.txt

# Compile and install Multiruns
cd ..
cc -o multiruns $SLKCFLAGS multiruns.c -lm
install -D -m755 multiruns 	$PKG/usr/libexec/$PRGNAM/multiruns

cd $TMP/${PRGNAM}${MAINVER}

# Include sample system files and example experimental data.
mkdir -p $PKG/usr/share/$PRGNAM/{aa,codon,ctl,dat,nuc,paup,trees}
cp -a *.dat dat/* $PKG/usr/share/$PRGNAM/dat
cp -a Technical/Simulation/Codon/{codeml.ctl,*.dat} \
  $PKG/usr/share/$PRGNAM/codon
cp -a examples 	$PKG/usr/share/$PRGNAM
cp -a *.aa 	$PKG/usr/share/$PRGNAM/aa
cp -a *.ctl 	$PKG/usr/share/$PRGNAM/ctl
cp -a *.nuc 	$PKG/usr/share/$PRGNAM/nuc
cp -a paup* 	$PKG/usr/share/$PRGNAM/paup
cp -a *.trees 	$PKG/usr/share/$PRGNAM/trees

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a README.txt GeneticCode.txt doc/* src/README-compiling.txt \
  Technical/{Pt/eigenQREV.pdf,Simulation/{multiruns.txt,Codon/README-codon.txt}}\
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/MCMCtree.Tutorials.pdf > $PKG/usr/doc/$PRGNAM-$VERSION/MCMCtree.Tutorial.pdf
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
cat $CWD/LICENSE > $PKG/usr/doc/$PRGNAM-$VERSION/LICENSE

# Fix permissions.
find $PKG/usr/{doc,share} -type d -exec chmod 755 {} \; -o \
			  -type f -exec chmod 644 {} \;

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
