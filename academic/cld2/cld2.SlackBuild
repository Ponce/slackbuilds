#!/bin/sh

# SlackBuild script for cld2

# Copyright 2013 Benjamin Trigona-Harany <slackbuilds@jaxartes.net>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=cld2
VERSION=${VERSION:-20150820}
SRCREV=b56fa78a2fe44ac2851bae5bf4f4693a0644da7b
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
rm -rf $TMP/$PRGNAM-$SRCREV
cd $TMP
tar xvf $CWD/$PRGNAM-$SRCREV.tar.gz || tar xvf $CWD/$SRCREV.tar.gz
cd $PRGNAM-$SRCREV
chown -R root:root .

( cd internal
  g++ -shared $SLKCFLAGS -Wno-error=narrowing \
    cldutil.cc cldutil_shared.cc compact_lang_det.cc compact_lang_det_hint_code.cc \
    compact_lang_det_impl.cc debug.cc fixunicodevalue.cc \
    generated_entities.cc generated_language.cc generated_ulscript.cc \
    getonescriptspan.cc lang_script.cc offsetmap.cc scoreonescriptspan.cc \
    tote.cc utf8statetable.cc \
    cld_generated_cjk_uni_prop_80.cc cld2_generated_cjk_compatible.cc \
    cld_generated_cjk_delta_bi_4.cc generated_distinct_bi_0.cc \
    cld2_generated_quadchrome_2.cc cld2_generated_deltaoctachrome.cc \
    cld2_generated_distinctoctachrome.cc cld_generated_score_quad_octa_2.cc \
    -o libcld2.so
  
  g++ -shared $SLKCFLAGS -Wno-error=narrowing \
    cldutil.cc cldutil_shared.cc compact_lang_det.cc compact_lang_det_hint_code.cc \
    compact_lang_det_impl.cc debug.cc fixunicodevalue.cc \
    generated_entities.cc generated_language.cc generated_ulscript.cc \
    getonescriptspan.cc lang_script.cc offsetmap.cc scoreonescriptspan.cc \
    tote.cc utf8statetable.cc \
    cld_generated_cjk_uni_prop_80.cc cld2_generated_cjk_compatible.cc \
    cld_generated_cjk_delta_bi_32.cc generated_distinct_bi_0.cc \
    cld2_generated_quad0122.cc cld2_generated_deltaocta0122.cc \
    cld2_generated_distinctocta0122.cc cld_generated_score_quad_octa_0122.cc \
    -o libcld2_full.so

  g++ $SLKCFLAGS \
    compact_lang_det_test.cc -I. -L. libcld2_full.so \
    -o cld2

  install -D -m 0755 cld2 $PKG/usr/bin/cld2
  install -D -m 0755 libcld2.so $PKG/usr/lib${LIBDIRSUFFIX}/libcld2.so
  install -D -m 0755 libcld2_full.so $PKG/usr/lib${LIBDIRSUFFIX}/libcld2_full.so
)

# install header files
mkdir -p $PKG/usr/include/cld2/{internal,public}
( cd internal
  cp generated_language.h generated_ulscript.h integral_types.h lang_script.h $PKG/usr/include/cld2/internal
)
( cd public
  cp compact_lang_det.h encodings.h $PKG/usr/include/cld2/public
)

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  LICENSE \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
