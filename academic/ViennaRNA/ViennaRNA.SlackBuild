#!/bin/bash

# Slackware build script for ViennaRNA

# Copyright 2018-2021 Rob van Nues
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=ViennaRNA
VERSION=${VERSION:-2.5.0}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# You can configure some ViennaRNA features that are (not) compiled by default.
# See the README.md for details. You can enable/disable a these features by
# passing variables to the script (VAR=yes/no ./ViennaRNA.SlackBuild).
# indicated parts can be included/omitted
# not-included by default
# - CLuster Analysis (AnalyseSeqs, AnalyseDists)
# - Kinwalker (co-transcriptional folding)
# included but can be omitted:
# - Kinfold
# - RNAforester
# - RNAlocmin
# - Swig (all scripting interfaces)
# - Perl interface
# - Python interface
# - Python 3 interface
# - Streaming SIMD Extension support
# in the case of run time/ make/ or configure problems try turning off:
# - Link Time Optimization (LTO)
# for concurrent computation:
# - OpenMP support (disabling makes RNAlib not entirely threadsafe)
# - POSIX threads (pthread) support
# in case the following cause problems with your own third-party program that links against RNAlib
# for Z-score filtering via statically linked libsvm:
# - SVM Z-score filter in RNALfold
# - GNU Scientific Library for RNApvmin

cluster=""       ; [ "${CLUSTER:-yes}" != "no" ]        && cluster="--with-cluster"
kinwalker=""     ; [ "${KINWALKER:-yes}" != "no" ]      && kinwalker="--with-kinwalker"
# Default enabled features:
forester=""      ; [ "${FORESTER:-yes}" != "no" ]       && forester="--with-forester"
kinfold=""       ; [ "${KINFOLD:-yes}" != "no" ]        && kinwalk="--with-kinfold"
rnalocmin=""     ; [ "${RNALOCMIN:-yes}" != "no" ]      && rnalocmin="--with-rnalocmin"
perl=""          ; [ "${PERL:-yes}" != "no" ]           && perl="--with-perl"
# python = python3
python=""        ; [ "${PYTHON:-yes}" != "no" ]         && python="--with-python"
swig=""          ; [ "${SWIG:-yes}" != "no" ]           && swig="--with-swig"
simd=""          ; [ "${SIMD:-yes}" != "no" ]           && simd="--enable-simd"
lto=""           ; [ "${LTO:-yes}" != "no" ]            && lto="--enable-lto"
openmp=""        ; [ "${OPENMP:-yes}" != "no" ]         && openmp="--enable-openmp"
pthreads=""      ; [ "${PTHREADS:-yes}" != "no" ]       && pthreads="--enable-pthreads"
svm=""           ; [ "${SVM:-yes}" != "no" ]            && svm="--with-svm"
gsl=""           ; [ "${GSL:-yes}" != "no" ]            && gsl="--with-gsl"
json=""          ; [ "${JSON:-yes}" != "no" ]           && json="--with-json"

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib$LIBDIRSUFFIX \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --build=$ARCH-slackware-linux \
  --with-python2=no \
  --with-doc=no \
  $cluster \
  $kinwalker \
  $forester \
  $cluster \
  $kinwalker \
  $forester \
  $kinfold \
  $rnalocmin \
  $perl \
  $python \
  $swig \
  $simd \
  $lto \
  $openmp \
  $pthreads \
  $svm \
  $gsl \
  $json \
  || exit 1

make
make install DESTDIR=$PKG

##from https://www.tbi.univie.ac.at/RNA/packages/arch/PKGBUILD
cd misc
make install DESTDIR=$PKG
cd ..

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# cleanup after dirty install ...
for perlscript in $PKG/usr/share/ViennaRNA/bin/*.pl ; do
    mv "$perlscript" "$PKG/usr/bin/"
done
rm -r $PKG/usr/share/ViennaRNA/bin

# no need for that file it is outdated anyway
rm $PKG/usr/share/info/dir

#gzip info file
gzip -9 $PKG/usr/share/info/*.info

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

find $PKG -name perllocal.pod \
  -o -name ".packlist" \
  -o -name "*.bs" \
  | xargs rm -f

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION

#keep help and RNAlib-${VERSION} in src
if [[ -d $PKG/usr/doc/$PRGNAM-$VERSION/html ]]; then
 rm -r $PKG/usr/doc/$PRGNAM-$VERSION/html
fi

if [[ -e $PKG/usr/doc/$PRGNAM-$VERSION/RNAlib-$VERSION.pdf ]]; then
 rm $PKG/usr/doc/$PRGNAM-$VERSION/RNAlib-$VERSION.pdf
fi

cp -a \
  NEWS README.md AUTHORS COPYING THANKS INSTALL CHANGELOG.md license.txt \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

rm -f $PKG/usr/lib*/*.la

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
