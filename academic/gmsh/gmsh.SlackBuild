#!/bin/bash

# Slackware build script for gmsh
# Copyright 2020-2022 Fellype do Nascimento, Guaratingueta, Brazil
#
# Based on SlackBuild by Loris Vincenzi and PKGBUILD for gmsh at AUR
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=gmsh
VERSION=${VERSION:-4.9.2}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O3 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION-source
tar -xzvf $CWD/$PRGNAM-$VERSION-source.tgz
cd $PRGNAM-$VERSION-source
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# In order build getdp with gmsh support it is needed to build
# a small static Gmsh library first
# do it using BUILDSTATICLIB=yes ./gmsh.SlackBuild 
# default is BUILDSTATICLIB=no
if [ "${BUILDSTATICLIB:-no}" = "yes" ]; then
  echo "**building a static library for gmsh**"
  mkdir lib
  cd lib
  cmake -DDEFAULT=0 \
    -DENABLE_PARSER=1 \
    -DENABLE_POST=1 \
    -DENABLE_ANN=1 \
    -DENABLE_BLAS_LAPACK=1 \
    -DENABLE_BUILD_LIB=1 \
    -DENABLE_PRIVATE_API=1 \
    -DCMAKE_INSTALL_PREFIX:PATH=/usr \
    ..
  make lib
  make install/fast DESTDIR=$PKG/
  cd ..
fi

mkdir build
cd build
cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr \
  -DCMAKE_INSTALL_DOCDIR:PATH=/usr/share/gmsh \
  -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
  -DENABLE_BLAS_LAPACK=1 \
  -DENABLE_BUILD_SHARED=1 \
  -DENABLE_PETSC=OFF \
  -DENABLE_SLEPC=OFF \
  ..
# only demos/ and tutorial/ folders will be leaved in the /usr/share/gmsh dir

make
make install DESTDIR=$PKG
cd -

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

install -d "$PKG/usr/share/pixmaps/$PRGNAM"
install -m644 utils/icons/*.png "$PKG/usr/share/pixmaps/$PRGNAM"
install -D -m644 utils/icons/$PRGNAM.svg "$PKG/usr/share/icons/hicolor/scalable/apps/$PRGNAM.svg"

desktop-file-install --dir="$PKG/usr/share/applications" "$CWD/$PRGNAM.desktop"

mkdir -p $PKG/usr/man/man1
mv $PKG/usr/share/man/man1/gmsh.1 $PKG/usr/man/man1/
rm -Rf $PKG/usr/share/man/

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a CHANGELOG.txt CREDITS.txt LICENSE.txt README.txt $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
rm $PKG/usr/share/gmsh/*.txt

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
