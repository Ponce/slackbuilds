#!/bin/bash

# Slackware build script for squid
# http://www.squid-cache.org/

# Copyright 2006-2011  David Somero (dsomero@hotmail.com) Athens,TN USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=squid
VERSION=${VERSION:-6.9}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

SQUIDUSER=${SQUIDUSER:-nobody}
SQUIDGROUP=${SQUIDGROUP:-nobody}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.xz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# last option is needed on current
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc/squid \
  --localstatedir=/var \
  --datadir=/usr/share/squid \
  --with-pidfile=/var/run/squid \
  --mandir=/usr/man \
  --with-logdir=/var/log/squid \
  --enable-snmp \
  --enable-auth \
  --enable-auth-basic \
  --enable-auth-ntlm \
  --enable-auth-digest \
  --enable-auth-negotiate \
  --enable-removal-policies="lru,heap" \
  --enable-storeio="aufs,ufs,diskd,rock" \
  --enable-delay-pools \
  --enable-arp-acl \
  --with-openssl \
  --enable-snmp \
  --enable-linux-netfilter \
  --enable-ident-lookups \
  --enable-useragent-log \
  --enable-cache-digests \
  --enable-referer-log \
  --enable-arp-acl \
  --enable-htcp \
  --enable-carp \
  --enable-epoll \
  --with-large-files \
  --enable-arp-acl \
  --with-default-user=$SQUIDUSER \
  --enable-async-io \
  --enable-truncate \
  --enable-icap-client \
  --enable-ssl-crtd \
  --disable-arch-native \
  --disable-strict-error-checking \
  --enable-wccpv2

make all
make install DESTDIR=$PKG

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $(find $PKG/usr/man -type l); do ln -s $(readlink $i).gz $i.gz; rm $i; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  CONTRIBUTORS COPYING CREDITS ChangeLog INSTALL \
  QUICKSTART README RELEASENOTES.html SPONSORS $CWD/README.SBo \
    $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
chown root:root $PKG/usr/doc/$PRGNAM-$VERSION/*

mkdir -p $PKG/etc/rc.d
sed  -e "s,@SQUIDUSER@,$SQUIDUSER," -e "s,@SQUIDGROUP@,$SQUIDGROUP," \
  $CWD/rc.squid > $PKG/etc/rc.d/rc.squid.new

mkdir -p $PKG/etc/logrotate.d
sed -e "s,@SQUIDUSER@,$SQUIDUSER," -e "s,@SQUIDGROUP@,$SQUIDGROUP," $CWD/squid.logrotate \
  > $PKG/etc/logrotate.d/squid.new

( cd $PKG/etc/squid
  for i in mime cachemgr squid ; do mv $i.conf $i.conf.new ; done
  mv errorpage.css errorpage.css.new )
cp src/squid.conf.documented $PKG/etc/squid/squid.conf.documented

mkdir -p $PKG/var/{cache,lib,run}/squid
chown $SQUIDUSER:$SQUIDGROUP $PKG/var/{cache,lib,log,run}/squid

# Set a chache dir, the user and group to run as and set the pid location
sed -i "s|^#cache_dir|cache_dir|" $PKG/etc/squid/squid.conf.new
echo -e "\npid_filename /var/run/squid/squid.pid" >> $PKG/etc/squid/squid.conf.new
echo "cache_effective_user $SQUIDUSER"            >> $PKG/etc/squid/squid.conf.new
echo "cache_effective_group $SQUIDGROUP"          >> $PKG/etc/squid/squid.conf.new

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
