#!/bin/bash

# Copyright 2006, Alan Hicks, Lizella, GA
# Copyright 2010, 2013, 2015  Mario Preksavec, Zagreb, Croatia
# Copyright 2018-2020 Chris Walker, Kempner, TX
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=asterisk
VERSION=${VERSION:-16.15.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG="$TMP/package-$PRGNAM"
OUTPUT=${OUTPUT:-/tmp}

ASTERISKUSR=${ASTERISKUSR:-asterisk}
ASTERISKGRP=${ASTERISKGRP:-asterisk}
ASTERISKUID=${ASTERISKUID:-267}
ASTERISKGID=${ASTERISKGID:-267}

CACHEDIR=$TMP/$PRGNAM-cache
IMAPDIR=$TMP/imap-2007f

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

do_exit() {
  echo ; echo "You must have the ${ASTERISKUSR} user and ${ASTERISKGRP} group in"
  echo "order to build asterisk.  Sample lines to do so are below:"
  echo "# groupadd -g ${ASTERISKGID} ${ASTERISKGRP}"
  echo "# useradd -u ${ASTERISKUID} -d /var/lib/asterisk -s /bin/false -g ${ASTERISKGRP} ${ASTERISKUSR}"
  echo "Exiting..." ; echo ; exit 1
}

getent group ${ASTERISKGRP} >/dev/null || do_exit
getent passwd ${ASTERISKUSR} >/dev/null || do_exit

set -e

rm -fr $PKG $TMP/$PRGNAM-$VERSION $IMAPDIR $CACHEDIR
mkdir -p $TMP $PKG $OUTPUT $CACHEDIR
cd $TMP

# The following configuration options are determined by the users passed
# in command-line options. Build the configuration parameters for the
# configure script.
CONFIGURE_OPTS=

if [ "${VM_IMAP:-no}" != "no" ] && [ "${VM_ODBC:-no}" = "no" ]; then
  tar xvf $CWD/imap.tar.Z
  ( cd imap-2007f
    chown -R root:root .
    find -L . \
     \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
      -o -perm 511 \) -exec chmod 755 {} \; -o \
     \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
      -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

    if [ "$ARCH" = "x86_64" ]; then
      make slx EXTRACFLAGS="-fPIC -I/usr/include/openssl"
    else
      make slx EXTRACFLAGS="-I/usr/include/openssl"
    fi
  )
  CONFIGURE_OPTS="--with-imap=$IMAPDIR"
fi

if [ "${JANSSON:-yes}" = "yes" ]; then
  CONFIGURE_OPTS="${CONFIGURE_OPTS} --with-jansson-bundled"
else
  CONFIGURE_OPTS="${CONFIGURE_OPTS} --without-jansson-bundled"
fi

if [ "${PJSIP:-no}" != "no" ]; then
  CONFIGURE_OPTS="${CONFIGURE_OPTS} --with-pjproject-bundled"
else
  CONFIGURE_OPTS="${CONFIGURE_OPTS} --without-pjproject-bundled"
fi

# The configure script will download additional files from the internet.
# Make sure the additional files can be found by the configure script
# before configuring the package.
cp $CWD/asterisk-core-sounds* $CWD/asterisk-extra-sounds* \
   $CWD/asterisk-moh-opsound* $CWD/jansson-*.tar.bz2 $CWD/pjproject-*.tar.bz2 \
   $CACHEDIR

tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --with-cap \
  --with-download-cache=$CACHEDIR \
  $CONFIGURE_OPTS \
  --build=$ARCH-slackware-linux

( cd menuselect
  make menuselect
)
make menuselect-tree

# Supported values for LANGUAGE are: EN, EN_AU, EN_GB, EN_NX, ES, FR, IT
# RU, JA, and SV. Until I can get around to individually listing the
# additional files as part of this package I'm going to leave this
# option undocumented in the README and README.SBo. Specifying anything
# other than EN will cause the makefile to download additional sound
# files.
LANGUAGE=${LANGUAGE:-EN}

menuselect/menuselect \
  --enable res_config_mysql \
  --enable CORE-SOUNDS-${LANGUAGE}-WAV \
  --enable CORE-SOUNDS-${LANGUAGE}-ULAW \
  --enable CORE-SOUNDS-${LANGUAGE}-ALAW \
  --enable CORE-SOUNDS-${LANGUAGE}-G729 \
  --enable CORE-SOUNDS-${LANGUAGE}-G722 \
  menuselect.makeopts

if [ "${MOH:-no}" != "no" ]; then
  menuselect/menuselect \
    --enable MOH-OPSOUND-ULAW \
    --enable MOH-OPSOUND-ALAW \
    --enable MOH-OPSOUND-G729 \
    --enable MOH-OPSOUND-G722 \
    menuselect.makeopts
fi

if [ "${SOUNDS_EXTRA:-no}" != "no" ]; then
  # EXTRA_SOUNDS only has a subset of languages available for CORE_SOUNDS
  LANGUAGE_EXTRA=EN
  if [ "${LANGUAGE}" = "EN" -o "${LANGUAGE}" = "EN_GB" -o "${LANGUAGE}" -o "FR" ]; then
    LANGUAGE_EXTRA="${LANGUAGE}"
  fi
  menuselect/menuselect \
    --enable EXTRA-SOUNDS-${LANGUAGE_EXTRA}-WAV \
    --enable EXTRA-SOUNDS-${LANGUAGE_EXTRA}-ULAW \
    --enable EXTRA-SOUNDS-${LANGUAGE_EXTRA}-ALAW \
    --enable EXTRA-SOUNDS-${LANGUAGE_EXTRA}-G729 \
    --enable EXTRA-SOUNDS-${LANGUAGE-EXTRA}-G722 \
    menuselect.makeopts
fi

if [ "${VM_ODBC:-no}" != "no" ]; then
  menuselect/menuselect \
    --enable ODBC_STORAGE \
    menuselect.makeopts
elif [ "${VM_IMAP:-no}" != "no" ]; then
  menuselect/menuselect \
    --enable IMAP_STORAGE \
    menuselect.makeopts
fi

if [ "${MEETME:-no}" != "no" ]; then
  menuselect/menuselect \
    --enable app_meetme \
    menuselect.makeopts
fi

if [ "${G711_NEW:-no}" != "no" ]; then
  menuselect/menuselect \
    --enable G711_NEW_ALGORITHM \
    menuselect.makeopts
fi

make
make installdirs DESTDIR=$PKG
make samples DESTDIR=$PKG
make install DESTDIR=$PKG
make install-logrotate DESTDIR=$PKG

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mv $PKG/etc/logrotate.d/asterisk $PKG/etc/logrotate.d/asterisk.new

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION/sample_confs
mv $PKG/etc/asterisk/* $PKG/usr/doc/$PRGNAM-$VERSION/sample_confs/
cp -a CHANGES COPYING CREDITS ChangeLog LICENSE README* UPGRADE* doc/ contrib/ast-db-manage \
  $PKG/usr/doc/$PRGNAM-$VERSION/
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

# Install config files for a typical asterisk server; some of these
# files don't make sense, but recent changes in the module autoloader
# will require empty files to be in place for some items to work
for i in \
  asterisk codecs extensions iax indications musiconhold sip smdi modules voicemail ;
  do
  cat $PKG/usr/doc/$PRGNAM-$VERSION/sample_confs/${i}.conf > \
    $PKG/etc/asterisk/${i}.conf.new ;
done

mkdir -p $PKG/etc/rc.d
sed $CWD/rc.asterisk.new \
    -e "s,@ASTERISKUSR@,$ASTERISKUSR,g" \
    -e "s,@ASTERISKGRP@,$ASTERISKGRP,g" \
    > $PKG/etc/rc.d/rc.asterisk.new

# Set file ownership
chown -R $ASTERISKUSR:$ASTERISKGRP $PKG/usr/lib${LIBDIRSUFFIX}
chown -R $ASTERISKUSR:$ASTERISKGRP $PKG/var/lib/asterisk
chown -R $ASTERISKUSR:$ASTERISKGRP $PKG/var/spool/asterisk
chown -R $ASTERISKUSR:$ASTERISKGRP $PKG/var/log/asterisk
chown $ASTERISKUSR:$ASTERISKGRP $PKG/usr/sbin/asterisk

# The voicemail config file needs to writeable by the asterisk user
# otherwise password changes aren't preserved
chown -R root:$ASTERISKGRP $PKG/etc/asterisk
chmod 664 $PKG/etc/asterisk/voicemail.conf.new

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
