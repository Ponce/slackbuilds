#!/bin/sh

# Slackware build script for uwsgi

# Copyright 2012-2017 Audrius Ka≈æukauskas <audrius@neutrino.lt>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=uwsgi
VERSION=${VERSION:-2.0.15}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

# Build Python 2.x plugin.
PYTHON=${PYTHON:-yes}

# Set this to "yes" if you want to build a plugin for Python 3.x.  Requires
# python3 to be installed.
PYTHON3=${PYTHON3:-no}

# Perl PSGI plugin.
PSGI=${PSGI:-yes}

# Build Ruby Rack plugin.
RACK=${RACK:-yes}

set -eu

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Create build config file.
cat > buildconf/package.ini <<EOF
[uwsgi]
inherit = base
plugin_dir = /usr/lib$LIBDIRSUFFIX/uwsgi-$VERSION
embedded_plugins = null
EOF

# Build uWSGI core.
CFLAGS="$SLKCFLAGS" \
python uwsgiconfig.py --build package
install -D -m 0755 uwsgi $PKG/usr/bin/uwsgi

# Create directory for plugins.
mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/uwsgi-$VERSION

# Change the path, so that plugins would be placed inside $PKG.
sed -i "s|= /usr|= $PKG/usr|" buildconf/package.ini

# List of plugins to build.
PLUGINS="cache ping rpc corerouter fastrouter http ugreen signal syslog"

# Decide which language plugins to build.
[ "$PYTHON" = "yes" ] && PLUGINS="$PLUGINS python"
[ "$PSGI" = "yes" ] && PLUGINS="$PLUGINS psgi"
[ "$RACK" = "yes" ] && PLUGINS="$PLUGINS rack"

# Build plugins.
for PLUGIN in $PLUGINS ; do
  CFLAGS="$SLKCFLAGS" \
  python uwsgiconfig.py --plugin plugins/$PLUGIN package
done

# Use python3 to build plugin for it.
if [ "$PYTHON3" = "yes" ]; then
  CFLAGS="$SLKCFLAGS" \
  python3 uwsgiconfig.py --plugin plugins/python package python3
fi

# Create a few symlinks for automatic plugin loading.
( cd $PKG/usr/bin
  [ "$PYTHON" = "yes" ] && ln -sf uwsgi uwsgi_python || true
  [ "$PYTHON3" = "yes" ] && ln -sf uwsgi uwsgi_python3 || true
  [ "$PSGI" = "yes" ] && ln -sf uwsgi uwsgi_psgi || true
  [ "$RACK" = "yes" ] && ln -sf uwsgi uwsgi_rack || true
)

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a LICENSE README $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
