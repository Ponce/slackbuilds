#!/bin/bash

# Slackware build script for privoxy

# Copyright (c) 2007  alkos333 <me@alkos333.net>
# Copyright 2014-2022 Kyle Guinn <elyk03@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=privoxy
VERSION=${VERSION:-3.0.33}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$(uname -m)" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$(uname -m) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM-$VERSION
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

# privoxy user & group *MUST* exist before package creation
# See http://slackbuilds.org/uid_gid.txt for current recommendations.
PRIVOXY_USER=${PRIVOXY_USER:-privoxy}
PRIVOXY_GROUP=${PRIVOXY_GROUP:-privoxy}

set -e

if ! grep -q ^$PRIVOXY_GROUP: /etc/group 2>/dev/null ; then
        echo "    Error: PRIVOXY group ($PRIVOXY_GROUP) doesn't exist."
        echo "    Try creating one with: groupadd -g 206 $PRIVOXY_GROUP"
        exit 1
fi

if ! grep -q ^$PRIVOXY_USER: /etc/passwd 2>/dev/null ; then
        echo "    Error: PRIVOXY user ($PRIVOXY_USER) doesn't exist."
        echo "    Try creating one with: useradd -u 206 -g $PRIVOXY_GROUP -d /dev/null -s /bin/false $PRIVOXY_USER"
        exit 1
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION-stable
tar xvf $CWD/$PRGNAM-$VERSION-stable-src.tar.gz
cd $PRGNAM-$VERSION-stable
chown -R root:root .
chmod -R u+w,go-w,a+rX-st .

# Put the docs where we tell them to go.
sed -i "/^DOC_DEST/s/= .*/= @docdir@/" GNUmakefile.in

# rc.privoxy generation doesn't work well with $(DESTDIR).  Help it along.
sed -i "s/ \/etc\/rc.d\// \$(DESTDIR)\/etc\/rc.d\//g" GNUmakefile.in
mkdir -p $PKG/etc/rc.d

# Let AC_CHECK_LIB do the brotli autodetection, don't link to it if missing.
sed -i "/-lbrotlidec/d" configure.in

autoreconf -vif
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc/$PRGNAM \
  --localstatedir=/var \
  --mandir=/usr/man \
  --infodir=/usr/info \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --build=$ARCH-slackware-linux \
  --with-docbook=no \
  --with-user=$PRIVOXY_USER \
  --with-group=$PRIVOXY_GROUP \
  --with-openssl \
  --with-brotli \
  --enable-no-gifs \
  --enable-compression \
  --enable-large-file-support \
  --enable-extended-statistics \
  --enable-pcre-host-patterns \
  CFLAGS="$SLKCFLAGS" \

make
make install-strip DESTDIR=$PKG

find $PKG/usr/man -type f -exec gzip -9 {} +

cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

# Make .new files so we don't clobber the existing configuration.
for i in config match-all.action regression-tests.action trust user.action user.filter; do
  mv $PKG/etc/privoxy/$i $PKG/etc/privoxy/$i.new
done
# Others are not intended to be user-editable and will be overwritten.
# To disregard, uncomment this and the corresponding lines in doinst.sh.
#find $PKG/etc/privoxy -name '*.new' -prune -o -type f -exec mv {} {}.new \;

# Don't clobber the init script or logfile either.
mv $PKG/etc/rc.d/rc.privoxy $PKG/etc/rc.d/rc.privoxy.new
mv $PKG/var/log/privoxy/logfile $PKG/var/log/privoxy/logfile.new

# Remove empty directories that are part of Slackware base.
rmdir $PKG/usr/share
rmdir $PKG/var/run

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
