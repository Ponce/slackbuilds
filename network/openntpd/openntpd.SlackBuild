#!/bin/bash

# Slackware build script for openntpd

# Copyright (c) 2015-2018 LEVAI Daniel
# All rights reserved.
#
# * Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions
#   are met:
# * Redistributions of source code must retain the above copyright notice
#   this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDER BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=openntpd
VERSION=${VERSION:-6.8p1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

echo "You must have a user and group called '_ntp' to use this package. E.g.:
# groupadd -g 217 _ntp
# useradd -u 217 -m -d /var/empty/openntpd -s /bin/false -g _ntp _ntp"

# Check the user/group if they're present
egrep -q -e '^_ntp:' /etc/passwd
egrep -q -e '^_ntp:' /etc/group

# Create the _ntp user's home, and the daemon's chroot directory
mkdir -p $PKG/var/empty/openntpd
chown root:root $PKG/var/empty/openntpd
chmod 0755 $PKG/var/empty/openntpd

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

for diff in $CWD/patches/*.diff;do
	patch -p1 < "${diff}"
done

# Prepare the source for renamings, later in the build script
sed -i -r -e 's,^(#define	CONFFILE	SYSCONFDIR "/)(ntpd)(\.conf")$,\1open\2\3,' ./src/ntpd.h
sed -i -r -e 's,^(#define	DRIFTFILE	LOCALSTATEDIR "/db/)(ntpd)(\.drift")$,\1open\2\3,' ./src/ntpd.h
sed -i -r -e 's,^(#define	CTLSOCKET	LOCALSTATEDIR "/run/)(ntpd)(\.sock")$,\1open\2\3,' ./src/ntpd.h
sed -i -r -e 's,ntpd,openntpd,;s,NTPD,OPENNTPD,;s,ntpctl,openntpctl,' \
	./src/ntpd.8 ./src/ntpd.conf.5 ./src/ntpctl.8 ./ntpd.conf
sed -i -r -e 's,adjfreq,adjtime,' ./src/ntpd.8

CFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --build=$ARCH-slackware-linux

make
make install DESTDIR=$PKG

# Remove unnecessary directories created by `make install`
rmdir $PKG/var/run/

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

# Don't interfere with stock ntp package
mv $PKG/usr/sbin/ntpd $PKG/usr/sbin/openntpd
mv $PKG/usr/sbin/ntpctl $PKG/usr/sbin/openntpctl
mv $PKG/usr/man/man8/ntpd.8.gz $PKG/usr/man/man8/openntpd.8.gz
mv $PKG/usr/man/man8/ntpctl.8.gz $PKG/usr/man/man8/openntpctl.8.gz
mv $PKG/usr/man/man5/ntpd.conf.5.gz $PKG/usr/man/man5/openntpd.conf.5.gz
mv $PKG/etc/ntpd.conf $PKG/etc/openntpd.conf.new

# Add an init script
mkdir -p $PKG/etc/rc.d
install -m 0644 $CWD/rc.openntpd $PKG/etc/rc.d/rc.openntpd.new

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a AUTHORS COPYING README.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
