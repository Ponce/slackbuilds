#!/bin/sh

# Slackware build script for sks-keyserver

# Copyright 2014 pyllyukko
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=sks-keyserver
VERSION=${VERSION:-1.1.5}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

SKS_USER="sks"
SKS_GROUP="sks"

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

bailout() {
  echo "  You must have a ${SKS_USER} user and ${SKS_GROUP} group to run this script."
  echo "  Something like this should suffice for most systems:"
  echo "    # groupadd -r ${SKS_GROUP} -g 295"
  echo "    # useradd -u 295 -g 295 -c \"SKS keyserver\" -d /var/lib/sks -r -M -e 1970-01-02 -s /sbin/nologin ${SKS_USER}"
  exit 1
}

# Bail if user or group isn't valid on your system
if ! getent passwd $SKS_USER 1>/dev/null 2>/dev/null; then
   bailout;
elif ! getent group $SKS_GROUP 1>/dev/null 2>/dev/null; then
   bailout;
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

# The package can be verified with SKS Keyserver Signing Key (0x41259773973A612A)
# If we have GPG installed, we try to verify the signature.
if [ -x "/usr/bin/gpg" -a -x "/usr/bin/gpgv" ]
then
  set +e
  # This will check if we have the correct key in our keyring.
  # For the trustedkeys.gpg, see "man 1 gpgv".
  /usr/bin/gpg --keyring trustedkeys.gpg --no-default-keyring --list-keys 0x41259773973A612A &>/dev/null
  GPG_RET=${?}
  # 2 means we don't have his key, 0 means we do.
  set -e
  # If we have the key and the signature file, we verify the package with GPG
  if [ ${GPG_RET} -eq 0 -a \
       -f "${CWD}/sks-${VERSION}.tgz.asc" ]
  then
    /usr/bin/gpgv "${CWD}/sks-${VERSION}.tgz.asc"
  fi
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf sks-$VERSION
tar xvf $CWD/sks-$VERSION.tgz
cd sks-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

cp -v Makefile.local.unused Makefile.local

make -j1 dep
make -j1 all
make install PREFIX=$PKG/usr MANDIR=$PKG/usr/man
install -D -m 0644 ${CWD}/rc.sks $PKG/etc/rc.d/rc.sks.new

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a ANNOUNCEMENT BUGS CHANGELOG FILES LICENSE README.md TODO UPGRADING VERSION \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
