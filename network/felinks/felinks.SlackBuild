#!/bin/bash

# Slackware build script for felinks
# Copyright 2014 David Woodfall <dave@dawoodfall.net>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=felinks
SRCNAM=elinks
VERSION=${VERSION:-08da1d8}
COMMIT=${COMMIT:-08da1d87eb74e082ca7aae8c81d2518a4415f3a7}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

# Added -fno-strict-aliasing -Wno-pointer-sign for a much more peaceful build
if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686 -fno-strict-aliasing -Wno-pointer-sign"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686 -fno-strict-aliasing -Wno-pointer-sign"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC -fno-strict-aliasing -Wno-pointer-sign"
  # fix for multilib
  SLKLDFLAGS="-m64"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-$COMMIT
tar xvf $CWD/$SRCNAM-$COMMIT.tar.?z
cd $SRCNAM-$COMMIT
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

for patch in $CWD/patches/*; do
  printf "\n%s\n" "Applying Patch $( basename $patch )"
  patch --verbose -p1 < $patch
done

## System
[ "${FASTMEM:-no}"    = "yes" ] && fastmem="--enable-fastmem"
[ "${DEBUG:-no}"      = "yes" ] && debug="--enable-debug --disable-fastmem"
[ "$DEBUG"            = "yes" ] && SLKCFLAGS="-ggdb $SLKCFLAGS"
[ "${CGI:-no}"        = "yes" ] && cgi="--enable-cgi"
[ "${COMBINING:-no}"  = "yes" ] && combining="--enable-combining"
[ "${UTF8:-yes}"      = "no"  ] && utf8="--disable-utf-8"
[ "${IPV6:-yes}"      = "no"  ] && ipv6="--disable-ipv6"
[ "${HTMLHL:-no}"     = "yes" ] && htmlhl="--enable-html-highlight"
[ "${LZMA:-no}"       = "yes" ] && lzma="--with-lzma"
[ "${TRE:-no}"        = "no"  ] && tre="--without-tre"
[ "${BROTLI:-no}"     = "no"  ] && brotli="--without-brotli"
[ "${LIBDOM:-no}"     = "yes" ] && libdom="--with-libdom"
[ "${XTERM:-no}"      = "no"  ] && xterm="--without-xterm"
[ "$XTERM"            = "yes" ] && X11="yes"
[ "${X11:-no}"        = "no"  ] && x11="--without-x"

# UI
[ "${MOUSE:-yes}"     = "no"  ] && mouse="--disable-mouse"
[ "${GPM:-yes}"       = "no"  ] && gpm="--without-gpm"
[ "${EXMODE:-no}"     = "yes" ] && exmode="--enable-exmode"

# Colours
[ "${COLS88:-no}"     = "yes" ] && cols88="--enable-88-colors"
[ "${COLS256:-no}"    = "yes" ] && cols256="--enable-256-colors"
[ "${COLSTRUE:-no}"   = "yes" ] && colstrue="--enable-true-colors"

# Scripting
[ "${GUILE:-no}"      = "yes" ] && guile="--with-guile"
[ "${PERL:-no}"       = "yes" ] && perl="--with-perl"
[ "${PYTHON:-no}"     = "yes" ] && python="--with-python"
[ "${LUA:-yes}"       = "no"  ] && lua="--without-lua"
[ "${ECMA:-yes}"      = "no"  ] && ecma="--disable-sm-scripting"

# Protocols
[ "${BITTORRENT:-no}" = "yes" ] && bittorrent="--enable-bittorrent"
[ "${DATA:-yes}"      = "no"  ] && data="--disable-data"
[ "${FSP:-no}"        = "yes" ] && fsp="--enable-fsp"
[ "${FTP:-yes}"       = "no"  ] && ftp="--disable-ftp"
[ "${FINGER:-no}"     = "yes" ] && finger="--enable-finger"
[ "${GOPHER:-no}"     = "yes" ] && gopher="--enable-gopher"
[ "${NNTP:-no}"       = "yes" ] && nntp="--enable-nntp"
[ "${SMB:-no}"        = "yes" ] && smb="--enable-smb"

./autogen.sh
CFLAGS="$SLKCFLAGS -L/usr/lib$LIBDIRSUFFIX" \
LDFLAGS="$SLKLDFLAGS" \
  ./configure \
  --prefix=/usr \
  --libdir=/usr/lib$LIBDIRSUFFIX \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --infodir=/usr/info \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  $fastmem \
  $debug \
  $cgi \
  $combining \
  $utf8 \
  $ipv6 \
  $htmlhl \
  $lzma \
  $tre \
  $brotli \
  $libdom \
  $xterm \
  $x11 \
  $mouse \
  $gpm \
  $exmode \
  $cols88 \
  $cols256 \
  $colstrue \
  $guile \
  $perl \
  $python \
  $lua \
  $ecma \
  $bittorrent \
  $data \
  $fsp \
  $ftp \
  $finger \
  $gopher \
  $nntp \
  $smb \
  --build=$ARCH-slackware-linux

  make
  make install DESTDIR=$PKG

# Don't clobber the one supplied by glibc-i18n.
rm -f $PKG/usr/share/locale/locale.alias

if [ "$DEBUG" = "no" ]; then
  find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" |
    grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
fi

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  AUTHORS BUGS COPYING NEWS README SITES THANKS TODO \
  ChangeLog doc/*txt contrib \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

# Remove any .git remnants
find $PKG -name ".git*" -exec rm -vrf {} \;

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
