#!/bin/sh

# Slackware build script for remmina

# Copyright 2013 Luis Henrique
# Copyright 2013 Niels Horn, Rio de Janeiro, RJ, Brazil
# Copyright 2015 Philip van der Hoeven, Almere, The Netherlands
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=remmina
VERSION=${VERSION:-1.2.0_rcgit.1}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}

SRCNAM=Remmina
TARVERSION=$(echo $VERSION | tr _ -)

AVAHI=${AVAHI:-OFF}
TELEPATHY=${TELEPATHY:-OFF}
VTE3=${VTE3:-OFF}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-$TARVERSION
tar xvf $CWD/$SRCNAM-$TARVERSION.tar.gz || tar xvf $CWD/v$TARVERSION.tar.gz
cd $SRCNAM-$TARVERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Fix libdirsuffix in CMakeLists.txt
sed "s|/lib/remmina|/lib$LIBDIRSUFFIX/remmina|g" -i CMakeLists.txt

# Apply a whole lotta patches (if available)...
[ -d $CWD/patches ] && for i in $CWD/patches/*; do patch -p1 -i $i ; done

# Static libssh 0.6.4
LIBSSH_INSTDIR=$TMP/$SRCNAM-${TARVERSION#v}/libssh
tar xvf $CWD/libssh-0.6.4.tar.gz
cd libssh-0.6.4

# Fix for the newer gcc, see https://gcc.gnu.org/gcc-5/porting_to.html
sed -i "s|__FUNCTION__|__func__|" include/libssh/{,pki_}priv.h src/auth.c

mkdir build
cd build
cmake \
        -DCMAKE_INSTALL_PREFIX=$LIBSSH_INSTDIR \
        -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
        -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
        -DLIB_SUFFIX=${LIBDIRSUFFIX} \
        -DWITH_GCRYPT=0 \
        -DWITH_SSH1=1 \
        -DWITH_PCAP=1 \
        -DWITH_SFTP=1 \
        -DWITH_SERVER=1 \
        -DWITH_STATIC_LIB=1 ..
make VERBOSE=1
make install
export PKG_CONFIG_PATH=$LIBSSH_INSTDIR/lib${LIBDIRSUFFIX}/pkgconfig:$PKG_CONFIG_PATH
echo $PKG_CONFIG_PATH
cd ../..

# Use the static libssh libraries
sed -i 's/LIBSSH_LIBRARY NAMES ssh/LIBSSH_LIBRARY NAMES libssh.a ssh/' cmake/FindLIBSSH.cmake
sed -i 's/LIBSSH_THREADS_LIBRARY NAMES ssh/LIBSSH_THREADS_LIBRARY NAMES libssh_threads.a ssh/' cmake/FindLIBSSH.cmake

# appindicator support must explicitly be disabled because it's detected in
# but the version is not high enough.
mkdir -p build
cd build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS -lz -lssl -lcrypto" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_LIBDIR=/usr/lib${LIBDIRSUFFIX} \
    -DWITH_AVAHI=${AVAHI} \
    -DWITH_TELEPATHY=${TELEPATHY} \
    -DWITH_VTE=${VTE3} \
    -DWITH_APPINDICATOR=OFF \
    -DCMAKE_BUILD_TYPE=Release ..

  make VERBOSE=1
  make install DESTDIR=$PKG
cd ..

# make install forgot these
mkdir -p $PKG/usr/include/remmina
cp -a remmina/include/remmina/*.h $PKG/usr/include/remmina

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a AUTHORS ChangeLog README $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
