#!/bin/bash

# Slackware build script for verm

# Copyright 2016-2018,2021 Andrew Clemons, Wellington New Zealand
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=verm
VERSION=${VERSION:-1.5.2}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

VERM_UID=${VERM_UID:-346}
VERM_GID=${VERM_GID:-346}
VERM_PORT=${VERM_PORT:-3404}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

# Bail out if user or group isn't valid on your system
# For slackbuilds.org, assigned verm uid/gid are 346/346
# See http://slackbuilds.org/uid_gid.txt
if ! getent group verm > /dev/null 2>&1 ; then
  echo "  You must have a verm group to run this script."
  echo "    # groupadd -g $VERM_GID verm"
  exit 1
elif ! getent passwd verm > /dev/null 2>&1 ; then
  echo "  You must have a verm user to run this script."
  echo "    # useradd -u $VERM_UID -g $VERM_GID -m -d /var/lib/verm verm"
  exit 1
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

rm -f go.mod # go.mod exists but should not

SRCDIR="$(pwd)"
export GOPATH="$SRCDIR"
mkdir -p src/github.com/willbryant
( cd src/github.com/willbryant && ln -s "$GOPATH" verm)

export GO111MODULE="off"
go build -ldflags "-X main.compiled_version=$VERSION -X main.compiled_root_data_directory=/var/lib/verm" "github.com/willbryant/verm"

mkdir -p $PKG/usr/bin
install -m0755 -oroot -groot verm $PKG/usr/bin

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a *.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
mkdir -p $PKG/etc/rc.d

cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh
sed "s/@VERM_PORT/$VERM_PORT/" $CWD/rc.verm > $PKG/etc/rc.d/rc.verm.new
chmod 0755 $PKG/etc/rc.d/rc.verm.new

mkdir -p $PKG/etc/logrotate.d
cat $CWD/verm.logrotate > $PKG/etc/logrotate.d/verm.new

mkdir -p $PKG/var/log/verm
chown -R verm:verm $PKG/var/log/verm

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
