#!/bin/sh

# Slackware build script for YADIFA, Authoritative DNS server

# Copyright (c) 2016, Sergey Fedosov <eleksir@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=yadifa
VERSION=${VERSION:-2.2.4}
VSUFFIX=${VSUFFIX:-6924}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if ! grep -q "^yadifa:" /etc/group; then
        echo "Error: $PRGNAM group (yadifa) doesn't exist."
        echo "Try creating one with:"
        echo " # groupadd -g 332 yadifa"
        exit 1
fi

if ! grep -q "^yadifa:" /etc/passwd; then
        echo "Error: $PRGNAM user (yadifa) doesn't exist."
        echo "Try creating one with:"
        echo " # useradd -u 332 -d /var/lib/yadifa -g yadifa -s /bin/false yadifa"
        exit 1
fi

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf yadifa-$VERSION-${VSUFFIX}
tar xvf $CWD/yadifa-$VERSION-${VSUFFIX}.tar.gz || tar xvf  $CWD/$VERSION-${VSUFFIX}.tar.gz
cd yadifa-$VERSION-${VSUFFIX}
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

./configure \
  --prefix=/usr \
  --sysconfdir=/etc/yadifa \
  --libdir=/usr/lib${LIBDIRSUFFIX}/yadifa \
  --localstatedir=/var/lib/yadifa \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --build=$ARCH-slackware-linux \
  --with-logdir=/var/log/yadifa \
  --enable-silent-rules \
  --enable-shared=yes \
  --enable-static=no \
  --enable-messages \
  --enable-ctrl \
  --build=$ARCH-slackware-linux

make
make install DESTDIR=$PKG

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
install --mode=644 $CWD/$PRGNAM.SlackBuild $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

mkdir -p $PKG/etc/rc.d
install --mode=644 $CWD/rc.yadifa  $PKG/etc/rc.d/rc.yadifa.new

mkdir -p $PKG/var/run/yadifa
chown yadifa:yadifa $PKG/var/run/yadifa

mkdir -p $PKG/var/log/yadifa
chown yadifa:yadifa $PKG/var/log/yadifa

chown -R yadifa:yadifa $PKG/var/lib/yadifa

mkdir -p $PKG/etc/yadifa
install --mode=644 $CWD/yadifad.conf $PKG/etc/yadifa/yadifad.conf.new
install --mode=644 $CWD/yadifa.conf  $PKG/etc/yadifa/yadifa.conf.new
install --mode=640 $CWD/key.conf     $PKG/etc/yadifa/key.conf.new
install --mode=644 $CWD/zones.conf   $PKG/etc/yadifa/zones.conf.new

mkdir -p $PKG/etc/logrotate.d
install --mode=644 $CWD/yadifa.logrotate $PKG/etc/logrotate.d/yadifa.new

# remove empty file
rm -rf $PKG/etc/yadifa/yadifad.conf

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-${VERSION}-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
