#! /bin/sh /usr/share/dpatch/dpatch-run
## 01_fix_max_bandwidth_docs.dpatch by Daniel Kahn Gillmor <dkg@fifthhorseman.net>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Fix docs and --help to show --max_bandwidth instead of --maxbandwidth

@DPATCH@
diff -urNad redir-2.2.1~/redir.c redir-2.2.1/redir.c
--- redir-2.2.1~/redir.c	1999-12-26 15:50:06.000000000 -0500
+++ redir-2.2.1/redir.c	2005-10-22 21:21:56.849499952 -0400
@@ -233,7 +233,7 @@
 #ifndef NO_SHAPER
         /* options for bandwidth */
         fprintf(stderr, "\t\t--bufsize=<octets>\tsize of the buffer\n");
-        fprintf(stderr, "\t\t--maxbandwidth=<bit-per-sec>\tlimit the bandwidth\n");
+        fprintf(stderr, "\t\t--max_bandwidth=<bit-per-sec>\tlimit the bandwidth\n");
         fprintf(stderr, "\t\t--random_wait=<millisec>\twait before each packet\n");
         fprintf(stderr, "\t\t--wait_in_out=<flag>\t1 wait for in, 2 out, 3 in&out\n");
         /* end options for bandwidth */
diff -urNad redir-2.2.1~/redir.man redir-2.2.1/redir.man
--- redir-2.2.1~/redir.man	1999-12-26 15:52:24.000000000 -0500
+++ redir-2.2.1/redir.man	2005-10-22 21:22:28.882630176 -0400
@@ -18,7 +18,7 @@
 .I --lport=port
 .I --cport=port
 .RB [ \--bufsize=n ]
-.RB [ \--maxbandwidth=n ]
+.RB [ \--max_bandwidth=n ]
 .RB [ \--random_wait=n ]
 .RB [ \--wait_in_out=n ]
 .ll -8
@@ -35,7 +35,7 @@
 .RB [ \--connect=host:port ]
 .I --cport=port
 .RB [ \--bufsize=n ]
-.RB [ \--maxbandwidth=n ]
+.RB [ \--max_bandwidth=n ]
 .RB [ \--random_wait=n ]
 .RB [ \--wait_in_out=n ]
 .ll -8
@@ -102,9 +102,9 @@
 .TP
 .B \--bufsize n
 Set the bufsize (defaut 4096) in bytes. Can be used combined with
---maxbandwidth or --random_wait to simulate a slow connection.
+--max_bandwidth or --random_wait to simulate a slow connection.
 .TP
-.B \--maxbandwidth n
+.B \--max_bandwidth n
 Reduce the bandwidth to be no more than n bits/sec.  The algorithme is
 basic, the goal is to simulate a slow connection, so there is no pic
 acceptance.
@@ -115,7 +115,7 @@
 than the bufsize (see also --bufsize).
 .TP
 .B \--wait_in_out n
-Apply --maxbandwidth and --random_wait for input if n=1, output if n=2 and
+Apply --max_bandwidth and --random_wait for input if n=1, output if n=2 and
 both if n=3.
 .SH "SEE ALSO"
 inetd(1)
