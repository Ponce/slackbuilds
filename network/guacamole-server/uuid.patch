diff -Naur guacamole-server-20170526_9ee224f.orig/configure.ac guacamole-server-20170526_9ee224f/configure.ac
--- guacamole-server-20170526_9ee224f.orig/configure.ac	2017-05-27 03:11:06.000000000 +0200
+++ guacamole-server-20170526_9ee224f/configure.ac	2017-06-03 20:57:20.384944765 +0200
@@ -65,19 +65,25 @@
 
 # OSSP UUID
 AC_CHECK_LIB([ossp-uuid], [uuid_make], [UUID_LIBS=-lossp-uuid],
-             AC_CHECK_LIB([uuid], [uuid_make], [UUID_LIBS=-luuid],
+             AC_CHECK_LIB([uuid], [uuid_generate], [UUID_LIBS=-luuid],
                           AC_MSG_ERROR("The OSSP UUID library is required")))
 
 # Check for and validate OSSP uuid.h header
-AC_CHECK_HEADERS([ossp/uuid.h])
-AC_CHECK_DECL([uuid_make],,
-              AC_MSG_ERROR("No OSSP uuid.h found in include path"),
+AC_CHECK_HEADERS([ossp/uuid.h], [uuid/uuid.h])
+AC_CHECK_DECL([uuid_make],, ,
               [#ifdef HAVE_OSSP_UUID_H
                #include <ossp/uuid.h>
                #else
                #include <uuid.h>
                #endif
                ])
+AC_CHECK_DECL([uuid_generate],, ,
+              [#ifdef HAVE_OSSP_UUID_H
+               #include <ossp/uuid.h>
+               #else
+               #include <uuid/uuid.h>
+               #endif
+               ])
 
 # cunit
 AC_CHECK_LIB([cunit], [CU_run_test], [CUNIT_LIBS=-lcunit])
diff -Naur guacamole-server-20170526_9ee224f.orig/src/libguac/id.c guacamole-server-20170526_9ee224f/src/libguac/id.c
--- guacamole-server-20170526_9ee224f.orig/src/libguac/id.c	2017-05-27 03:11:06.000000000 +0200
+++ guacamole-server-20170526_9ee224f/src/libguac/id.c	2017-06-03 21:00:54.701957689 +0200
@@ -25,7 +25,7 @@
 #ifdef HAVE_OSSP_UUID_H
 #include <ossp/uuid.h>
 #else
-#include <uuid.h>
+#include <uuid/uuid.h>
 #endif
 
 #include <stdlib.h>
@@ -34,8 +34,8 @@
 
     char* buffer;
     char* identifier;
+#ifdef HAVE_OSSP_UUID_H
     size_t identifier_length;
-
     uuid_t* uuid;
 
     /* Attempt to create UUID object */
@@ -75,6 +75,21 @@
     }
 
     uuid_destroy(uuid);
+#else
+    uuid_t uuid;
+#define UUID_LEN_STR 36
+
+    buffer = malloc (UUID_LEN_STR + 2);
+    if (buffer == NULL) {
+        guac_error = GUAC_STATUS_NO_MEMORY;
+        guac_error_message = "Could not allocate memory for connection ID";
+        return NULL;
+    }
+    identifier = buffer + 1;
+
+    uuid_generate (uuid);
+    uuid_unparse (uuid, identifier);
+#endif
 
     buffer[0] = prefix;
     buffer[UUID_LEN_STR + 1] = '\0';
