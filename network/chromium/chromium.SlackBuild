#!/bin/sh

# Slackware build script for Google Chromium
#
# Copyright 2010  Yucatan "Kenjiro" Costa, Alegrete, RS, Brasil
# Copyright 2013  Francisco Ambrozio <sbo@franciscoambrozio.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=chromium
VERSION=${VERSION:-31.0.1650.57}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

DDSSE=" -Ddisable_sse2=1 "

# Google API keys (see http://www.chromium.org/developers/how-tos/api-keys)
# Here we following the same way of Arch Linux and Gentoo.
# Note: These are for this build use ONLY. For your own distribution, please
# get your own set of keys. Feel free to contact me for more information.
GOOGLE_API_KEY=AIzaSyBhWJ-j5RXyt5911BMuVen-WuS10mvOnrY
GOOGLE_DEFAULT_CLIENT_ID=952820686433-mbp5sv9scfj78siq96jlvrem47qgvbi3.apps.googleusercontent.com
GOOGLE_DEFAULT_CLIENT_SECRET=XU4b-j0Ssy-XkTvSVmiFMvNY

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  DDSSE=""
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.?z*
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Change "-Dproprietary_codecs" to "0" if you don't want to use proprietary codecs

SLKCFLAGS="${SLKCFLAGS} -Wno-unused-local-typedefs"
export -n CFLAGS="$SLKCFLAGS" CXXFLAGS="$SLKCFLAGS"
build/gyp_chromium -f make build/all.gyp --depth=. \
 -Dgoogle_api_key=$GOOGLE_API_KEY \
 -Dgoogle_default_client_id=$GOOGLE_DEFAULT_CLIENT_ID \
 -Dgoogle_default_client_secret=$GOOGLE_DEFAULT_CLIENT_SECRET \
 -Dwerror= \
 -Dlinux_link_gnome_keyring=0 \
 -Dlinux_sandbox_path=/usr/lib${LIBDIRSUFFIX}/chromium/chrome-sandbox \
 -Dlinux_strip_binary=1 \
 -Dlinux_use_gold_binary=0 \
 -Dlinux_use_gold_flags=0 \
 -Dno_strict_aliasing=1 \
 -Dffmpeg_branding=Chrome \
 -Dproprietary_codecs=1 \
 -Duse_gconf=0 \
 -Duse_gnome_keyring=0 \
 -Duse_kerberos=0 \
 -Duse_pulseaudio=0 \
 -Duse_system_bzip2=1 \
 -Duse_system_ffmpeg=0 \
 -Duse_system_libevent=1 \
 -Duse_system_libpng=1 \
 -Duse_system_libjpeg=1 \
 -Duse_system_libxslt=1 \
 -Duse_system_libxml=1 \
 -Duse_system_ssl=0 \
 -Duse_system_zlib=1 \
 -Duse_system_yasm=1 \
 -Ddisable_nacl=1 \
 -Drelease_extra_cflags="$CFLAGS" \
 -Dsystem_libdir=lib64 \
 -Dpython_ver=2.7 \
 $DDSSE

make chrome chrome_sandbox BUILDTYPE=Release V=1

# Creating the package
cd out/Release/
  mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/chromium
  mkdir -p $PKG/usr/bin
  install -m 0755 -D chrome $PKG/usr/lib${LIBDIRSUFFIX}/chromium/chromium
  install -m 4755 -o root -g root -D chrome_sandbox $PKG/usr/lib${LIBDIRSUFFIX}/chromium/chrome-sandbox
  install -m 0755 -D libffmpegsumo.so $PKG/usr/lib${LIBDIRSUFFIX}/chromium
  cp *.pak $PKG/usr/lib${LIBDIRSUFFIX}/chromium
  cp -a locales/ $PKG/usr/lib${LIBDIRSUFFIX}/chromium
  cp -a resources/ $PKG/usr/lib${LIBDIRSUFFIX}/chromium
  find $PKG -name '*.d' -type f -delete

  mkdir -p $PKG/usr/man/man1
  install -m 0644 -D chrome.1 $PKG/usr/man/man1/chromium.1
  mkdir -p $PKG/usr/share/pixmaps
  cp product_logo_48.png $PKG/usr/share/pixmaps/chromium.png
  mkdir -p $PKG/usr/share/applications
  install -m 0644 $CWD/chromium.desktop $PKG/usr/share/applications
cd ../../

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a AUTHORS LICENSE $PKG/usr/doc/$PRGNAM-$VERSION/ || true

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

cd $PKG
  ln -s /usr/lib${LIBDIRSUFFIX}/chromium/chromium $PKG/usr/bin/chromium
  ln -s /usr/lib${LIBDIRSUFFIX}/chromium/chrome-sandbox $PKG/usr/bin/chrome-sandbox

cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
