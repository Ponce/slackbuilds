#!/bin/sh

# Slackware build script for libc++

# Copyright 2017 Coastal Carolina University
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=libc++
VERSION=${VERSION:-4.0.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

SOURCES=(
  llvm-${VERSION}.src.tar.xz
  libcxxabi-${VERSION}.src.tar.xz
  libcxx-${VERSION}.src.tar.xz
)

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

cd $TMP
rm -rf llvm-${VERSION}
tar xvf $CWD/${SOURCES[0]}
mv llvm-${VERSION}.src llvm-${VERSION}

cd llvm-${VERSION}/projects
tar xvf $CWD/${SOURCES[1]}
tar xvf $CWD/${SOURCES[2]}
mv libcxx-${VERSION}.src libcxx
mv libcxxabi-${VERSION}.src libcxxabi
cd ..

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

cd $TMP
rm -rf build
mkdir -p build

( cd llvm-${VERSION}/projects/libcxx
  patch -p1 < $CWD/xlocale.patch )

cd build
CC=clang CXX=clang++ cmake \
  -G "Unix Makefiles" \
  -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
  -DCMAKE_BUILD_TYPE=Release \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DLLVM_LIBDIR_SUFFIX=${LIBDIRSUFFIX} \
  -DLLVM_ENABLE_SPHINX=ON \
  -DLIBCXX_INCLUDE_DOCS=ON \
  ../llvm-${VERSION}

# This break with unknown option: LLVM_BUILD_32_BITS
#make cxx docs-libcxx-html
make install-libcxx DESTDIR=${PKG}
make install-libcxxabi DESTDIR=${PKG}

cd ..

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp llvm-${VERSION}/projects/libcxx/CREDITS.TXT \
  $PKG/usr/doc/${PRGNAM}-${VERSION}/libcxx-CREDITS.TXT
cp llvm-${VERSION}/projects/libcxx/LICENSE.TXT \
  $PKG/usr/doc/${PRGNAM}-${VERSION}/libcxx-LICENSE.TXT
cp llvm-${VERSION}/projects/libcxxabi/CREDITS.TXT \
  $PKG/usr/doc/${PRGNAM}-${VERSION}/libcxxabi-CREDITS.TXT
cp llvm-${VERSION}/projects/libcxx/LICENSE.TXT \
  $PKG/usr/doc/${PRGNAM}-${VERSION}/libcxxabi-LICENSE.TXT
#cp -a build/projects/libcxx/docs/html $PKG/usr/doc/${PRGNAM}-${VERSION}

cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
