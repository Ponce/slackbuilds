#!/bin/sh

# Slackware build script for xulrunner

# Written by David Somero <dsomero@hotmail.com>
# Derived from Slackware's Slackbuilds.
#
# Copyright 2008, 2009  Patrick J. Volkerding, Sebeka, Minnesota, USA
# Copyright 2010, 2011  David Somero (dsomero@hotmail.com) Athens, TN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


PRGNAM=xulrunner
VERSION=${VERSION:-38.0.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS=""
  LIBDIRSUFFIX=""
  OPTIMIZE=" --enable-optimize=-O2 "
  # On IA32, use gold since GNU ld runs out of memory linking libxul.so:
  PATH="$(pwd)/gold:$PATH"
  export CC="gcc -B$(pwd)/gold"
  export CXX="g++ -B$(pwd)/gold"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS=""
  LIBDIRSUFFIX=""
  OPTIMIZE=" --enable-optimize=-O2 "
  # On IA32, use gold since GNU ld runs out of memory linking libxul.so:
  PATH="$(pwd)/gold:$PATH"
  export CC="gcc -B$(pwd)/gold"
  export CXX="g++ -B$(pwd)/gold"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  OPTIMIZE=" --enable-optimize=-O2 "
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
  OPTIMIZE=" --enable-optimize=-O2 "
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf mozilla-release
tar xvf $CWD/$PRGNAM-$VERSION.source.tar.bz2
cd mozilla-release
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# Don't use --enable-system-cairo
# https://bugzilla.mozilla.org/show_bug.cgi?id=722975
OPTIONS="\
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --enable-default-toolkit=cairo-gtk2 \
  $OPTIMIZE \
  --enable-application=xulrunner \
  --enable-javaxpcom \
  --enable-libxul \
  --enable-safe-browsing \
  --enable-image-encoders=all \
  --enable-image-decoders=all \
  --enable-system-lcms \
  --with-system-zlib \
  --with-system-bz2 \
  --enable-system-ffi \
  --disable-system-sqlite \
  --disable-crashreporter \
  --disable-debug \
  --disable-pulseaudio \
  --disable-mailnews \
  --disable-installer \
  --disable-updater  \
  --build=$ARCH-slackware-linux \
  --host=$ARCH-slackware-linux \
  --target=$ARCH-slackware-linux"

export CFLAGS="$SLKCFLAGS"
export CXXFLAGS="$SLKCFLAGS"
export MOZ_MAKE_FLAGS="$MAKEFLAGS"

unset DBUS_SESSION_BUS_ADDRESS ORBIT_SOCKETDIR SESSION_MANAGER \
  XDG_SESSION_COOKIE XAUTHORITY MAKEFLAGS

echo ". \$topsrcdir/browser/config/mozconfig" > .mozconfig

# Mozilla devs enforce using an objdir for building
# https://developer.mozilla.org/en/Configuring_Build_Options#Building_with_an_objdir
mkdir obj
echo "mk_add_options MOZ_OBJDIR=$(pwd)/obj" >> .mozconfig

if [ "$MOZLOCALIZE" ]; then
  echo "mk_add_options MOZ_CO_LOCALES=\"$MOZLOCALIZE\"" >> .mozconfig
fi

# Write in it the options above
for option in $OPTIONS; do echo "ac_add_options $option" >> .mozconfig; done

echo "ac_add_options --disable-tests" >> .mozconfig
make -f client.mk build

make -f client.mk install DESTDIR=$PKG

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a LICENSE LEGAL README.txt $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
