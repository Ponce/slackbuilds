#!/bin/bash

# Slackware build script for libvirt
# Written by Michal Bialozor <bialyy@o2.pl>
# Maintained by Robby Workman <rworkman@slackbuilds.org>

# 20220422 bkw: Modified by SlackBuilds.org, BUILD=2:
# - strip binaries.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=libvirt
VERSION=${VERSION:-10.4.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

VIRTUSER=${VIRTUSER:-root}
VIRTGROUP=${VIRTGROUP:-users}

# Some optional dependencies checks
audit="dis" ; if pkg-config --exists audit ; then audit="en" ; fi
bash_completion="" ; if pkg-config --exists bash-completion ; then
  bash_completion="-Dbash_completion=enabled -Dbash_completion_dir=/usr/share/bash-completion/completions"
fi
libiscsi="dis" ; if pkg-config --exists libiscsi ; then libiscsi="en" ; fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.xz
cd $PRGNAM-$VERSION
rm -fR tests/vircaps2xmldata # either this or find outputs "filesystem loop detected"
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
 -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

# we have sysctld files in /etc/sysctl.d
sed -i "s|prefix / 'lib' / 'sysctl.d'|sysconfdir / 'sysctl.d'|" src/remote/meson.build

patch -p1 < $CWD/use-virtgroup-in-polkit-rules.diff
sed -i -e "s,@VIRTGROUP@,$VIRTGROUP,g" src/remote/libvirtd.rules

# Since 5.10: "configure: error: Build directory must be different from source directory"
mkdir -p build
cd build
  CFLAGS="$SLKCFLAGS" \
  CXXFLAGS="$SLKCFLAGS" \
  meson setup .. \
    --buildtype=release \
    --infodir=/usr/info \
    --libdir=/usr/lib${LIBDIRSUFFIX} \
    --localstatedir=/var \
    --mandir=/usr/man \
    --prefix=/usr \
    --sysconfdir=/etc \
    -Dqemu_group=$VIRTGROUP \
    -Dqemu_user=$VIRTUSER \
    $bash_completion \
    -Daudit=${audit}abled \
    -Dlibiscsi=${libiscsi}abled \
    -Dopenwsman=disabled \
    -Dapparmor=disabled \
    -Dselinux=disabled \
    -Dwireshark_dissector=disabled \
    -Ddriver_bhyve=disabled \
    -Ddriver_hyperv=disabled \
    -Ddriver_libxl=disabled \
    -Ddriver_vz=disabled \
    -Dsecdriver_apparmor=disabled \
    -Dsecdriver_selinux=disabled \
    -Dstorage_vstorage=disabled \
    -Ddtrace=disabled \
    -Dstrip=true \
    -Dinit_script=none
  "${NINJA:=ninja}"
  DESTDIR=$PKG $NINJA install
cd ..

# we don't have augeas
rm -fr $PKG/usr/share/augeas

# this tree is recreated when starting the daemon
rm -fR $PKG/var/run

# add an rc.libvirt to start/stop/restart the daemon
install -D -m 0755 $CWD/rc.libvirt $PKG/etc/rc.d/rc.libvirt.new

# we use $VIRTGROUP as our virtualization group, fix auth permissions, and
# consider the fact that by default we got no certs
sed -i \
  -e "s|^\#unix_sock_group\ =\ \"libvirt\"|unix_sock_group = \"$VIRTGROUP\"|" \
  -e "s|^\#unix_sock_rw_perms\ =\ \"0770\"|unix_sock_rw_perms = \"0770\"|" \
  -e "s|^\#auth_unix_ro.*|auth_unix_ro = \"none\"|" \
  -e "s|^\#auth_unix_rw.*|auth_unix_rw = \"none\"|" \
  -e "s|^\#listen_tls|listen_tls|" \
  $PKG/etc/libvirt/libvirtd.conf

# still, we use $VIRTGROUP as our virtualization group
sed -i \
  -e "s|^\#group\ =\ \"root\"|group = \"$VIRTGROUP\"|" \
  $PKG/etc/libvirt/qemu.conf

# disable seccomp support or else VMs won't start with new libvirt/qemu combo
# 20220212 bkw: this file doesn't exist if qemu wasn't installed. and
# since qemu isn't in REQUIRES, it's optional, so the build shouldn't fail.
if [ -e $PKG/etc/libvirt/qemu.conf ]; then
  sed -i  "s|^\#seccomp_sandbox = 1|seccomp_sandbox = 0|" \
    $PKG/etc/libvirt/qemu.conf
fi

gzip -9 $PKG/usr/man/man*/*

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
mv $PKG/usr/share/doc/$PRGNAM/* $PKG/usr/doc/$PRGNAM-$VERSION/
rm -fR $PKG/usr/share/doc
cp -a \
  *.rst COPYING* examples/polkit/* \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

# Don't clobber existing configuration files
for i in etc/libvirt etc/libvirt/nwfilter etc/libvirt/qemu/networks etc/logrotate.d etc/sasl2 etc/sysctl.d; do
  for j in $(ls -1 $PKG/$i); do
    if [ ! -d $PKG/$i/$j ]; then
      mv $PKG/$i/$j $PKG/$i/$j.new
      echo "config $i/$j.new" >> $PKG/install/doinst.sh
    fi
  done
done

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
