#!/bin/bash

# Slackware build script for wxPython

# Copyright 2007-2014 Heinz Wiesinger, Amsterdam, The Netherlands
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=wxPython
VERSION=${VERSION:-2.8.12.1}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

# Gnomeprint support
if [ "${GNOMEPRINT:-no}" = "no" ]; then
    do_gp="without"
else
    do_gp="with"
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-src-$VERSION
tar xvf $CWD/$PRGNAM-src-$VERSION.tar.bz2
cd $PRGNAM-src-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS -Wno-narrowing" \
./configure \
  --prefix=/usr \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --disable-static \
  --with-sdl \
  --with-opengl \
  --$do_gp-gnomeprint \
  --enable-unicode \
  --enable-graphics_ctx \
  --enable-display \
  --enable-mediactrl \
  --enable-sound \
  --libdir=/usr/lib$LIBDIRSUFFIX \
  --build=$ARCH-slackware-linux

make

#Additional stuff from contrib
make -C contrib/src/gizmos
make -C contrib/src/ogl
make -C contrib/src/stc

make install DESTDIR=$PKG
make -C contrib/src/gizmos install DESTDIR=$PKG
make -C contrib/src/ogl install DESTDIR=$PKG
make -C contrib/src/stc install DESTDIR=$PKG

cd wxPython
  python setup.py \
    WXPORT=gtk2 \
    UNICODE=1 \
    EP_ADD_OPTS=1 \
    EP_FULL_VER=0 \
    NO_SCRIPTS=0 \
    WX_CONFIG="$TMP/$PRGNAM-src-$VERSION/wx-config --no_rpath" \
    build_ext --include-dirs=$TMP/$PRGNAM-src-$VERSION/lib/wx/include/gtk2-unicode-release-2.8 \
              --library-dirs=$TMP/$PRGNAM-src-$VERSION/lib \
              --rpath=/usr/lib$LIBDIRSUFFIX \
    build

  python setup.py \
    WXPORT=gtk2 \
    UNICODE=1 \
    EP_ADD_OPTS=1 \
    EP_FULL_VER=0 \
    NO_SCRIPTS=0 \
    WX_CONFIG="$TMP/$PRGNAM-src-$VERSION/wx-config --prefix=$PKG/usr/bin/ --no_rpath" \
    SYS_WX_CONFIG="wx-config --enable-unicode" \
    build_ext --include-dirs=$TMP/$PRGNAM-src-$VERSION/lib/wx/include/gtk2-unicode-release-2.8 \
              --library-dirs=$TMP/$PRGNAM-src-$VERSION/lib \
              --rpath=/usr/lib$LIBDIRSUFFIX \
    install --root=$PKG

    mkdir -p $PKG/usr/share/{applications,pixmaps} $PKG/usr/share/icons/hicolor/{16x16,32x32}/apps
    install -m 644 distrib/*.desktop $PKG/usr/share/applications/

    install -m 644 wx/py/PyCrust_16.png $PKG/usr/share/icons/hicolor/16x16/apps/PyCrust.png
    install -m 644 wx/py/PyCrust_32.png $PKG/usr/share/icons/hicolor/32x32/apps/PyCrust.png
    ln -s /usr/share/icons/hicolor/32x32/apps/PyCrust.png $PKG/usr/share/pixmaps/PyCrust.png
    install -m 644 wx/py/PySlices_16.png $PKG/usr/share/icons/hicolor/16x16/apps/PySlices.png
    install -m 644 wx/py/PySlices_32.png $PKG/usr/share/icons/hicolor/32x32/apps/PySlices.png
    ln -s /usr/share/icons/hicolor/32x32/apps/PySlices.png $PKG/usr/share/pixmaps/PySlices.png
    install -m 644 wx/tools/XRCed/XRCed_16.png $PKG/usr/share/icons/hicolor/16x16/apps/XRCed.png
    install -m 644 wx/tools/XRCed/XRCed_32.png $PKG/usr/share/icons/hicolor/32x32/apps/XRCed.png
    ln -s /usr/share/icons/hicolor/32x32/apps/XRCed.png $PKG/usr/share/pixmaps/XRCed.png

    # don't ship editra - it releases independently and the included version is outdated
    rm $PKG/usr/bin/editra
    rm $PKG/usr/share/applications/Editra.desktop
    rm -rf $PKG/usr/lib$LIBDIRSUFFIX/python2.7/site-packages/wx-2.8-gtk2-unicode/wx/tools/Editra
cd -

# install wxPython includes
cp -rf include/wx-2.8/wx/wxPython $PKG/usr/include/wx-2.8/wx/

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION/wxPython
cp -a README.1st.txt docs* $PKG/usr/doc/$PRGNAM-$VERSION
cp -a wxPython/docs/* $PKG/usr/doc/$PRGNAM-$VERSION/wxPython
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
# Remove unnecessary docs
cd $PKG/usr/doc/$PRGNAM-$VERSION/docs
  rm -rf cocoa latex mac metrowerks microwin msw palmos word
cd -

mkdir -p $PKG/install
cat $CWD/doinst.sh > $PKG/install/doinst.sh
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
