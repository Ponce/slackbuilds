#!/bin/bash

# Slackware build script for grass

# Copyright 2011 David Spencer, Baildon, West Yorkshire, U.K.
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=grass
VERSION=${VERSION:-7.8.0}
SHRTVER=`echo $VERSION | sed "s/\([0-9]*\).\([0-9]*\)..*/\1\2/"`
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Option handling:
set -- $(echo $ENABLE | sed 's/,/ /g')

patch -p1 < $CWD/gdal-3.3.patch

while [ "$1" != "" ]; do
  case "$1"
  in
  sqlite | \
  netcdf | \
  opencl )
    WITHLIST="$WITHLIST --with-$1"
    shift
    ;;
  # blas and lapack are both needed, so provide a single option ...
  # (Maybe atlas would be better, but the docs are unclear about how the
  # dependencies are used.)
  gmath )
    WITHLIST="$WITHLIST --with-blas --with-lapack"
    shift
    ;;
  # ... but for compatibility with previous versions of this SlackBuild,
  # allow blas and lapack to be enabled individually.
  blas | lapack )
    WITHLIST="$WITHLIST --with-$1"
    shift
    ;;
  mysql | mariadb )
    WITHLIST="$WITHLIST --with-mysql"
    WITHLIST="$WITHLIST --with-mysql-includes=/usr/include/mysql"
    shift
    ;;
  postgres | postgresql )
    WITHLIST="$WITHLIST --with-postgres"
    shift
    ;;
  unixODBC )
    WITHLIST="$WITHLIST --with-odbc"
    shift
    ;;
  libLAS | liblas )
    WITHLIST="$WITHLIST --with-liblas"
    shift
    ;;
  * )
    shift
    ;;
  esac
done

# geos now always enabled: it's an indirect hard dep (via gdal), and makes grass nicer :-)

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS -fpermissive" \
LDFLAGS="-ldl -lncurses" \
./configure \
  --prefix=/opt \
  --exec-prefix=/wibble/usr \
  --enable-largefile \
  --with-cairo \
  --with-cxx \
  --with-fftw \
  --with-freetype \
  --with-freetype-includes=/usr/include/freetype2 \
  --with-geos \
  --with-nls \
  --with-openmp \
  --with-python \
  --with-pthread \
  --with-proj-share=/usr/share/proj \
  --with-readline \
  --with-wxwidgets \
  $WITHLIST \
  --build=$ARCH-slackware-linux \
  --host=$ARCH-slackware-linux

make
make prefix=$PKG/opt exec_prefix=$PKG/usr install

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# Install the pkgconfig file:
install -D -m0644 grass.pc $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig/grass.pc

# Create unversioned symlinks:
( cd $PKG/opt ; ln -s $PRGNAM$SHRTVER $PRGNAM )
( cd $PKG/usr/bin ; ln -s $PRGNAM$SHRTVER $PRGNAM )

# Remove hardcoded version strings:
sed -i -e "s/-${VERSION}//g" \
  $PKG/usr/bin/$PRGNAM$SHRTVER \
  $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig/grass.pc

# Remove packaging directory pollution:
sed -i -e "s;$PKG;;" \
  $PKG/usr/bin/$PRGNAM$SHRTVER \
  $PKG/opt/$PRGNAM$SHRTVER/demolocation/.grassrc$SHRTVER \
  $PKG/opt/$PRGNAM$SHRTVER/etc/fontcap \
  $PKG/opt/$PRGNAM$SHRTVER/include/Make/Grass.make \
  $PKG/opt/$PRGNAM$SHRTVER/include/Make/Platform.make

# Documentation:
PKGOPTMAN=$PKG/opt/$PRGNAM$SHRTVER/docs/man
find $PKGOPTMAN -type f -exec gzip -9 {} \;
for i in $( find $PKGOPTMAN -type l ) ; do \
  ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
mkdir -p $PKG/usr/man/man1
cp -a \
  $PKGOPTMAN/man1/grass7.1.gz \
  $PKG/usr/man/man1/grass.1.gz

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  AUTHORS CHANGES COPYING GPL.TXT REQUIREMENTS.html INSTALL README.md SUBMITTING* TODO \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

# Desktop:
mkdir -p $PKG/usr/share/applications
cp -a \
  $CWD/$PRGNAM.desktop \
  $PKG/usr/share/applications/$PRGNAM.desktop
mkdir -p $PKG/usr/share/pixmaps
cp -a \
  gui/icons/$PRGNAM-64x64.png \
  $PKG/usr/share/pixmaps/${PRGNAM}.png

# Cleanup:
rm -rf $PKG/opt/$PRGNAM/demolocation/PERMANENT/.tmp
rm $PKG/opt/$PRGNAM/config.status
rm -rf $PKG/opt/$PRGNAM/share/

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh  > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
