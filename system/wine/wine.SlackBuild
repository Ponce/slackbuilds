#!/bin/bash

# Slackware build script for wine

# Copyright 2011 David Woodfall
# Copyright 2006-2009  Robby Workman  Northport, AL, USA
# All rights reserved.

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=wine
VERSION=${VERSION:-6.0.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}
# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}
WIN32=${WIN32:-yes}
WIN64=${WIN64:-no}

# If your video card does not support hardware accelerated OpenGL,
# then run the script like:   OPENGL=NO ./wine.SlackBuild
if [ "${OPENGL:-yes}" = "yes" ]; then
	do_opengl="with"
else
	do_opengl="without"
fi

if [ -z "$ARCH" ]; then
	case "$(uname -m)" in
		i?86) ARCH=i586 ;;
		arm*) ARCH=arm ;;
		*) ARCH=$(uname -m) ;;
	esac
fi

if [ "$WIN32" = "no" ] && [ "$WIN64" = "no" ]; then
	echo "Both 64 and 32 bit builds disabled. Nothing to do."
	exit 1
fi

# These should work for anything not specified below
BUILD_ARCH="$ARCH-slackware-linux"
SLKCFLAGS="-O2"

case "$ARCH" in
	arm)
		BUILD_ARCH="$ARCH-slackware-linux-gnueabi"
		;;
	i?86)
		# -Os was -O2, fix for:
		# https://bugs.winehq.org/show_bug.cgi?id=42406
		# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78911
		# https://bugs.gentoo.org/613128
		SLKCFLAGS="-Os -march=$ARCH -mtune=i686"
		;;
	x86_64)
		SLKCFLAGS="-O2 -fPIC"
		LIBDIRSUFFIX="64"
		;;
esac

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.xz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
	\( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
	-o -perm 511 \) -exec chmod 755 {} \; -o \
	\( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
	-o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Fix for flex
patch -p1 --verbose < $CWD/0001-winhlp32-Workaround-a-bug-in-Flex.patch

if [ "$WIN64" = "yes" ]; then
	wine64="--with-wine64=../wine64"
	mkdir wine64
	cd wine64

	LDFLAGS="-L/usr/lib64 -ldl" \
	CFLAGS="$SLKCFLAGS" \
	CXXFLAGS="$SLKCFLAGS" \
	../configure \
		--prefix=/usr \
		--libdir=/usr/lib64 \
		--localstatedir=/var \
		--sysconfdir=/etc \
		--mandir=/usr/man \
		--enable-win64 \
		--with-x \
		--with-gnutls \
		--${do_opengl}-opengl \
		--program-prefix= \
		--program-suffix= \
		--disable-tests \
		--build=$BUILD_ARCH

	make depend
	make
	make install DESTDIR=$PKG
	cd ..
fi


if [ "$WIN32" = "yes" ]; then
	mkdir wine32
	cd wine32

	export PKG_CONFIG_PATH="/usr/lib/pkgconfig:$PKG_CONFIG_PATH"

	LDFLAGS="-L/usr/lib -ldl" \
	CFLAGS="$SLKCFLAGS" \
	CXXFLAGS="$SLKCFLAGS" \
	../configure \
		$wine64 \
		--prefix=/usr \
		--libdir=/usr/lib \
		--localstatedir=/var \
		--sysconfdir=/etc \
		--mandir=/usr/man \
		--with-x \
		--with-gnutls \
		--${do_opengl}-opengl \
		--program-prefix= \
		--program-suffix= \
		--disable-tests \
		--build=$BUILD_ARCH

	make depend
	make
	make install DESTDIR=$PKG
	cd ..
fi

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
	| cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

VERSION=$( printf %s $VERSION | tr - _ )

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a ANNOUNCE AUTHORS COPYING.LIB LICENSE* README VERSION \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
