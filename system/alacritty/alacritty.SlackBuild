#!/bin/bash

# Slackware build script for alacritty

# Copyright 2017-2022 Andrew Clemons, Wellington New Zealand
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=alacritty
VERSION=${VERSION:-0.10.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac

  if [ "$ARCH" = "i586" ]; then
    if rustc -Vv | grep host | grep i686 > /dev/null ; then
      ARCH=i686
    fi
  fi
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  CARGOTARGET="--target i586-unknown-linux-gnu"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  CARGOTARGET="--target i686-unknown-linux-gnu"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  CARGOTARGET="--target x86_64-unknown-linux-gnu"
else
  SLKCFLAGS="-O2"
  CARGOTARGET=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
# upstream have a branch and a tag with the same name, so we can't use the
# normal github url which always give the same tarball name
if [ -e $CWD/v$VERSION.tar.gz ] ; then
  tar xvf $CWD/v$VERSION.tar.gz
else
  tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
fi
cd $PRGNAM-$VERSION

# build offline
# configuration tells cargo to use the configured directory
# for dependencies instead of downloading from crates.io
mkdir .cargo
cat << EOF >> .cargo/config
[source.crates-io]
registry = 'https://github.com/rust-lang/crates.io-index'
replace-with = 'vendored-sources'

[source.vendored-sources]
directory = '$(pwd)/vendor'
EOF

# deps and versions come from Cargo.lock
mkdir vendor
(
  cd vendor

  grep -h -A 3 "\[\[package\]\]" $(find ../ -maxdepth 1 -mindepth 1 -name Cargo.lock | tr '\n' ' ') | \
    sed 's/[[:space:]]*=[[:space:]]*/=/g;s/^--//;s/^\[\[/--\n[[/' | \
    awk 'BEGIN { RS = "--\n" ; FS="\n" } { print $2, $3, $4 }' | sed 's/"//g;s/name=//;s/ version=/=/' | \
    grep crates\.io-index | sed 's/ source=.*$//' | sort -u | while read -r dep ; do

    ver="$(printf "%s\n" "$dep" | cut -d= -f2)"
    dep="$(printf "%s\n" "$dep" | cut -d= -f1)"

    tar xvf $CWD/$dep-$ver.crate

    touch $dep-$ver/.cargo-ok

    # generate checksum
    {
      printf "{\n"
      printf '    "files": {\n'

      (
        cd $dep-$ver
        find . -type f -print0 | xargs -0 sha256sum | sed -n '/\.cargo-checksum\.json/!p' | sed 's/\.\///;s/^\([^ ]*\)[[:space:]][[:space:]]*\(.*\)$/"\2":"\1",/'
      ) | sed '$ s/,$//'

      printf "    },\n"
      printf '    "package": "'

      sha256sum "$CWD/$dep-$ver.crate" | cut -f1 -d' ' | sed 's/$/"/'

      printf "}\n"
    } > $dep-$ver/.cargo-checksum.json
  done
)

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

CARGO_HOME=.cargo \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
cargo build --release $CARGOTARGET

mkdir -p $PKG/usr/bin/

find target -name $PRGNAM -exec install -m 755 {} $PKG/usr/bin/$PRGNAM \;

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/man/man1
install -m644 extra/alacritty.man $PKG/usr/man/man1/alacritty.1
install -m644 extra/alacritty-msg.man $PKG/usr/man/man1/alacritty-msg.1

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/share/bash-completion/completions
install -m644 extra/completions/alacritty.bash $PKG/usr/share/bash-completion/completions/alacritty

mkdir -p $PKG/usr/share/zsh/site-functions
install -m644 extra/completions/_alacritty $PKG/usr/share/zsh/site-functions/_alacritty

mkdir -p $PKG/usr/share/appdata/
install -m644 extra/linux/io.alacritty.Alacritty.appdata.xml $PKG/usr/share/appdata/io.alacritty.Alacritty.appdata.xml

mkdir -p $PKG/usr/share/terminfo
tic -o $PKG/usr/share/terminfo -xe alacritty,alacritty-direct extra/alacritty.info

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a LICENSE-APACHE README.md alacritty.yml $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/usr/share/applications
install -m 644 extra/linux/Alacritty.desktop $PKG/usr/share/applications

mkdir -p $PKG/usr/share/pixmaps
install -m 644 extra/logo/alacritty-term.svg $PKG/usr/share/pixmaps/Alacritty.svg

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
