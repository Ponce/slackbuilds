#!/bin/bash

# Slackware build script for MongoDB

# Copyright 2015 Miguel De Anda <miguel@thedeanda.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


cd $(dirname $0) ; CWD=$(pwd)

PRGNAM="mongodb"
VERSION=${VERSION:-5.0.4}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}
MAKEJOBS=${MAKEJOBS:-1}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i686 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

MONGO_USER=${MONGO_USER:-285}
MONGO_GROUP=${MONGO_GROUP:-285}

SRC_FILE=$PRGNAM-src-r$VERSION.tar.gz
SRC_FLDR=$PRGNAM-src-r$VERSION

if [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

# Bail if user or group isn't valid on your system
if ! getent passwd mongo 1>/dev/null 2>/dev/null; then

cat << EOF

  You must have a mongo user to run this script

  # groupadd -g $MONGO_USER mongo
  # useradd -u $MONGO_USER -d /var/lib/$PRGNAM -s /bin/false -g mongo mongo

EOF

  exit
elif ! getent group mongo 1>/dev/null 2>/dev/null; then

cat << EOF

  You must have a mongo group to run this script
  # groupadd -g $MONGO_GROUP mongo

EOF
  exit
fi

rm -fr $TMP/$SRC_FLDR $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
tar xvf $CWD/$SRC_FILE
cd $SRC_FLDR
# remove bundled libs
rm -fR src/third_party/{boost,pcre-*,snappy-*,yaml-cpp,zlib-*}
# remove compass
rm -fR src/mongo/installer/compass
chown -R root.root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# thanks gentoo, also for these patches
for i in $CWD/patches/* ; do patch -p1 < $i ; done

scons_opts=(
  --disable-warnings-as-errors
  --use-system-boost
  --use-system-pcre
  --use-system-snappy
  --use-system-yaml
  --use-system-zlib
  --use-system-zstd
  --use-sasl-client
  --ssl
)

if [ "$ARCH" = "x86_64" ]; then
  PREFIX=${PKG}/usr CFLAGS="$SLKCFLAGS" CXXFLAGS="$SLKCFLAGS" LDFLAGS="-L /lib$LIBDIRSUFFIX -L/usr/lib$LIBDIRSUFFIX" \
    ./buildscripts/scons.py "${scons_opts[@]}" --jobs="$MAKEJOBS" install-core
else
  PREFIX=${PKG}/usr CFLAGS="$SLKCFLAGS" CXXFLAGS="$SLKCFLAGS" LDFLAGS="-L /lib$LIBDIRSUFFIX -L/usr/lib$LIBDIRSUFFIX" \
    ./buildscripts/scons.py "${scons_opts[@]}" --jobs="$MAKEJOBS" --wiredtiger=off install-core
fi

# manual install
( cd build/install/bin
  for i in * ; do install -D -m 0755 $i $PKG/usr/bin/$i ; done )
( cd debian
  for i in *.1 ; do install -D -m 0644 $i $PKG/usr/man/man1/$i ; done )

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

mkdir -p ${PKG}/usr/doc/${PRGNAM}-${VERSION}
cp distsrc/* ${PKG}/usr/doc/${PRGNAM}-${VERSION}

mkdir -p $PKG/etc/{logrotate,rc}.d
cat $CWD/files/mongodb.conf > $PKG/etc/mongodb.conf.new
cat $CWD/files/mongos.conf > $PKG/etc/mongos.conf.new
cat $CWD/files/mongodb.logrotate > $PKG/etc/logrotate.d/mongodb.new
cat $CWD/files/rc.mongodb > $PKG/etc/rc.d/rc.mongodb.new

mkdir -p $PKG/var/{lib,log}/mongodb
chmod 750 $PKG/var/{lib,log}/mongodb
chown mongo.mongo $PKG/var/{lib,log}/mongodb

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
