rtirq (set priorities on kernel IRQ threads)

The rtirq script is a bash script written by Rui Nuno Capela which works
in conjunction with the IRQ threading facility of the Linux kernel. The
script takes advantage of the fact that the kernel can use threads for
IRQ management, and as such these threads (like any other thread running
on your system) can be given maximum priority in an effort to minimize
the latency of audio peripherals.

Modern kernels (3.0 and newer) incorporate IRQ threads, so there's no
need for a patched kernel on Slackware 14.0 or newer. Older systems
would need the realtime kernel patch.

The script is installed as /etc/rc.d/rc.rtirq. To actually run it at
boot time, add code like this to /etc/rc.d/rc.local:

if [ -x /etc/rc.d/rc.rtirq ]; then
  /etc/rc.d/rc.rtirq start
fi

The script can be disabled with "chmod -x /etc/rc.d/rc.rtirq".

To enable IRQ threads, the option 'append="threadirqs"' needs to be
added to the kernel section in /etc/lilo.conf. Example:

# Linux bootable partition config begins
image = /boot/vmlinuz-huge-3.10.17
  root = /dev/sda1
  label = Linux
  append = "threadirqs"
  read-only
# Linux bootable partition config ends

If there's already an 'append', add a space and 'threadirqs', like so:
  append = "noapic acpi=off threadirqs"

Don't forget to run lilo after editing lilo.conf. The threadirqs option
will take effect on the next reboot.
