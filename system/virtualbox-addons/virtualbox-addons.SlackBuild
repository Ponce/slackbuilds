#!/bin/sh

# Slackware build script for virtualbox-addons

# Copyright 2008-2016 Heinz Wiesinger, Amsterdam, The Netherlands
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=virtualbox-addons
SRCNAM=VirtualBox
VERSION=${VERSION:-5.0.14}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if ! grep ^vboxadd: /etc/passwd 2>&1 > /dev/null; then
  echo "  You must have a vboxadd user to run this script."
  echo "    # useradd -u 215 -d /var/run/vboxadd -g 1 -s /bin/sh vboxadd"
  exit 1
fi

# kmk doesn't support MAKEFLAGS, so we use JOBS here
JOBS=${JOBS:-3}

# set xorg-server version
XSERVER=$(X -version 2>&1 | grep Server | cut -d " " -f 4 | sed "s/\.//" | cut -d "." -f 1)

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
  TARGET="x86"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
  TARGET="x86"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  TARGET="amd64"
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-${VERSION}
tar xvf $CWD/$SRCNAM-${VERSION}.tar.bz2
cd $SRCNAM-${VERSION}
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# We don't want an init-script building kernel modules.
# Use virtualbox-kernel-addons.SlackBuild for this.
patch -d src/VBox/Additions/linux/installer/ -i $CWD/rc.vboxadd.diff

# We set the environment variables manually to avoid dependency on acpica
export BUILD_PLATFORM="linux"
export BUILD_PLATFORM_ARCH="$TARGET"
export BUILD_TARGET="linux"
export BUILD_TARGET_ARCH="$TARGET"
export BUILD_TARGET_CPU="$ARCH"
export BUILD_TYPE="release"
export PATH_KBUILD="$TMP/$SRCNAM-${VERSION}/kBuild"
export PATH_DEVTOOLS="$TMP/$SRCNAM-${VERSION}/tools"
path_kbuild_bin="$PATH_KBUILD/bin/$BUILD_TARGET.$BUILD_PLATFORM_ARCH"
export PATH_KBUILD_BIN="$path_kbuild_bin"
path_dev_bin="$PATH_DEVTOOLS/$BUILD_TARGET.$BUILD_PLATFORM_ARCH"/bin
echo "$PATH" | grep -q "$path_kbuild_bin" || PATH="$path_kbuild_bin:$PATH"
echo "$PATH" | grep -q "$path_dev_bin" || PATH="$path_dev_bin:$PATH"
export PATH
unset path_kbuild_bin path_dev_bin

kmk -j ${JOBS} LOCALCFG=$CWD/LocalConfig.kmk

mkdir -p $PKG/lib/udev/rules.d $PKG/sbin \
  $PKG/etc/{xdg/autostart,rc.d} \
  $PKG/usr/{src,bin,sbin,share/autostart} \
  $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/drivers

cp -f src/VBox/Additions/linux/installer/vboxadd.sh \
  $PKG/etc/rc.d/rc.vboxadd.new
cp -f src/VBox/Additions/linux/installer/vboxadd-service.sh \
  $PKG/etc/rc.d/rc.vboxadd-service.new

cp -f src/VBox/Additions/x11/Installer/vboxclient.desktop \
  $PKG/etc/xdg/autostart/
cp -f src/VBox/Additions/x11/Installer/vboxclient.desktop \
  $PKG/usr/share/autostart/
install -m 755 src/VBox/Additions/x11/Installer/98vboxadd-xclient \
  $PKG/usr/bin/VBoxClient-all

echo "KERNEL==\"vboxguest\", NAME=\"vboxguest\", OWNER=\"vboxadd\", MODE=\"0660\"" \
 > $PKG/lib/udev/rules.d/60-vboxadd.rules
echo "KERNEL==\"vboxuser\", NAME=\"vboxuser\", OWNER=\"vboxadd\", MODE=\"0666\"" \
 >> $PKG/lib/udev/rules.d/60-vboxadd.rules

cd out/linux.$TARGET/release/bin/additions
  cp -rf src/vboxguest $PKG/usr/src/vboxguest-$VERSION
  cp -rf src/vboxsf $PKG/usr/src/vboxsf-$VERSION
  cp -rf src/vboxvideo $PKG/usr/src/vboxvideo-$VERSION
  install -m 755 VBoxControl $PKG/usr/bin/
  install -m 755 VBoxClient $PKG/usr/bin/
  install -m 755 VBoxService $PKG/usr/sbin/
  install -m 4755 mount.vboxsf $PKG/sbin/mount.vboxsf
  install -m 644 vboxvideo_drv_$XSERVER.so \
    $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/drivers/vboxvideo_drv.so

  install -m 644 VBoxOGLcrutil.so $PKG/usr/lib$LIBDIRSUFFIX
  install -m 644 VBoxOGLerrorspu.so $PKG/usr/lib$LIBDIRSUFFIX
  install -m 644 VBoxOGLarrayspu.so $PKG/usr/lib$LIBDIRSUFFIX
  install -m 644 VBoxOGLfeedbackspu.so $PKG/usr/lib$LIBDIRSUFFIX
  install -m 644 VBoxOGLpackspu.so $PKG/usr/lib$LIBDIRSUFFIX
  install -m 644 VBoxOGLpassthroughspu.so $PKG/usr/lib$LIBDIRSUFFIX
  install -m 644 VBoxOGL.so $PKG/usr/lib$LIBDIRSUFFIX

  mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/dri
  ln -s /usr/lib$LIBDIRSUFFIX/VBoxOGL.so \
    $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/dri/vboxvideo_dri.so
cd -

# kconf_update script to disable OpenGL within KDE
mkdir -p $PKG/usr/share/apps/kconf_update $PKG/usr/share/config/
install -m 644 $CWD/kwin_blacklist_vbox.sh $PKG/usr/share/apps/kconf_update/
install -m 644 $CWD/kwinrc $PKG/usr/share/config/

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -f COPYING COPYING.CDDL $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/README.SLACKWARE > $PKG/usr/doc/$PRGNAM-$VERSION/README.SLACKWARE
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
