#!/bin/bash

# Slackware build script for virtualbox-addons

# Copyright 2008-2024 Heinz Wiesinger, Amsterdam, The Netherlands
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=virtualbox-addons
SRCNAM=VirtualBox
VERSION=${VERSION:-6.1.50}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if ! grep ^vboxadd: /etc/passwd 2>&1 > /dev/null; then
  echo "  You must have a vboxadd user to run this script."
  echo "    # useradd -u 215 -d /var/run/vboxadd -g 1 -s /bin/sh vboxadd"
  exit 1
fi

# kmk doesn't support MAKEFLAGS, so we use JOBS here
JOBS=${JOBS:-3}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
  TARGET="x86"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
  TARGET="x86"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  TARGET="amd64"
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-${VERSION}
tar xvf $CWD/$SRCNAM-${VERSION}.tar.bz2
cd $SRCNAM-${VERSION}
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

patch -p0 < $CWD/gcc13.patch

./configure \
  --only-additions \
  --disable-kmods \
  --with-makeself=/usr/bin/echo

. ./env.sh

kmk -j ${JOBS} LOCALCFG=$CWD/LocalConfig.kmk

mkdir -p $PKG/lib/udev/rules.d $PKG/sbin \
  $PKG/lib$LIBDIRSUFFIX/security \
  $PKG/etc/rc.d \
  $PKG/usr/{bin,sbin}

cp -f src/VBox/Additions/linux/installer/vboxadd-service.sh \
  $PKG/etc/rc.d/rc.vboxadd-service.new

mkdir -p $PKG/etc/xdg/autostart \
  $PKG/usr/share/autostart
cp -f src/VBox/Additions/x11/Installer/vboxclient.desktop \
  $PKG/etc/xdg/autostart/
cp -f src/VBox/Additions/x11/Installer/vboxclient.desktop \
  $PKG/usr/share/autostart/

install -m 755 src/VBox/Additions/x11/Installer/98vboxadd-xclient \
  $PKG/usr/bin/VBoxClient-all

echo "KERNEL==\"vboxguest\", NAME=\"vboxguest\", OWNER=\"vboxadd\", MODE=\"0660\"" \
 > $PKG/lib/udev/rules.d/60-vboxadd.rules
echo "KERNEL==\"vboxuser\", NAME=\"vboxuser\", OWNER=\"vboxadd\", MODE=\"0666\"" \
 >> $PKG/lib/udev/rules.d/60-vboxadd.rules

cd out/linux.$TARGET/release/bin/additions
  install -m 755 VBoxControl $PKG/usr/bin/
  install -m 755 VBoxClient $PKG/usr/bin/
  install -m 4755 VBoxDRMClient $PKG/usr/bin/
  install -m 755 VBoxService $PKG/usr/sbin/
  install -m 4755 mount.vboxsf $PKG/sbin/mount.vboxsf
  install -m 755 pam_vbox.so $PKG/lib$LIBDIRSUFFIX/security/pam_vbox.so

  install -m 755 $CWD/vbox-uninstall-guest-additions $PKG/usr/sbin/
cd -

# We disabled kscreen in earlier versions of the package
# This kconf_update script re-enabled it
# See bug at https://bugs.kde.org/show_bug.cgi?id=407058
mkdir -p $PKG/usr/share/kconf_update
install -m 755 $CWD/plasma_enable_kscreen.sh $PKG/usr/share/kconf_update/
install -m 644 $CWD/virtualbox_plasma_enable_kscreen.upd $PKG/usr/share/kconf_update/

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -f COPYING COPYING.CDDL $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/README.SLACKWARE > $PKG/usr/doc/$PRGNAM-$VERSION/README.SLACKWARE
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
