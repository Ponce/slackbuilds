#!/bin/bash

# Slackware build script for pstate-frequency

# Copyright 2016-2018 SÃ©bastien Ballet France
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=pstate-frequency
VERSION=${VERSION:-3.10.2}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm; echo "Unsupported arch $ARCH"; exit 1;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

WITH_POWER_PLANS=${WITH_POWER_PLANS:-yes}
WITH_BASH_COMPLETION=${WITH_BASH_COMPLETION:-no}
WITH_ZSH_COMPLETION=${WITH_ZSH_COMPLETION:-no}
WITH_SYSTEMD_UNIT=${WITH_SYSTEMD_UNIT:-no}
WITH_UDEV_RULE=${WITH_UDEV_RULE:-no}
UDEV_RULE_DIR=${UDEV_RULE_DIR:-/lib/udev/rules.d/} # not used when WITH_UDEV_RULE=no

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION

if [ -e $CWD/$VERSION.tar.gz ]; then
	tar xvf $CWD/$VERSION.tar.gz
else
	tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
fi

cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

[ "${WITH_POWER_PLANS}" != "no" ] && __INCLUDE_POWER_PLANS=1 || __INCLUDE_POWER_PLANS=0
[ "${WITH_BASH_COMPLETION}" != "no" ] && __INCLUDE_BASH_COMPLETION=1 || __INCLUDE_BASH_COMPLETION=0
[ "${WITH_ZSH_COMPLETION}" != "no" ] && __INCLUDE_ZSH_COMPLETION=1 || __INCLUDE_ZSH_COMPLETION=0
[ "${WITH_SYSTEMD_UNIT}" != "no" ] && __INCLUDE_SYSTEMD_UNIT=1 || __INCLUDE_SYSTEMD_UNIT=0
[ "${WITH_UDEV_RULE}" != "no" ] && __INCLUDE_UDEV_RULE=1 || __INCLUDE_UDEV_RULE=0

make install DESTDIR="$PKG" \
PREFIX="/usr" \
INCLUDE_POWER_PLANS=${__INCLUDE_POWER_PLANS} \
INCLUDE_BASH_COMPLETION=${__INCLUDE_BASH_COMPLETION} \
INCLUDE_ZSH_COMPLETION=${__INCLUDE_ZSH_COMPLETION} \
INCLUDE_SYSTEMD_UNIT=${__INCLUDE_SYSTEMD_UNIT} \
INCLUDE_UDEV_RULE=${__INCLUDE_UDEV_RULE} \
INCLUDE_DOC=1 \
INCLUDE_LICENSE=1

if [ "${WITH_UDEV_RULE}" != "no" ] ; then
    # Move udev rule in $PKG/UDEV_RULE_DIR (Makefile install udev rule
    # in PKG/usr/lib/udev/rules.d/
    #
  mkdir -p $PKG/${UDEV_RULE_DIR}
  mv $PKG/usr/lib/udev/rules.d/* $PKG/${UDEV_RULE_DIR}
  rm -rf $PKG/usr/lib
fi

 # install docs & Slackbuild
 #
 # Makefile install Readme.md & license in PKG/usr/share/doc/$PRGNAM, so
 # we need to move that in right place (ie. PKG/usr/doc/$PRGNAM-$VERSION)
 #
 # *Attention*, usr/share is removed when INCLUDE_BASH_COMPLETION and
 # INCLUDE_ZSH_COMPLETION are disabled. Otherwise, only usr/share/doc
 # must be removed.
 #
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION

mv $PKG/usr/share/doc/$PRGNAM/* $PKG/usr/doc/$PRGNAM-$VERSION

if [ "${WITH_BASH_COMPLETION}" != "no" ] || [ "${WITH_ZSH_COMPLETION}" != "no" ] ; then
	rm -rf $PKG/usr/share/doc
else
	rm -rf $PKG/usr/share
fi


cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
