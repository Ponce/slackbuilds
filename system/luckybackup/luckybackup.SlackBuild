#!/bin/sh

# Slackware build script for luckybackup

#   Copyright by titopoquito (titopoquito@gmail.com), rob van nues (rvnues@tesco.net)
#   Permission to use, copy, modify, and distribute this software for
#   any purpose with or without fee is hereby granted, provided that
#   the above copyright notice and this permission notice appear in all
#   copies.
#
#   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
#   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#   IN NO EVENT SHALL THE AUTHORS AND COPYRIGHT HOLDERS AND THEIR
#   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#   SUCH DAMAGE.

PRGNAM=luckybackup
VERSION=${VERSION:-0.4.8}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

#  Luckybackup comes with two .desktop files that allow super-user rights by using a login dialog.
#  On KDE kdesu is used and for GNOME a 'set-to-root' script is called that is specific for Debian/Ubuntu.
#  The 'set-to-root' script is not present on Slackware and results in an error message, say when run from XFCE.
#  Therefore, this build script omits the luckybackup-gnome-su.desktop file from the created package:
NOGNOME=true # change to false if used with GNOME 'set-to-root'
#  For systems not running KDE and lacking kdesu, a gksu-version is added:
ADDGKSU=true # change to false if gksu is not used (on non-KDE systems)

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# luckybackup source contains a qmake (Qt4) project file with some
# folders hardwired. Let's change them to the Slackware defaults:
patch -p0 < $CWD/luckybackup.pro.patch
sed -i "s/PROGVERSION/$VERSION/" ./luckybackup.pro
sed -i "s,/usr/share/doc/luckybackup/manual,/usr/doc/luckybackup-$VERSION/manual,g" src/global.h src/helpBrowser.cpp

qmake luckybackup.pro \
  QMAKE_CFLAGS="$SLKCFLAGS" \
  QMAKE_CXXFLAGS="$SLKCFLAGS"

make
make install INSTALL_ROOT=$PKG

# We don't need this
rm -rf $PKG/usr/share/menu

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a readme/* $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

#remove the gnome .desktop file, it calls for a 'su-to-root' script specific for Debian/Ubuntu
if [ $NOGNOME = true ]; then
   rm $PKG/usr/share/applications/luckybackup-gnome-su.desktop
fi

#add a .desktop file to be used with gksu
if [ $ADDGKSU = true ]; then
   cat $CWD/luckybackup-gksu.desktop > $PKG/usr/share/applications/luckybackup-gksu.desktop
fi

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
