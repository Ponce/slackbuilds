#!/bin/sh

# Slackware build script for nvidia-driver

# Copyright 2007-2011 Heinz Wiesinger, Amsterdam, The Netherlands
# Copyright 2012-2015 Edward W. Koenig, Vancouver, WA, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# see changelog.txt

PRGNAM=nvidia-driver
VERSION=${VERSION:-352.63}
MVERS=340
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
CPROXY=${CPROXY:-no}

set -e

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  TARGET="x86"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  TARGET="x86"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  TARGET="x86_64"
  LIBDIRSUFFIX="64"
# Set 32-bit compatibility flag default
  COMPAT32=${COMPAT32:-no}
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

SRCNAM=NVIDIA-Linux-$TARGET-${VERSION}

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf nvidia-installer-$VERSION
tar xvf $CWD/nvidia-installer-$VERSION.tar.bz2
rm -rf nvidia-settings-$VERSION
tar xvf $CWD/nvidia-settings-$VERSION.tar.bz2
rm -rf nvidia-xconfig-$VERSION
tar xvf $CWD/nvidia-xconfig-$VERSION.tar.bz2
rm -rf nvidia-modprobe-$VERSION.tar.bz2
tar xvf $CWD/nvidia-modprobe-$VERSION.tar.bz2
rm -rf nvidia-persistenced-$VERSION.tar.bz2
tar xvf $CWD/nvidia-persistenced-$VERSION.tar.bz2
rm -rf $SRCNAM
sh $CWD/$SRCNAM.run --extract-only
cd $SRCNAM
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/{drivers,extensions} \
  $PKG/etc/OpenCL/vendors/ $PKG/usr/lib$LIBDIRSUFFIX/tls \
  $PKG/usr/{bin,man/man1,sbin} $PKG/usr/share/{applications,pixmaps} \
  $PKG/usr/include/GL

# Get all the libs to the right place
install -m 755 nvidia_drv.so $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/drivers/
install -m 755 libcuda.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libglx.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/extensions/libglx.so.$VERSION-nvidia
install -m 755 libGL.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/libGL.so.$VERSION-nvidia
install -m 755 libGL.la $PKG/usr/lib$LIBDIRSUFFIX/libGL.la-nvidia
install -m 755 libEGL.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/libEGL.so.$VERSION-nvidia
install -m 755 libOpenCL.so.1.0.0 $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvcuvid.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-cfg.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-compiler.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-eglcore.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX
install -m 755 libnvidia-encode.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-fbc.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-glcore.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-ifr.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-glsi.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-ml.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-opencl.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 tls/libnvidia-tls.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/tls/
install -m 755 libGLESv1_CM.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/libGLESv1_CM.so.$VERSION
install -m 755 libGLESv2.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/libGLESv2.so.$VERSION

# For nvidia-settings GUI support
install -m 755 libnvidia-gtk2.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/
install -m 755 libnvidia-gtk3.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/

# Don't forget separate libvdpau package on SBo.
install -m 755 libvdpau_nvidia.so.$VERSION $PKG/usr/lib$LIBDIRSUFFIX/

install -m 644 nvidia.icd $PKG/etc/OpenCL/vendors/

# Add optional 32-bit support
if [ "$ARCH" = "x86_64" -a "${COMPAT32}" = "yes" ]; then
  mkdir -p $PKG/usr/lib/tls

  install -m 755 32/libcuda.so.$VERSION $PKG/usr/lib/
  install -m 755 32/libGL.so.$VERSION $PKG/usr/lib/libGL.so.$VERSION-nvidia
  install -m 755 32/libGL.la $PKG/usr/lib/libGL.la-nvidia
  install -m 755 32/libEGL.so.$VERSION $PKG/usr/lib/libEGL.so.$VERSION-nvidia
  install -m 755 32/libGLESv1_CM.so.$VERSION $PKG/usr/lib/libGLESv1_CM.so.$VERSION
  install -m 755 32/libGLESv2.so.$VERSION $PKG/usr/lib/libGLESv2.so.$VERSION
  install -m 755 32/libnvcuvid.so.$VERSION $PKG/usr/lib/
  install -m 755 32/libnvidia-compiler.so.$VERSION $PKG/usr/lib/
  install -m 755 32/libnvidia-eglcore.so.$VERSION $PKG/usr/lib/
  install -m 755 32/libnvidia-encode.so.$VERSION $PKG/usr/lib/
  install -m 755 32/libnvidia-fbc.so.$VERSION $PKG/usr/lib/
  install -m 755 32/libnvidia-glcore.so.$VERSION $PKG/usr/lib/
  install -m 755 32/libnvidia-glsi.so.$VERSION $PKG/usr/lib/
  install -m 755 32/libnvidia-ifr.so.$VERSION $PKG/usr/lib/
  install -m 755 32/libnvidia-ml.so.$VERSION $PKG/usr/lib/
  install -m 755 32/libnvidia-opencl.so.$VERSION $PKG/usr/lib/
  install -m 755 32/tls/libnvidia-tls.so.$VERSION $PKG/usr/lib/tls/
  install -m 755 32/libOpenCL.so.1.0.0 $PKG/usr/lib/
  install -m 755 32/libvdpau_nvidia.so.$VERSION $PKG/usr/lib/
fi

# symlinks
cd $PKG/usr/lib$LIBDIRSUFFIX
  for i in libcuda libnvidia-cfg; do
    ln -s $i.so.$VERSION $i.so.1
    ln -s $i.so.1 $i.so
  done
  ln -sf libOpenCL.so.1.0.0 libOpenCL.so.1.0
  ln -sf libOpenCL.so.1.0 libOpenCL.so.1
  ln -sf libOpenCL.so.1 libOpenCL.so
  ln -sf libnvcuvid.so.$VERSION libnvcuvid.so.1
  ln -sf libnvcuvid.so.1 libnvcuvid.so
  ln -sf libvdpau_nvidia.so.$VERSION libvdpau_nvidia.so
  ln -sf tls/libnvidia-tls.so.$VERSION libnvidia-tls.so.$VERSION
cd -

# symlinks for optional 32-bit support
if [ "$ARCH" = "x86_64" -a "${COMPAT32}" = "yes" ]; then
  cd $PKG/usr/lib
    ln -sf libcuda.so.$VERSION libcuda.so.$MVERS
    ln -sf libcuda.so.$MVERS libcuda.so
    ln -sf libOpenCL.so.1.0.0 libOpenCL.so.1.0
    ln -sf libOpenCL.so.1.0 libOpenCL.so.1
    ln -sf libOpenCL.so.1 libOpenCL.so
    ln -sf libnvcuvid.so.$VERSION libnvcuvid.so.1
    ln -sf libnvcuvid.so.1 libnvcuvid.so
    ln -sf libvdpau_nvidia.so.$VERSION libvdpau_nvidia.so
    ln -sf tls/libnvidia-tls.so.$VERSION libnvidia-tls.so.$VERSION
  cd -
fi

# Next come the apps
for i in nvidia-smi nvidia-bug-report.sh nvidia-debugdump; do
  install -m 755 $i $PKG/usr/bin/
done

install -m 644 nvidia-smi.1.gz $PKG/usr/man/man1/

# New CUDA MPS server for 64-bit Linux only, and requires a device that supports
# Unified Virtual Address (UVA) and CUDA 4.0+. See NVIDIA docs.
if [ "$ARCH" = "x86_64" -a "${CPROXY}" = "yes" ]; then
   install -m 755 nvidia-cuda-mps-control $PKG/usr/bin/
   install -m 755 nvidia-cuda-mps-server $PKG/usr/bin/
   install -m 644 nvidia-cuda-mps-control.1.gz $PKG/usr/man/man1/
fi

# Compiling nvidia-installer from source
# Not really needed for this SBo package
cd $TMP/nvidia-installer-$VERSION
  chown -R root:root .
  find -L . \
   \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
    -o -perm 511 \) -exec chmod 755 {} \; -o \
   \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
    -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

  CFLAGS="$SLKCFLAGS" LDFLAGS="-lz" make

  install -m 755 _out/Linux_$TARGET/nvidia-installer $PKG/usr/bin/
  install -m 644 _out/Linux_$TARGET/nvidia-installer.1.gz $PKG/usr/man/man1/
cd -

# Compiling nvidia-settings from source
cd $TMP/nvidia-settings-$VERSION
  chown -R root:root .
  find -L . \
   \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
    -o -perm 511 \) -exec chmod 755 {} \; -o \
   \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
    -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

  cd src/libXNVCtrl
    make clean
    CFLAGS="$SLKCFLAGS" \
    make
  cd ../../

  CFLAGS="$SLKCFLAGS" \
  make

  install -m 755 src/_out/Linux_$TARGET/nvidia-settings $PKG/usr/bin/
  install -m 644 doc/_out/Linux_$TARGET/nvidia-settings.1.gz $PKG/usr/man/man1/
  install -m 644 doc/nvidia-settings.desktop $PKG/usr/share/applications/
  install -m 644 doc/nvidia-settings.png $PKG/usr/share/pixmaps/
cd ../

# Compiling nvidia-xconfig from source
cd $TMP/nvidia-xconfig-$VERSION
  chown -R root:root .
  find -L . \
   \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
    -o -perm 511 \) -exec chmod 755 {} \; -o \
   \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
    -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

  CFLAGS="$SLKCFLAGS" \
  make

  install -m 755 _out/Linux_$TARGET/nvidia-xconfig $PKG/usr/bin/
  install -m 644 _out/Linux_$TARGET/nvidia-xconfig.1.gz $PKG/usr/man/man1/
cd -

# Some new optional "useless" utilities, such as laptop GPU switching
# nvidia-modprobe needed to create device nodes, see README!
# FIXME: Needs cleanup at a later date.

# Compiling nvidia-modprobe from source
  cd $TMP/nvidia-modprobe-$VERSION
    chown -R root:root .
    find -L . \
     \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
      -o -perm 511 \) -exec chmod 755 {} \; -o \
     \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
      -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

    CFLAGS="$SLKCFLAGS" make

    install -m 755 _out/Linux_$TARGET/nvidia-modprobe $PKG/usr/bin/
    install -m 644 _out/Linux_$TARGET/nvidia-modprobe.1.gz $PKG/usr/man/man1/
  cd -
# Compiling nvidia-persistenced from source
  cd $TMP/nvidia-persistenced-$VERSION
    chown -R root:root .
    find -L . \
     \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
      -o -perm 511 \) -exec chmod 755 {} \; -o \
     \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
      -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

    CFLAGS="$SLKCFLAGS" make
#FIXME: need rc.nvidia-persistenced script
    install -m 755 _out/Linux_$TARGET/nvidia-persistenced $PKG/usr/bin/
    install -m 644 _out/Linux_$TARGET/nvidia-persistenced.1.gz $PKG/usr/man/man1/
  cd -

# Bash script to cleanly install (in doinst.sh) and uninstall the nvidia files
# so we don't stomp on the overlapping xorg files.
# Note: switching "on the fly" is no longer supported.
install -m 0755 $CWD/nvidia-switch $PKG/usr/sbin/
sed -i s/PKGVERSION/$VERSION/g $PKG/usr/sbin/nvidia-switch
sed -i s/LIBDIRSUFFIX/$LIBDIRSUFFIX/g $PKG/usr/sbin/nvidia-switch
if [ ${COMPAT32} = "yes" ]; then
  sed -i s/LIB32FLAG/yes/g $PKG/usr/sbin/nvidia-switch
else
  sed -i s/LIB32FLAG/no/g $PKG/usr/sbin/nvidia-switch
fi

# These update placeholders and correct wrong paths
sed -i "s|__LIBGL_PATH__|/usr/lib$LIBDIRSUFFIX/|" $PKG/usr/lib$LIBDIRSUFFIX/libGL.la-nvidia
sed -i "s|/usr/X11R6/lib|/usr/lib$LIBDIRSUFFIX/|" $PKG/usr/lib$LIBDIRSUFFIX/libGL.la-nvidia
sed -i "s|__UTILS_PATH__|/usr/bin|" \
  $PKG/usr/share/applications/nvidia-settings.desktop
sed -i "s|__PIXMAP_PATH__|/usr/share/pixmaps|" \
  $PKG/usr/share/applications/nvidia-settings.desktop
sed -i "s|__NVIDIA_SETTINGS_DESKTOP_CATEGORIES__|Application;Settings;|" \
  $PKG/usr/share/applications/nvidia-settings.desktop

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cd $TMP/$SRCNAM
cp -a LICENSE NVIDIA_Changelog README.txt html $PKG/usr/doc/$PRGNAM-$VERSION
cp -a nvidia-persistenced-init.tar.bz2 $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/README > $PKG/usr/doc/$PRGNAM-$VERSION/README.Slackware
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

# configs, nvidia-settings application profile support (see documention for use).
mkdir -p $PKG/usr/share/nvidia
install -m 755 nvidia-application-profiles-$VERSION-key-documentation $PKG/usr/share/nvidia/
install -m 755 nvidia-application-profiles-$VERSION-rc $PKG/usr/share/nvidia/

mkdir -p $PKG/install
sed "s/PKGVERSION/$VERSION/g" $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$TARGET-$BUILD$TAG.${PKGTYPE:-tgz}
