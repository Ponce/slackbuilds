#!/bin/bash

# Slackware build script for sqldiff

# Yth | Pont-en-Royans, France | yth@ythogtha.org

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=sqldiff
VERSION=${VERSION:-3.37.2}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}
SRCNAM=sqlite
SRCVER="3370200"

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

# Enable the same features as slackware official sqlite package:
# Enable AND, NOT and nested parenthesis in FTS3
SLKCFLAGS="$SLKCFLAGS -DSQLITE_ENABLE_FTS3_PARENTHESIS=1"

# Enable the ICU extension
SLKCFLAGS="$SLKCFLAGS -DSQLITE_ENABLE_ICU"

# Enables the retrieval of column metadata
SLKCFLAGS="$SLKCFLAGS -DSQLITE_ENABLE_COLUMN_METADATA=1"

# Disable directory syncs
SLKCFLAGS="$SLKCFLAGS -DSQLITE_DISABLE_DIRSYNC=1"

# Add additional logic to the ANALYZE command and to the query planner
# to chose better query plans under certain situations
SLKCFLAGS="$SLKCFLAGS -DSQLITE_ENABLE_STAT4=1"

# Enable the sqlite3_unlock_notify() interface and its associated functionality
# https://www.sqlite.org/unlock_notify.html
SLKCFLAGS="$SLKCFLAGS -DSQLITE_ENABLE_UNLOCK_NOTIFY=1"

# The secure_delete setting causes deleted content to be overwritten with zeros
# https://www.sqlite.org/pragma.html#pragma_secure_delete
SLKCFLAGS="$SLKCFLAGS -DSQLITE_SECURE_DELETE=1"

# Enable the "Resumable Bulk Update" extension
# https://www.sqlite.org/rbu.html
SLKCFLAGS="$SLKCFLAGS -DSQLITE_ENABLE_RBU=1"

# Enable the DBSTAT Virtual Table
# https://www.sqlite.org/dbstat.html
SLKCFLAGS="$SLKCFLAGS -DSQLITE_ENABLE_DBSTAT_VTAB=1"

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-src-$SRCVER
tar xvf $CWD/$SRCNAM-src-$SRCVER.tar.?z* || exit 1
cd $SRCNAM-src-$SRCVER || exit 1
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
 -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Completely copied from slackware's official sqlite SlackBuild
if [ ! -f configure ]; then
  # Try regenerating configure:
  autoreconf -vif
fi

# Fix a bug in ./configure that discards all but the last considered option:
sed -i "s|\$(OPT_FEATURE_FLAGS)|\${OPT_FEATURE_FLAGS}|g" ./configure


CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS $(icu-config --cppflags)" \
LDFLAGS="$(icu-config --ldflags)" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --mandir=/usr/man \
  --enable-threadsafe \
  --enable-tempstore=yes \
  --enable-load-extension \
  --enable-fts3 \
  --enable-fts4 \
  --enable-fts5 \
  --enable-json1 \
  --enable-rtree \
  --enable-session \
  --enable-static=no \
  --build=$ARCH-slackware-linux || exit 1
# End of Slackware's SlackBuild copy-pasting

# Here we only build $PRGNAM target
make $PRGNAM || exit 1

mkdir -p $PKG/usr/bin
install -m755 $PRGNAM $PKG/usr/bin/

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
