#!/bin/sh

# Slackware build script for RabbitMQ Server

# Copyright 2015 Andre Barboza, Belo Horizonte - Brazil
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=rabbitmq-server
VERSION=${VERSION:-3.6.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

RABBITMQ_USER=${RABBITMQ_USER:-rabbitmq}
RABBITMQ_UID=${RABBITMQ_UID:-319}
RABBITMQ_GROUP=${RABBITMQ_GROUP:-rabbitmq}
RABBITMQ_GID=${RABBITMQ_GID:-319}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

bailout() {
  echo "  You must have a $RABBITMQ_USER user and $RABBITMQ_GROUP group to run this script. "
  echo "  Something like this should suffice for most systems: "
  echo "    # groupadd -g $RABBITMQ_GID $RABBITMQ_GROUP "
  echo "    # useradd -u $RABBITMQ_UID -g $RABBITMQ_GID -c \"Rabbit MQ\" -d /var/lib/rabbitmq -s /bin/sh $RABBITMQ_USER "
  echo "  Giving /bin/sh as $RABBITMQ_USER shell is important as the init script will try tu 'su -' to it."
  exit 1
}

# Bail if user and/or group isn't valid on your system
# uid=319 is suggested to avoid conflicts with other SBo packages,
# but it's your call: http://slackbuilds.org/uid_gid.txt
if ! grep -q "^$RABBITMQ_USER:" /etc/passwd; then
  bailout
elif ! grep -q "^$RABBITMQ_GROUP:" /etc/group; then
  bailout
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "x86_64" ]; then
  LIBDIRSUFFIX="64"
else
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.xz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

make
make docs
make install install-man\
  PREFIX=/usr \
  DESTDIR=$PKG \
  MANDIR=/usr/man \
  RMQ_ROOTDIR=/usr/lib${LIBDIRSUFFIX}/erlang

mkdir -p ${PKG}/usr/bin
(
  cd ${PKG}/usr/bin
  ln -s ../lib${LIBDIRSUFFIX}/erlang/lib/rabbitmq_server-${VERSION}/sbin/rabbitmq-defaults
  ln -s ../lib${LIBDIRSUFFIX}/erlang/lib/rabbitmq_server-${VERSION}/sbin/rabbitmq-env
  ln -s ../lib${LIBDIRSUFFIX}/erlang/lib/rabbitmq_server-${VERSION}/sbin/rabbitmq-plugins
  ln -s ../lib${LIBDIRSUFFIX}/erlang/lib/rabbitmq_server-${VERSION}/sbin/rabbitmq-server
  ln -s ../lib${LIBDIRSUFFIX}/erlang/lib/rabbitmq_server-${VERSION}/sbin/rabbitmqctl
)

install -dm 750 ${PKG}/var/log/rabbitmq
install -dm 750 ${PKG}/var/lib/rabbitmq/mnesia
chown -R $RABBITMQ_USER:$RABBITMQ_GROUP $PKG/var/{lib,log}/rabbitmq

install -dm 750 ${PKG}/etc/rabbitmq
install -m 644 $CWD/rabbitmq-env.conf $PKG/etc/rabbitmq/rabbitmq-env.conf.new
install -m 644 docs/rabbitmq.config.example ${PKG}/etc/rabbitmq/
chown -R $RABBITMQ_USER:$RABBITMQ_GROUP $PKG/etc/rabbitmq

mkdir -p ${PKG}/etc/rc.d
install -o root -g root -m 644 $CWD/rc.rabbitmq $PKG/etc/rc.d/rc.rabbitmq.new

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a CONTRIBUTING.md LICENSE  README* $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
