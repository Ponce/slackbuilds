#!/bin/bash

# Slackware build script for Bacula

# Copyright 2010, 2012, 2013, 2018, 2020  Mario Preksavec, Zagreb, Croatia
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=bacula
VERSION=${VERSION:-9.6.3}
BUILD=${BUILD:-2}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

# E-mail address used for job announcements and core dumps
EMAIL=${EMAIL:-root@localhost}

# SMTP host for e-mail delivery
SMTPHOST=${SMTPHOST:-localhost}

# Database support, build with mysql on by default
DATABASE=${DATABASE:-mysql}
case "$DATABASE" in
  postgresql) WITH_DATABASE="--with-postgresql" ;;
       mysql) WITH_DATABASE="--with-mysql" ;;
      sqlite) WITH_DATABASE="--with-sqlite3" ;;
           *) WITH_DATABASE="" ;;
esac

# BAT support, includes a desktop icon
BAT=${BAT:-no}
case "$BAT" in
  yes) ENABLE_BAT="--enable-bat" ;;
    *) ENABLE_BAT="" ;;
esac

# User might want a portable install
OPT_PREFIX=${OPT_PREFIX:-no}
case "$OPT_PREFIX" in
  no) PREFIX=/usr
      LIBDIR=$PREFIX/lib${LIBDIRSUFFIX}
      SYSCONFDIR=/etc/bacula
      LOCALSTATEDIR=/var
      SBINDIR=$PREFIX/sbin
      VARIABLEDATA=$LOCALSTATEDIR/bacula
   ;;
   *) PREFIX=/opt/bacula
      LIBDIR=$PREFIX/lib
      SYSCONFDIR=$PREFIX/etc
      SBINDIR=$PREFIX/bin
      LOCALSTATEDIR=$PREFIX/var
      VARIABLEDATA=$PREFIX
   ;;
esac

set -e

# Bail if user or group isn't valid on your system
if ! getent passwd bacula 2>/dev/null; then

cat << EOF

  You must have a bacula user to run this script

  # groupadd -g 268 bacula
  # useradd -u 268 -d /dev/null -s /bin/false -g bacula bacula

EOF

  exit
elif ! getent group bacula 2>/dev/null; then

cat << EOF

  You must have a bacula group to run this script

  # groupadd -g 268 bacula

EOF

  exit
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=$PREFIX \
  --sbindir=$SBINDIR \
  --libdir=$LIBDIR \
  --sysconfdir=$SYSCONFDIR \
  --localstatedir=$LOCALSTATEDIR \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --with-working-dir=$VARIABLEDATA/working \
  --with-scriptdir=$VARIABLEDATA/scripts \
  --with-logdir=$VARIABLEDATA/working \
  --with-plugindir=$VARIABLEDATA/plugins \
  --with-dump-email=$EMAIL \
  --with-job-email=$EMAIL \
  --with-smtp-host=$SMTPHOST \
  --enable-smartalloc \
  --disable-readline \
  --with-dir-group=bacula \
  --with-dir-user=bacula \
  --with-sd-group=bacula \
  --with-sd-user=bacula \
  $WITH_DATABASE \
  $ENABLE_BAT \
  --build=$ARCH-slackware-linux

make
make install DESTDIR=$PKG

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# Copy logrotate script, adds bacula user
mkdir -p $PKG/etc/logrotate.d
sed '/^\/.*{$/ s#$#\n    su bacula bacula#' scripts/logrotate \
  > $PKG/etc/logrotate.d/bacula.new

# Copy init script
install -D -m0755 -oroot -groot scripts/bacula $PKG/etc/rc.d/rc.bacula.new

# Append .new to config files
for i in $PKG/$SYSCONFDIR/*.conf ; do mv $i $i.new ; done

# More BAT GUI stuff
case "$BAT" in
  yes) install -D -m0644 -oroot -groot $CWD/bacula-bat.desktop \
         $PKG/usr/share/applications/bacula-bat.desktop
       install -D -m0644 -oroot -groot $CWD/bacula.png \
         $PKG/usr/share/icons/hicolor/64x64/apps/bacula.png
       sed -i "s#%sbindir%#$SBINDIR#" \
         $PKG/usr/share/applications/bacula-bat.desktop
    ;;
esac

# Remove useless tmp dir
rmdir $PKG/tmp

# Fix some permissions
chown -R bacula:bacula $PKG/$SYSCONFDIR/* $PKG/$SBINDIR/* \
  $PKG/$VARIABLEDATA/{plugins,scripts}

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  ChangeLog COPYING INSTALL README ReleaseNotes VERIFYING \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
cat $CWD/README.SLACKWARE > $PKG/usr/doc/$PRGNAM-$VERSION/README.SLACKWARE

rm -f $PKG/usr/lib*/*.la

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh
sed -i "s#%sysconfdir%#$(echo "$SYSCONFDIR" | sed 's:^/*::')#g" $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
