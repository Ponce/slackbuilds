#!/bin/sh

# Slackware build script for conky

# Copyright 2016 Matt Dinslage (daedra1980@gmail.com), Springfield, MO, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=conky
VERSION=${VERSION:-1.10.6}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

# Pass AUDACIOUS=yes if you want to build audacious player support.
AUDACIOUS=${AUDACIOUS:-"no"}

# Pass NVIDIA=yes if you want to build NVIDIA hardware monitoring support.
NVIDIA=${NVIDIA:-"no"}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

if [ "${AUDACIOUS:-yes}" = "yes" ]; then
  audacious="ON"
else
  audacious="OFF"
fi

if [ "${NVIDIA:-yes}" = "yes" ]; then
  nvidia="ON"
else
  nvidia="OFF"
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Fix for the newer gcc
patch -p1 < $CWD/conky-1.10.6-gcc7.patch

# fix MANDIR
sed -i 's,share/man/man1,man/man1,g' CMakeLists.txt

# fix compile error with gcc-7.*
sed -i "31i #include <functional>" src/luamm.hh

mkdir -p build
cd build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLIB_SUFFIX=${LIBDIRSUFFIX} \
    -DDOC_PATH=/usr/doc/$PRGNAM-$VERSION \
    -DMAN_INSTALL_DIR=/usr/man \
    -DMAINTAINER_MODE=ON \
    -DBUILD_XDBE=ON \
    -DBUILD_AUDACIOUS=$audacious \
    -DBUILD_NVIDIA=$nvidia \
    -DBUILD_CURL=ON \
    -DBUILD_WLAN=ON \
    -DBUILD_RSS=ON \
    -DBUILD_WEATHER_METAR=ON \
    -DBUILD_WEATHER_XOAP=ON \
    -DBUILD_MPD=ON \
    -DBUILD_IMLIB2=ON \
    -DBUILD_LUA_CAIRO=ON \
    -DBUILD_LUA_IMLIB2=ON \
    -DCMAKE_BUILD_TYPE=Release ..

  make VERBOSE=1
  make install DESTDIR=$PKG
cd ..

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

# Copy existing config files
mkdir -p $PKG/etc/conky
cp data/conky.conf $PKG/etc/conky/conky.conf.new
cp data/conky_no_x11.conf $PKG/etc/conky/conky_no_x11.conf.new

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a AUTHORS COPYING ChangeLog LICENSE.GPL README.md NEWS TODO \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

# Remove duplicate config files out of the docdir.
rm -r $PKG/usr/doc/$PRGNAM-$VERSION/*.conf

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
