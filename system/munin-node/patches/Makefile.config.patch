--- Makefile.config	2014-11-24 16:46:24.000000000 -0500
+++ Makefile.config.new	2015-07-16 14:12:13.868927186 -0400
@@ -17,10 +17,10 @@
 #
 # the base of the Munin installation.
 #
-PREFIX     = $(DESTDIR)/opt/munin
+PREFIX     = $(DESTDIR)/usr
 
 # Where Munin keeps its configurations (server.conf, client.conf, ++)
-CONFDIR    = $(DESTDIR)/etc/opt/munin
+CONFDIR    = $(DESTDIR)/etc/munin
 
 # Server only - where to put munin-cron
 BINDIR     = $(PREFIX)/bin
@@ -35,17 +35,17 @@
 MANDIR     = $(PREFIX)/man
 
 # Where to put internal binaries and plugin repository
-LIBDIR     = $(PREFIX)/lib
+LIBDIR     = $(PREFIX)/lib/munin
 
 # Server only - Output directory
 HTMLDIR    = $(PREFIX)/www/docs
 CGIDIR     = $(PREFIX)/www/cgi
 
 # Where to put internal data for master (RRD, internal files, ...)
-DBDIR      = $(DESTDIR)/var/opt/munin
+DBDIR      = $(DESTDIR)/var/munin
 
 # Where to put internal data for node (plugin state, ...)
-DBDIRNODE  = $(DESTDIR)/var/opt/munin-node
+DBDIRNODE  = $(DESTDIR)/var/db/munin-node
 
 # Client only - Where the spool files are written. Must be writable by
 # group "munin", and should be preserved between reboots
@@ -56,7 +56,7 @@
 PLUGSTATE  = $(DBDIRNODE)/plugin-state
 
 # Where Munin should place its logs.
-LOGDIR     = $(PREFIX)/log/munin
+LOGDIR     = $(DESTDIR)/var/log/munin
 
 # Location of PID files and other statefiles. On the server, must be
 # writable by the user "munin".
@@ -133,26 +133,6 @@
 CHECKUSER  := $(shell $(GETENT) passwd $(USER) >/dev/null 2>/dev/null || (echo "echo User $(USER) nonexistent. Create the user and retry; exit 2"))
 CHECKGROUP := $(shell $(GETENT) group $(GROUP) >/dev/null 2>/dev/null || (echo "echo Group $(GROUP) nonexistent. Create the group and retry; exit 2"))
 
-# For OSX, comment out the previous two lines and comment in these
-#
-#CHECKUSER  := $(shell nicl . -read /users/$(USER) >/dev/null 2>/dev/null || (echo "echo User $(USER) nonexistent. Create the user and retry; exit 2"))
-#CHECKGROUP := $(shell nicl . -read /groups/$(GROUP) >/dev/null 2>/dev/null || (echo "echo Group $(GROUP) nonexistent. Create the group and retry; exit 2"))
-
-# For OSX 10.5 (Leopard), use the following two lines instead of what's above
-#
-#CHECKUSER  := $(shell dscl . -read /Users/$(USER) >/dev/null 2>/dev/null || (echo "echo User $(USER) nonexistent. Create the user and retry; exit 2"))
-#CHECKGROUP := $(shell dscl . -read /Groups/$(GROUP) >/dev/null 2>/dev/null || (echo "echo Group $(GROUP) nonexistent. Create the group and retry; exit 2"))
-
-
-# For HP-UX, use these instead:
-#
-#CHECKUSER  := $(shell pwget -n $(USER) >/dev/null 2>/dev/null || (echo "echo User $(USER) nonexistent. Create the user and retry; exit 2"))
-#CHECKGROUP := $(shell grget -n $(GROUP) >/dev/null 2>/dev/null || (echo "echo Group $(GROUP) nonexistent. Create the group and retry; exit 2"))
-
-# For Cygwin, use these instead:
-#CHECKUSER  := $(shell id $(USER) >/dev/null 2>/dev/null || (echo "echo User $(USER) nonexistent. Create the user and retry; exit 2"))
-#CHECKGROUP := $(shell grep ^$(GROUP): /etc/group >/dev/null 2>/dev/null || (echo "echo Group $(GROUP) nonexistent. Create the group and retry; exit 2"))
-
 CHOWN      := chown
 CHMOD      := chmod
 CHGRP      := chgrp
