#!/bin/bash

# Slackware build script for lshw

# Iskar Enev <iskar.enev[@]gmail.com>
# Copyright 2017,2021 Jason Graham <jgraham@compukix.net> USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=lshw
VERSION=${VERSION:-B.02.19.2}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

GUI=${GUI:-yes}
if [ "$ZLIB" = "no" ]; then
    ENABLE_ZLIB=0
else
    ENABLE_ZLIB=1
fi
if [ "$SQLITE" = "no" ]; then
    ENABLE_SQLITE=0
else
    ENABLE_SQLITE=1
fi

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Fix the MANDIR variable
sed -i "s%MANDIR=\$(PREFIX)/share/man%MANDIR=\$(PREFIX)/man%" src/Makefile

VERSION=$VERSION RPM_OPT_FLAGS="$SLKCFLAGS" MANDIR="/usr/man" \
  make ZLIB=$ENABLE_ZLIB SQLITE=$ENABLE_SQLITE
if [ "$GUI" = "yes" ]; then
  VERSION=VERSION RPM_OPT_FLAGS="$SLKCFLAGS" MANDIR="/usr/man" \
    make gui ZLIB=$ENABLE_ZLIB SQLITE=$ENABLE_SQLITE
fi

VERSION=$VERSION RPM_OPT_FLAGS="$SLKCFLAGS" MANDIR="/usr/man" \
  make install DESTDIR=$PKG ZLIB=$ENABLE_ZLIB SQLITE=$ENABLE_SQLITE
if [ "$GUI" = "yes" ]; then
  VERSION=$VERSION RPM_OPT_FLAGS="$SLKCFLAGS" MANDIR="/usr/man" \
    make install-gui DESTDIR=$PKG ZLIB=$ENABLE_ZLIB SQLITE=$ENABLE_SQLITE
fi

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

if [ "$GUI" = "yes" ]; then
  mkdir -p $PKG/usr/share/applications
  cat $CWD/gtk-lshw.desktop > $PKG/usr/share/applications/gtk-lshw.desktop
fi

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a docs/* COPYING README.md $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
