#!/bin/bash

# Slackware build script for nut (Network UPS Tools)

# Copyright 2010 V'yacheslav Stetskevych <slava18 dont_spam_me gmail com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=nut
VERSION=${VERSION:-2.7.4}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

NUTUSER=${NUTUSER:-nut}
NUTGROUP=${NUTGROUP:-nut}

# The user and group accounts have to be created manually.
# For slackbuilds.org, assigned nut uid/gid are 218/218.
# See http://slackbuilds.org/uid_gid.txt
if ! grep -q ^$NUTGROUP: /etc/group; then
	echo "  You must have a \"$NUTGROUP\" group to run this script."
	echo "    # groupadd -g 218 $NUTGROUP"
	exit 1
elif ! grep -q ^$NUTUSER: /etc/passwd; then
	echo "  You must have a \"$NUTUSER\" user to run this script."
	echo "    # useradd -u 218 -g $NUTGROUP -s /bin/false $NUTUSER"
	exit 1
fi

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS -std=c++14" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc/$PRGNAM \
  --localstatedir=/var \
  --datadir=/usr/share/nut \
  --mandir=/usr/man \
  --docdir=/usr/doc/$PRGNAM-$VERSION \
  --build=$ARCH-slackware-linux \
  --enable-strip \
  --disable-static \
  --with-dev \
  --with-serial \
  --with-usb \
  --with-snmp \
  --with-neon \
  --with-wrap \
  --with-cgi\
  --with-cgipath=/var/www/cgi-bin/nut \
  --with-htmlpath=/var/www/htdocs/ups \
  --with-drvpath=/usr/libexec/nut \
  --with-statepath=/var/run/nut \
  --with-pidpath=/var/run/nut \
  --with-altpidpath=/var/run/nut \
  --with-user=nut \
  --with-group=nut
make
make install DESTDIR=$PKG

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

# Install the bash_completion script
install -d $PKG/usr/share/bash-completion/completions
install -m 755 scripts/misc/nut.bash_completion $PKG/usr/share/bash-completion/completions/nut

# Install the startup script
install -d $PKG/etc/rc.d
install -m 644 $CWD/rc.ups $PKG/etc/rc.d/rc.ups.new

# Create the state and run dirs
install -d -o root -g $NUTGROUP -m 770 $PKG/var/state/ups
install -d -o $NUTUSER -g $NUTGROUP -m 770 $PKG/var/run/nut

# Install shutdown helper files
install -m 755 $CWD/nut_restart_udev $CWD/nut_kill_inverter $PKG/usr/libexec/nut

# Install documentation
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -ar docs \
  AUTHORS COPYING ChangeLog INSTALL MAINTAINERS NEWS README UPGRADING \
  $PKG/usr/doc/$PRGNAM-$VERSION
rm $PKG/usr/doc/$PRGNAM-$VERSION/docs/Makefile*
cat $CWD/README.SLACKWARE > $PKG/usr/doc/$PRGNAM-$VERSION/README.SLACKWARE
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
