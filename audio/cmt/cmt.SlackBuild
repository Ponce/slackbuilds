#!/bin/bash

# Slackware build script for cmt

# Written by B. Watson (yalhcru@gmail.com)

# Licensed under the WTFPL. See http://www.wtfpl.net/txt/copying/ for details.

# 20211127 bkw: update for v1.18, can still build 1.16 and 1.17.
# 20191210 bkw: Update for v1.17. Script can still build v1.16.

cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=cmt
VERSION=${VERSION:-1.18}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PKGTYPE=${PKGTYPE:-tgz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE"
  exit 0
fi

TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

# 20191210 bkw: v1.16 tarball has _src_ in the filename, v1.17 doesn't. Be
# flexible, there's a good case to be made for allowing users to build
# the older version (if their old ardour projects use it, and if the
# new version changed the parameters to some plugin they're using...)
for i in ${PRGNAM}_src_$VERSION.tgz ${PRGNAM}_$VERSION.tgz; do
  [ -e "$i" ] && TARBALL="$i"
done

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM ${PRGNAM}_${VERSION}
tar xvf $CWD/$TARBALL
# v1.16    || v1.17 and up
cd $PRGNAM || cd ${PRGNAM}_${VERSION}
chown -R root:root .
find -L .  -perm /111 -a \! -perm 755 -a -exec chmod 755 {} \+ -o \
        \! -perm /111 -a \! -perm 644 -a -exec chmod 644 {} \+
chmod 644 doc/*

# 20211127 bkw: *hate* when people leave this enabled in a release.
# not everyone uses exactly the same compiler version as upstream...
sed -i 's,-Werror,,g' src/?akefile

# 20211127 bkw: upstream actually switched to -O2 -fPIC, leave this
# here in case it changes again, in a future release.
if [ "${FORCE_SLACK_CFLAGS:-no}" = "yes" ]; then
  for i in makefile Makefile; do
    [ -e src/$i ] && MF=$i
  done
  sed -i 's/-O3/'"$SLKCFLAGS"'/' src/$MF
fi

# Fix glibc double-free errors when cmt-1.16's sine and ladspa_sdk's sine
# both get loaded into the same ladspa host. Sent patch upstream, it was
# included in the 1.17 src, so only patch if we're building 1.16.
[ "$VERSION" = "1.16" ] && patch -p1 < $CWD/fix_sine.diff

make -C src
mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/ladspa
make -C src install INSTALL_PLUGINS_DIR=$PKG/usr/lib$LIBDIRSUFFIX/ladspa

# binary already stripped

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a README doc/* $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
